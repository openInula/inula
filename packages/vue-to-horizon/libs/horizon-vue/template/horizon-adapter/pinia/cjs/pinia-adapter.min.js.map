{"version":3,"file":"pinia-adapter.min.js","sources":["../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../../src/pinia/pinia.ts"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/*\n * Copyright (c) 2024 Huawei Technologies Co.,Ltd.\n *\n * openInula is licensed under Mulan PSL v2.\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\n * You may obtain a copy of Mulan PSL v2 at:\n *\n *          http://license.coscl.org.cn/MulanPSL2\n *\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\n * See the Mulan PSL v2 for more details.\n */\nimport { createStore, StoreObj, vueReactive } from '@cloudsop/horizon';\nimport {\n  FilterAction,\n  FilterComputed,\n  FilterState,\n  StoreDefinition,\n  StoreSetup,\n  Store,\n  AnyFunction,\n  ActionType,\n  StoreToRefsReturn,\n} from './types';\n\nconst { ref, isRef, toRef, isReactive, isReadonly } = vueReactive;\n\nconst storeMap = new Map<string, any>();\n\nexport function defineStore<\n  Id extends string,\n  S extends Record<string, unknown>,\n  A extends Record<string, AnyFunction>,\n  C extends Record<string, AnyFunction>,\n>(definition: StoreDefinition<Id, S, A, C>): (pinia?: any) => Store<S, A, C>;\n\nexport function defineStore<\n  Id extends string,\n  S extends Record<string, unknown>,\n  A extends Record<string, AnyFunction>,\n  C extends Record<string, AnyFunction>,\n>(id: Id, definition: Omit<StoreDefinition<Id, S, A, C>, 'id'>): (pinia?: any) => Store<S, A, C>;\n\nexport function defineStore<Id extends string, SS extends Record<any, unknown>>(\n  id: Id,\n  setup: StoreSetup<SS>\n): (pinia?: any) => Store<FilterState<SS>, FilterAction<SS>, FilterComputed<SS>>;\n\nexport function defineStore(idOrDef: any, setupOrDef?: any) {\n  let id: string;\n  let definition: StoreDefinition | StoreSetup;\n  let isSetup = false;\n\n  if (typeof idOrDef === 'string') {\n    isSetup = typeof setupOrDef === 'function';\n    id = idOrDef;\n    definition = setupOrDef;\n  } else {\n    id = idOrDef.id;\n    definition = idOrDef;\n  }\n\n  if (isSetup) {\n    return defineSetupStore(id, definition as StoreSetup);\n  } else {\n    return defineOptionsStore(id, definition as StoreDefinition);\n  }\n}\n\n/**\n * createStore实现中会给actions增加第一个参数store，pinia不需要，所以需要去掉\n * @param actions\n */\nfunction enhanceActions(\n  actions?: ActionType<Record<string, AnyFunction>, Record<string, unknown>, Record<string, AnyFunction>>\n) {\n  if (!actions) {\n    return {};\n  }\n\n  return Object.fromEntries(\n    Object.entries(actions).map(([key, value]) => {\n      return [\n        key,\n        function (this: StoreObj, state: Record<string, unknown>, ...args: any[]) {\n          return value.bind(this)(...args);\n        },\n      ];\n    })\n  );\n}\n\nfunction defineOptionsStore(id: string, definition: StoreDefinition) {\n  const state = definition.state ? definition.state() : {};\n  const computed = definition.getters || {};\n  const actions = enhanceActions(definition.actions) || {};\n\n  return () => {\n    if (storeMap.has(id)) {\n      return storeMap.get(id)!();\n    }\n\n    const useStore = createStore({\n      id,\n      state,\n      actions,\n      computed,\n    });\n\n    storeMap.set(id, useStore);\n\n    return useStore();\n  };\n}\n\nfunction defineSetupStore<SS extends Record<string, unknown>>(id: string, storeSetup: StoreSetup<SS>) {\n  return () => {\n    const data = storeSetup();\n    if (!data) {\n      return {};\n    }\n\n    if (storeMap.has(id)) {\n      return storeMap.get(id)!();\n    }\n\n    const state: Record<string, unknown> = {};\n    const actions: Record<string, AnyFunction> = {};\n    const getters: Record<string, AnyFunction> = {};\n    for (const key in data) {\n      const prop = data[key];\n\n      if ((isRef(prop) && !isReadonly(prop)) || isReactive(prop)) {\n        // state\n        state[key] = prop;\n      } else if (typeof prop === 'function') {\n        // action\n        actions[key] = prop as AnyFunction;\n      } else if (isRef(prop) && isReadonly(prop)) {\n        // getters\n        getters[key] = (prop as any).getter as AnyFunction;\n      }\n    }\n\n    const useStore = createStore({\n      id,\n      state,\n      computed: getters,\n      actions: enhanceActions(actions),\n    });\n\n    storeMap.set(id, useStore);\n\n    return useStore();\n  };\n}\n\nexport function mapStores<\n  S extends Record<string, unknown>,\n  A extends Record<string, AnyFunction>,\n  C extends Record<string, AnyFunction>,\n>(...stores: (() => Store<S, A, C>)[]): { [key: string]: () => Store<S, A, C> } {\n  const result: { [key: string]: () => Store<S, A, C> } = {};\n\n  stores.forEach((store: () => Store<S, A, C>) => {\n    const expandedStore = store();\n    result[`${expandedStore.id}Store`] = () => expandedStore;\n  });\n\n  return result;\n}\n\nexport function storeToRefs<\n  S extends Record<string, unknown>,\n  A extends Record<string, AnyFunction>,\n  C extends Record<string, AnyFunction>,\n>(store: Store<S, A, C>): StoreToRefsReturn<S, C> {\n  const stateRefs = Object.fromEntries(\n    Object.entries(store.$s || {}).map(([key, value]) => {\n      return [key, ref(value)];\n    })\n  );\n\n  const getterRefs = Object.fromEntries(\n    Object.entries(store.$config.computed || {}).map(([key, value]) => {\n      const computeFn = (value as () => any).bind(store, store.$s);\n      return [key, toRef(computeFn)];\n    })\n  );\n\n  return { ...stateRefs, ...getterRefs } as StoreToRefsReturn<S, C>;\n}\n\nexport function createPinia() {\n  console.warn(\n    `The pinia-adapter in Horizon does not support the createPinia interface. Please modify your code accordingly.`\n  );\n\n  const result = {\n    install: (app: any) => {},\n    use: (plugin: any) => result,\n    state: {},\n  };\n\n  return result;\n}\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ref","vueReactive","isRef","toRef","isReactive","isReadonly","storeMap","Map","enhanceActions","actions","fromEntries","entries","map","_ref","value","state","_len","args","Array","_key","console","warn","result","install","app","use","plugin","idOrDef","setupOrDef","id","definition","isSetup","storeSetup","data","has","get","getters","prop","getter","useStore","createStore","computed","set","defineSetupStore","defineOptionsStore","_len2","stores","_key2","forEach","store","expandedStore","$s","_ref2","$config","_ref3","computeFn"],"mappings":"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"}