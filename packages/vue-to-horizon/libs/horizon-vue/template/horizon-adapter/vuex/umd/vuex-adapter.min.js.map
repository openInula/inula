{"version":3,"file":"vuex-adapter.min.js","sources":["../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../../src/vuex/vuex.ts","../../../src/vuex/maps.ts"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/*\r\n * Copyright (c) 2024 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { createStore as createStoreX, StoreObj, vueReactive } from '@cloudsop/horizon';\r\nimport { VuexStore, VuexStoreOptions } from './types';\r\nimport { AnyFunction } from '../vuex/types';\r\n\r\nconst { watch, useComputed, computed } = vueReactive;\r\n\r\nexport const MUTATION_PREFIX = 'm_';\r\nexport const GETTER_PREFIX = 'g_';\r\n\r\nconst storeMap = new Map<string, any>();\r\n\r\n// 用于保存storeX对象的getStoreX方法，主要是为了调用registerDestroyFunction\r\nlet getStoreXCache: null | (() => StoreObj) = null;\r\n\r\ntype GettersMap<T extends StoreObj = StoreObj> = {\r\n  [K in keyof T['$c']]: ReturnType<T['$c'][K]>;\r\n};\r\n\r\nexport function createStore<\r\n  State extends Record<string, unknown> = Record<string, unknown>,\r\n  Mutations extends Record<string, AnyFunction> = Record<string, AnyFunction>,\r\n  Actions extends Record<string, AnyFunction> = Record<string, AnyFunction>,\r\n  Getters extends Record<string, AnyFunction> = Record<string, AnyFunction>,\r\n  RootState extends Record<string, unknown> = Record<string, unknown>,\r\n  RootGetters extends Record<string, AnyFunction> = Record<string, AnyFunction>,\r\n  Modules extends Record<string, Record<string, unknown>> = Record<string, Record<string, unknown>>,\r\n>(\r\n  options: VuexStoreOptions<State, Mutations, Actions, Getters, RootState, RootGetters, Modules>\r\n): VuexStore<State, Getters, Modules> {\r\n  const modules = options.modules || {};\r\n\r\n  const _modules: Record<string, { storeX: StoreObj; namespaced: boolean }> = {};\r\n\r\n  const _getters: GettersMap = {};\r\n\r\n  const vuexStore: VuexStore = {\r\n    state: new Proxy(\r\n      {},\r\n      {\r\n        get: (_, key) => {\r\n          if (key in _modules) {\r\n            const storeX = _modules[key as string].storeX;\r\n            return storeX;\r\n          } else {\r\n            return rootStoreX[key as string];\r\n          }\r\n        },\r\n      }\r\n    ),\r\n    getters: new Proxy(\r\n      {},\r\n      {\r\n        get: (_, key) => {\r\n          if (typeof key === 'string') {\r\n            // 如果key包含/，说明是访问模块的getters，进行split\r\n            if (key.includes('/')) {\r\n              const [moduleName, getterKey] = key.split('/');\r\n              const storeX = _modules[moduleName].storeX;\r\n              return storeX[`${GETTER_PREFIX}${getterKey}`];\r\n            } else {\r\n              return _getters[`${GETTER_PREFIX}${key}`];\r\n            }\r\n          }\r\n        },\r\n      }\r\n    ),\r\n    commit: (_type, _payload, _options, moduleName) => {\r\n      const { type, payload, options } = prepareTypeParams(_type, _payload, _options);\r\n      // 如果options.root为true，调用根store的action\r\n      if (options?.root) {\r\n        return rootStoreX[`${MUTATION_PREFIX}${type}`](payload);\r\n      }\r\n\r\n      // 包含/，说明是访问模块的mutation\r\n      if (type.includes('/')) {\r\n        const [moduleName, key] = type.split('/');\r\n        return _modules[moduleName].storeX[`${MUTATION_PREFIX}${key}`](payload);\r\n      }\r\n\r\n      if (moduleName != undefined) {\r\n        // dispatch到指定的module\r\n        return _modules[moduleName].storeX[`${MUTATION_PREFIX}${type}`](payload);\r\n      }\r\n\r\n      // 调用所有非namespaced的modules的mutation\r\n      Object.values(_modules).forEach(module => {\r\n        if (!module.namespaced) {\r\n          const mutation = module.storeX[`${MUTATION_PREFIX}${type}`];\r\n          if (typeof mutation === 'function') {\r\n            mutation(payload);\r\n          }\r\n        }\r\n      });\r\n\r\n      // 调用storeX对象上的方法\r\n      if (rootStoreX[`${MUTATION_PREFIX}${type}`]) {\r\n        rootStoreX[`${MUTATION_PREFIX}${type}`](payload);\r\n      }\r\n    },\r\n    dispatch: (_type, _payload, _options, moduleName) => {\r\n      const { type, payload, options } = prepareTypeParams(_type, _payload, _options);\r\n      // 如果options.root为true，调用根store的action\r\n      if (options?.root) {\r\n        return rootStoreX[type](payload);\r\n      }\r\n\r\n      // 包含/，说明是访问模块的action\r\n      if (type.includes('/')) {\r\n        const [moduleName, key] = type.split('/');\r\n        return _modules[moduleName].storeX[key](payload);\r\n      }\r\n\r\n      if (moduleName != undefined) {\r\n        // dispatch到指定的module\r\n        return _modules[moduleName].storeX[type](payload);\r\n      }\r\n\r\n      // 把每个action的返回值合并起来，支持then链式调用\r\n      const results: any[] = [];\r\n\r\n      // 调用所有非namespaced的modules的action\r\n      Object.values(_modules).forEach(module => {\r\n        if (!module.namespaced) {\r\n          const action = module.storeX[type];\r\n          if (typeof action === 'function') {\r\n            results.push(action(payload));\r\n          }\r\n        }\r\n      });\r\n\r\n      // 调用storeX对象上的方法\r\n      if (typeof rootStoreX[type] === 'function') {\r\n        results.push(rootStoreX[type](payload));\r\n      }\r\n\r\n      // 返回一个Promise，内容是results，支持then链式调用\r\n      return Promise.all(results);\r\n    },\r\n    subscribe(fn) {\r\n      return rootStoreX.$subscribe(fn);\r\n    },\r\n    subscribeAction(fn) {\r\n      return rootStoreX.$subscribe(fn);\r\n    },\r\n    watch(fn, cb) {\r\n      watch(() => fn(vuexStore.state, vuexStore.getters), cb);\r\n    },\r\n    // 动态注册模块\r\n    registerModule(key, module) {\r\n      _modules[key] = { storeX: _createStoreX(key, module, vuexStore, rootStoreX), namespaced: !!module.namespaced };\r\n      collectGetters(_modules[key].storeX, _getters);\r\n    },\r\n    // 动态注销模块\r\n    unregisterModule(moduleName) {\r\n      deleteGetters(_modules[moduleName].storeX, _getters);\r\n      delete _modules[moduleName];\r\n    },\r\n    hasModule(moduleName) {\r\n      return moduleName in _modules;\r\n    },\r\n    getModule(moduleName) {\r\n      return _modules[moduleName]?.storeX;\r\n    },\r\n    install(app, key) {\r\n      registerStore(this, key || storeKey);\r\n    },\r\n  };\r\n\r\n  const rootStoreX = _createStoreX(undefined, options as VuexStoreOptions, vuexStore);\r\n  collectGetters(rootStoreX, _getters);\r\n\r\n  // 递归创建子模块\r\n  for (const [moduleName, moduleOptions] of Object.entries(modules)) {\r\n    _modules[moduleName] = {\r\n      storeX: _createStoreX(moduleName, moduleOptions as VuexStoreOptions, vuexStore, rootStoreX),\r\n      namespaced: !!(moduleOptions as VuexStoreOptions).namespaced,\r\n    };\r\n    collectGetters(_modules[moduleName].storeX, _getters);\r\n  }\r\n\r\n  return vuexStore as VuexStore<State, Getters, Modules>;\r\n}\r\n\r\nexport function prepareTypeParams(\r\n  type: string | (Record<string, unknown> & { type: string }),\r\n  payload?: any,\r\n  options?: Record<string, unknown>\r\n) {\r\n  if (typeof type === 'object' && type.type) {\r\n    options = payload;\r\n    payload = type;\r\n    type = type.type;\r\n  }\r\n\r\n  return { type, payload, options } as {\r\n    type: string;\r\n    payload: any;\r\n    options: Record<string, unknown>;\r\n  };\r\n}\r\n\r\nfunction _createStoreX(\r\n  moduleName: string | undefined,\r\n  options: VuexStoreOptions,\r\n  store: VuexStore,\r\n  rootStoreX?: any\r\n): StoreObj {\r\n  const { mutations = {}, actions = {}, getters = {} } = options;\r\n  const state = typeof options.state === 'function' ? options.state() : options.state;\r\n\r\n  const getStoreX: () => StoreObj = createStoreX({\r\n    id: moduleName,\r\n    state: state,\r\n    actions: {\r\n      // 给mutations的key增加一个前缀，避免和actions的key冲突\r\n      ...Object.fromEntries(\r\n        Object.entries(mutations).map(([key, mutation]) => {\r\n          return [`${MUTATION_PREFIX}${key}`, mutation];\r\n        })\r\n      ),\r\n      // 重新定义action的方法，绑定this，修改第一参数\r\n      ...Object.fromEntries(\r\n        Object.entries(actions).map(([key, action]) => [\r\n          key,\r\n          function (this: StoreObj, state: Record<string, unknown>, payload) {\r\n            rootStoreX = rootStoreX || storeX;\r\n            const argFirst = {\r\n              ...store,\r\n              // 覆盖commit方法，多传一个参数moduleName\r\n              commit: (\r\n                type: string | (Record<string, unknown> & { type: string }),\r\n                payload?: any,\r\n                options?: Record<string, unknown>\r\n              ) => {\r\n                store.commit(type, payload, options, moduleName);\r\n              },\r\n              // 覆盖dispatch方法，多传一个参数moduleName\r\n              dispatch: (\r\n                type: string | (Record<string, unknown> & { type: string }),\r\n                payload?: any,\r\n                options?: Record<string, unknown>\r\n              ) => {\r\n                return store.dispatch(type, payload, options, moduleName);\r\n              },\r\n              state: storeX.$state,\r\n              rootState: store.state,\r\n              getter: store.getters,\r\n              rootGetters: moduleGettersProxy(rootStoreX),\r\n            };\r\n\r\n            return action.call(storeX, argFirst, payload);\r\n          },\r\n        ])\r\n      ),\r\n    },\r\n    computed: {\r\n      ...Object.fromEntries(\r\n        Object.entries(getters).map(([key, getter]) => {\r\n          return [\r\n            // 给getters的key增加一个前缀，避免和actions, mutations的key冲突\r\n            `${GETTER_PREFIX}${key}`,\r\n            // 重新定义getter的方法，绑定this，修改参数: state, getters, rootState, rootGetters\r\n            function (state: Record<string, unknown>) {\r\n              rootStoreX = rootStoreX || storeX;\r\n              return getter.call(\r\n                storeX,\r\n                storeX.$state,\r\n                store.getters,\r\n                rootStoreX.$state,\r\n                moduleGettersProxy(rootStoreX)\r\n              );\r\n            },\r\n          ];\r\n        })\r\n      ),\r\n    },\r\n  });\r\n\r\n  const storeX = getStoreX();\r\n  if (getStoreXCache === null) {\r\n    getStoreXCache = getStoreX;\r\n  }\r\n\r\n  return storeX;\r\n}\r\n\r\nfunction collectGetters(storeX: StoreObj, gettersMap: GettersMap): void {\r\n  Object.keys(storeX.$config.computed).forEach(type => {\r\n    Object.defineProperty(gettersMap, type, {\r\n      get: () => {\r\n        return storeX.$c[type];\r\n      },\r\n      configurable: true,\r\n    });\r\n  });\r\n}\r\n\r\nfunction deleteGetters(storeX: StoreObj, gettersMap: GettersMap): void {\r\n  Object.keys(storeX.$config.computed).forEach(type => {\r\n    // 删除Object.defineProperty定义的属性\r\n    Object.defineProperty(gettersMap, type, {\r\n      value: undefined,\r\n      writable: true,\r\n      enumerable: true,\r\n      configurable: true,\r\n    });\r\n    delete gettersMap[type];\r\n  });\r\n}\r\n\r\nexport function moduleGettersProxy(storeX: StoreObj) {\r\n  return new Proxy(\r\n    {},\r\n    {\r\n      get: (_, key) => {\r\n        return storeX[`${GETTER_PREFIX}${key as string}`];\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nexport const storeKey = 'DEFAULT_VUEX_STORE';\r\n\r\nexport function useStore(key = storeKey) {\r\n  getStoreXCache!();\r\n  return storeMap.get(key);\r\n}\r\n\r\nexport function registerStore(store: VuexStore, key = storeKey) {\r\n  storeMap.set(key, store);\r\n}\r\n","/*\r\n * Copyright (c) 2024 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { moduleGettersProxy, useStore } from './vuex';\r\nimport { vueReactive, useRef, ComputedImpl } from '@cloudsop/horizon';\r\n\r\nconst { computed } = vueReactive;\r\n\r\nexport const useMapState = (moduleName, states) => {\r\n  const store = useStore();\r\n  const objRef = useRef<null | { [key: string]: ComputedImpl }>(null);\r\n  if (objRef.current === null) {\r\n    if (typeof moduleName !== 'string') {\r\n      states = moduleName;\r\n      moduleName = '';\r\n    }\r\n\r\n    objRef.current = {};\r\n\r\n    toArray(states).forEach(({ key, val }) => {\r\n      let state = store.state;\r\n      let getters = store.getters;\r\n      if (moduleName) {\r\n        const storeX = store.getModule(moduleName);\r\n        if (!storeX) {\r\n          return;\r\n        }\r\n        state = storeX.$state;\r\n        getters = moduleGettersProxy(storeX);\r\n      }\r\n\r\n      if (typeof val === 'function') {\r\n        objRef.current![key] = computed(function () {\r\n          return val(state, getters);\r\n        });\r\n      } else {\r\n        objRef.current![key] = computed(function () {\r\n          return state[val];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return objRef.current;\r\n};\r\n\r\nexport const useMapGetters = (moduleName, getters) => {\r\n  const store = useStore();\r\n  const objRef = useRef<null | { [key: string]: ComputedImpl }>(null);\r\n  if (objRef.current === null) {\r\n    if (typeof moduleName !== 'string') {\r\n      getters = moduleName;\r\n      moduleName = '';\r\n    }\r\n\r\n    objRef.current = {};\r\n\r\n    toArray(getters).forEach(({ key, val }) => {\r\n      if (moduleName) {\r\n        val = `${moduleName}/${val}`;\r\n      }\r\n\r\n      objRef.current![key] = computed(function () {\r\n        return store.getters[val];\r\n      });\r\n    });\r\n  }\r\n\r\n  return objRef.current;\r\n};\r\n\r\nexport const useMapMutations = (moduleName, mutations) => {\r\n  const store = useStore();\r\n  const objRef = useRef<null | { [key: string]: () => any }>(null);\r\n  if (objRef.current === null) {\r\n    if (typeof moduleName !== 'string') {\r\n      mutations = moduleName;\r\n      moduleName = '';\r\n    }\r\n\r\n    objRef.current = {};\r\n\r\n    toArray(mutations).forEach(({ key, val }) => {\r\n      let commit = store.commit;\r\n\r\n      if (moduleName) {\r\n        commit = (...args) => {\r\n          store.commit(args[0], args[1], args[2], moduleName);\r\n        };\r\n      }\r\n\r\n      if (typeof val === 'function') {\r\n        objRef.current![key] = function (...args) {\r\n          return val.apply(this, [commit].concat(args));\r\n        };\r\n      } else {\r\n        objRef.current![key] = function (...args) {\r\n          return commit.apply(store, [val].concat(args));\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  return objRef.current;\r\n};\r\n\r\nexport const useMapActions = (moduleName, actions) => {\r\n  const store = useStore();\r\n  const objRef = useRef<null | { [key: string]: () => any }>(null);\r\n  if (objRef.current === null) {\r\n    if (typeof moduleName !== 'string') {\r\n      actions = moduleName;\r\n      moduleName = '';\r\n    }\r\n\r\n    objRef.current = {};\r\n\r\n    toArray(actions).forEach(({ key, val }) => {\r\n      let dispatch = store.dispatch;\r\n\r\n      if (moduleName) {\r\n        dispatch = (...args) => {\r\n          store.dispatch(args[0], args[1], args[2], moduleName);\r\n        };\r\n      }\r\n\r\n      if (typeof val === 'function') {\r\n        objRef.current![key] = function (...args) {\r\n          return val.apply(this, [dispatch].concat(args));\r\n        };\r\n      } else {\r\n        objRef.current![key] = function (...args) {\r\n          return dispatch.apply(store, [val].concat(args));\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  return objRef.current;\r\n};\r\n\r\nfunction toArray(map) {\r\n  if (!(Array.isArray(map) || (map !== null && typeof map === 'object'))) {\r\n    return [];\r\n  }\r\n  return Array.isArray(map)\r\n    ? map.map(key => ({ key, val: key }))\r\n    : Object.keys(map).map(key => ({ key, val: map[key] }));\r\n}\r\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","watch","vueReactive","useComputed","computed","MUTATION_PREFIX","storeMap","Map","getStoreXCache","prepareTypeParams","type","payload","options","_createStoreX","moduleName","store","rootStoreX","_options$mutations","mutations","_options$actions","actions","_options$getters","getters","state","getStoreX","createStoreX","id","fromEntries","entries","map","_ref","_ref2","action","storeX","argFirst","commit","dispatch","$state","rootState","getter","rootGetters","moduleGettersProxy","_ref3","collectGetters","gettersMap","keys","$config","forEach","defineProperty","get","$c","configurable","Proxy","_","storeKey","useStore","undefined","registerStore","set","toArray","Array","isArray","val","modules","_modules","_getters","vuexStore","includes","_key$split","split","getterKey","_type","_payload","_options","_prepareTypeParams","root","_type$split","values","module","namespaced","mutation","_prepareTypeParams2","_type$split2","results","push","Promise","all","subscribe","fn","$subscribe","subscribeAction","cb","registerModule","unregisterModule","value","writable","enumerable","hasModule","getModule","_modules$moduleName","install","app","_i","_Object$entries","_Object$entries$_i","moduleOptions","objRef","useRef","current","_ref4","_len3","args","_key3","concat","_len4","_key4","_len","_key","_len2","_key2","states"],"mappings":"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"}