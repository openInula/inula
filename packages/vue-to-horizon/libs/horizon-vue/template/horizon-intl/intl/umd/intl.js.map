{"version":3,"file":"intl.js","sources":["../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../src/intl/format/cache/cache.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../../src/intl/utils/parseRuleUtils.ts","../../../src/intl/parser/Lexer.ts","../../../src/intl/parser/mappingRule.ts","../../../src/intl/constants/index.ts","../../../src/intl/parser/parseMappingRule.ts","../../../src/intl/parser/parser.ts","../../../src/intl/utils/getTokenAST.ts","../../../src/intl/utils/utils.ts","../../../src/intl/format/fomatters/DateTimeFormatter.ts","../../../src/intl/format/fomatters/NumberFormatter.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../src/intl/utils/eventListener.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../src/intl/format/fomatters/PluralFormatter.ts","../../../src/intl/format/fomatters/SelectFormatter.ts","../../../src/intl/format/generateFormatters.ts","../../../src/intl/format/Translation.ts","../../../src/intl/utils/formatElements.ts","../../../src/intl/format/getFormatMessage.ts","../../../src/intl/core/I18n.ts","../../../src/intl/core/components/FormattedMessage.tsx","../../../src/intl/utils/copyStaticProps.ts","../../../src/intl/core/components/InjectI18n.tsx","../../../src/intl/core/components/I18nProvider.tsx","../../../src/intl/core/hook/useIntl.ts","../../../src/intl/core/createIntl.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/get.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../src/vueI18n/constants/index.ts","../../../src/vueI18n/utils/utils.ts","../../../src/vueI18n/utils/parseMsgParamUtils.ts","../../../src/vueI18n/VueI18n.ts","../../../src/vueI18n/hooks/createI18n.ts","../../../src/vueI18n/hooks/useI18n.ts","../../../src/vueI18n/hooks/useLocalMessage.ts","../../../src/vueI18n/index.ts","../../../src/intl/index.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 缓存机制\r\n */\r\nfunction creatI18nCache(): I18nCache {\r\n  return {\r\n    dateTimeFormat: {},\r\n    numberFormat: {},\r\n    plurals: {},\r\n    select: {},\r\n    octothorpe: {},\r\n  };\r\n}\r\n\r\nexport default creatI18nCache;\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nfunction getType(input: any): string {\r\n  const str: string = Object.prototype.toString.call(input);\r\n  return str.slice(8, -1).toLowerCase();\r\n}\r\n\r\n// 类型检查器\r\nconst createTypeChecker = (type: string) => {\r\n  return (input: any) => {\r\n    return getType(input) === type.toLowerCase();\r\n  };\r\n};\r\n\r\nconst checkObject = (input: any) => input !== null && typeof input === 'object';\r\n\r\nconst checkRegExp = createTypeChecker('RegExp');\r\n\r\n// 使用正则表达式，如果对象存在则访问该属性，用来判断当前环境是否支持正则表达式sticky属性。\r\nconst checkSticky = () => typeof new RegExp('')?.sticky === 'boolean';\r\n\r\n// 转义正则表达式中的特殊字符\r\nfunction transferReg(str: string): string {\r\n  // eslint-disable-next-line\r\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n\r\n// 计算正则表达式中捕获组的数量，用以匹配（）\r\nfunction getRegGroups(str: string): number {\r\n  const regExp = new RegExp('|' + str);\r\n  // eslint-disable-next-line\r\n  return regExp.exec('')?.length! - 1;\r\n}\r\n\r\n// 创建一个捕获组的正则表达式模式\r\nfunction getRegCapture(str: string): string {\r\n  return '(' + str + ')';\r\n}\r\n\r\n// 将正则表达式合并为一个联合的正则表达式模式\r\nfunction getRegUnion(regexps: string[]): string {\r\n  if (!regexps.length) {\r\n    return '(?!)';\r\n  }\r\n  const source = regexps.map(str => '(?:' + str + ')').join('|');\r\n  return '(?:' + source + ')';\r\n}\r\n\r\nfunction getReg(input: string | Record<string, any>): string {\r\n  if (typeof input === 'string') {\r\n    return '(?:' + transferReg(input) + ')';\r\n  } else if (checkRegExp(input) || checkObject(input)) {\r\n    if (input.ignoreCase) {\r\n      throw new Error('/i prohibition sign');\r\n    }\r\n    if (input.global) {\r\n      throw new Error('/g prohibition sign');\r\n    }\r\n    if (input.sticky) {\r\n      throw new Error('/y prohibition sign');\r\n    }\r\n    if (input.multiline) {\r\n      throw new Error('/m prohibition sign');\r\n    }\r\n    return input.source;\r\n  } else {\r\n    throw new Error(`${input}Non-conformance to specifications!`);\r\n  }\r\n}\r\n\r\nfunction getRulesByObject(object: Record<string, any>) {\r\n  const keys = Object.getOwnPropertyNames(object);\r\n\r\n  // 存储最终的规则数组\r\n  const result: any[] = [];\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const thing = object[key];\r\n\r\n    // 将属性值转换为规则数组\r\n    const rules = [].concat(thing);\r\n\r\n    // 如果属性名为 'include'，表示需要包含其他规则\r\n    if (key === 'include') {\r\n      for (let j = 0; j < rules.length; j++) {\r\n        result.push({ include: rules[j] });\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // 用于保存当前规则的匹配模式\r\n    let match = [];\r\n    rules.forEach(function (rule) {\r\n      if (checkObject(rule)) {\r\n        // 如果规则是一个对象，表示具有选项设置，添加该规则到结果数组中，并重置匹配模式数组\r\n        if (match.length) result.push(getRuleOptions(key, match));\r\n        result.push(getRuleOptions(key, rule));\r\n        match = [];\r\n      } else {\r\n        match.push(rule);\r\n      }\r\n    });\r\n\r\n    // 如果匹配模式数组中还有剩余的匹配模式，创建规则对象并添加到结果数组中\r\n    if (match.length) result.push(getRuleOptions(key, match));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getRulesByArray(array: any[]) {\r\n  const result: any[] = [];\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    const obj = array[i];\r\n\r\n    // 如果元素具有 'include' 属性，表示需要包含其他规则\r\n    if (obj.include) {\r\n      const include = [].concat(obj.include);\r\n      for (let j = 0; j < include.length; j++) {\r\n        result.push({ include: include[j] });\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (!obj.type) {\r\n      throw new Error('The rule does not have the type attribute.');\r\n    }\r\n    result.push(getRuleOptions(obj.type, obj));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getRuleOptions(type: any, obj: any) {\r\n  // 如果 obj 不是一个对象，则将其转换为包含 'match' 属性的对象\r\n  if (!checkObject(obj)) {\r\n    obj = { match: obj };\r\n  }\r\n\r\n  // 如果 obj 包含 'include' 属性，则抛出错误，因为匹配规则不能包含状态\r\n  if (obj.include) {\r\n    throw new Error('The matching rule cannot contain the status!');\r\n  }\r\n\r\n  // 创建默认的选项对象，初始化各个选项属性\r\n  const options: Record<string, any> = {\r\n    defaultType: type,\r\n    lineBreaks: !!obj.error || !!obj.fallback,\r\n    pop: false,\r\n    next: null,\r\n    push: null,\r\n    error: false,\r\n    fallback: false,\r\n    value: null,\r\n    type: null,\r\n    shouldThrow: false,\r\n  };\r\n\r\n  Object.assign(options, obj);\r\n\r\n  if (typeof options.type === 'string' && type !== options.type) {\r\n    throw new Error('The type attribute cannot be a string.');\r\n  }\r\n\r\n  const match = options.match;\r\n  if (Array.isArray(match)) {\r\n    options.match = match;\r\n  } else if (match) {\r\n    options.match = [match];\r\n  } else {\r\n    options.match = [];\r\n  }\r\n  options.match.sort((str1: string, str2: string) => {\r\n    // 根据规则的类型进行排序，确保正则表达式排在最前面，长度较长的规则排在前面\r\n    if (checkRegExp(str1) && checkRegExp(str2)) {\r\n      return 0;\r\n    } else if (checkRegExp(str2)) {\r\n      return -1;\r\n    } else if (checkRegExp(str1)) {\r\n      return +1;\r\n    } else {\r\n      return str2.length - str1.length;\r\n    }\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\nfunction getRules(spec: any) {\r\n  return Array.isArray(spec) ? getRulesByArray(spec) : getRulesByObject(spec);\r\n}\r\n\r\nconst ruleUtils = {\r\n  checkObject,\r\n  checkRegExp,\r\n  transferReg,\r\n  checkSticky,\r\n  getRegGroups,\r\n  getRegCapture,\r\n  getRegUnion,\r\n  getReg,\r\n  getRulesByObject,\r\n  getRulesByArray,\r\n  getRuleOptions,\r\n  getRules,\r\n};\r\n\r\nexport default ruleUtils;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport ruleUtils from '../utils/parseRuleUtils';\r\nimport { LexerInterface } from '../types/interfaces';\r\n\r\n/**\r\n * 词法解析器，主要根据设计的规则对message进行处理成Token\r\n */\r\nclass Lexer<T> implements LexerInterface<T> {\r\n  readonly startState: string;\r\n  readonly unionReg: Record<string, any>;\r\n  private buffer = '';\r\n  private stack: string[] = [];\r\n  private index = 0;\r\n  private line = 1;\r\n  private col = 1;\r\n  private queuedText = '';\r\n  private state = '';\r\n  private groups: string[] = [];\r\n  private error: Record<string, any> | undefined;\r\n  private regexp: any;\r\n  private fast: Record<string, unknown> = {};\r\n  private queuedGroup: string | null = '';\r\n  private value = '';\r\n\r\n  constructor(unionReg: Record<string, any>, startState: string) {\r\n    this.startState = startState;\r\n    this.unionReg = unionReg;\r\n    this.buffer = '';\r\n    this.stack = [];\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   *  根据新的消息重置解析器\r\n   * @param data 消息数据\r\n   */\r\n  public reset(data?: string) {\r\n    this.buffer = data || '';\r\n    this.index = 0;\r\n    this.line = 1;\r\n    this.col = 1;\r\n    this.queuedText = '';\r\n    this.setState(this.startState);\r\n    this.stack = [];\r\n    return this;\r\n  }\r\n\r\n  private setState(state: string) {\r\n    if (!state || this.state === state) {\r\n      return;\r\n    }\r\n    this.state = state;\r\n    const info = this.unionReg[state];\r\n    this.groups = info.groups;\r\n    this.error = info.error;\r\n    this.regexp = info.regexp;\r\n    this.fast = info.fast;\r\n  }\r\n\r\n  private popState() {\r\n    this.setState(<string>this.stack.pop());\r\n  }\r\n\r\n  private pushState(state: string) {\r\n    this.stack.push(this.state);\r\n    this.setState(state);\r\n  }\r\n\r\n  private getGroup(match: Record<string, object>) {\r\n    const groupCount = this.groups.length;\r\n    for (let i = 0; i < groupCount; i++) {\r\n      if (match[i + 1] !== undefined) {\r\n        return this.groups[i];\r\n      }\r\n    }\r\n    throw new Error('No token type found matching text!');\r\n  }\r\n\r\n  private tokenToString() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 迭代获取下一个 token\r\n   */\r\n  public next() {\r\n    const index = this.index;\r\n\r\n    if (this.queuedGroup) {\r\n      const token = this.getToken(this.queuedGroup, this.queuedText, index);\r\n      this.queuedGroup = null;\r\n      this.queuedText = '';\r\n      return token;\r\n    }\r\n\r\n    const buffer = this.buffer;\r\n    if (index === buffer.length) {\r\n      return;\r\n    }\r\n\r\n    const fastGroup = this.fast[buffer.charCodeAt(index)];\r\n    if (fastGroup) {\r\n      return this.getToken(fastGroup, buffer.charAt(index), index);\r\n    }\r\n\r\n    // 如果没有快速匹配，那么使用预先编译的正则表达式进行匹配操作\r\n    const regexp = this.regexp;\r\n    regexp.lastIndex = index;\r\n    const match = getMatch(regexp, buffer);\r\n    const error = this.error;\r\n    if (match == null) {\r\n      return this.getToken(error, buffer.slice(index, buffer.length), index);\r\n    }\r\n\r\n    const group = this.getGroup(match);\r\n    const text = match[0];\r\n\r\n    if (error?.fallback && match.index !== index) {\r\n      this.queuedGroup = group;\r\n      this.queuedText = text;\r\n      return this.getToken(error, buffer.slice(index, match.index), index);\r\n    }\r\n\r\n    return this.getToken(group, text, index);\r\n  }\r\n\r\n  /**\r\n   * 获取Token\r\n   * @param group 解析模板后获得的属性值\r\n   * @param text 文本属性的信息\r\n   * @param offset 偏移量\r\n   * @private\r\n   */\r\n  private getToken(group: any, text: string, offset: number) {\r\n    let lineNum = 0;\r\n    let last = 1; // 最后一个换行符的索引位置\r\n    if (group.lineBreaks) {\r\n      const matchNL = /\\n/g;\r\n      if (text === '\\n') {\r\n        lineNum = 1;\r\n      } else {\r\n        while (matchNL.exec(text)) {\r\n          lineNum++;\r\n          last = matchNL.lastIndex;\r\n        }\r\n      }\r\n    }\r\n\r\n    const token = {\r\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\r\n      value: typeof group.value === 'function' ? group.value(text) : text,\r\n      text: text,\r\n      toString: this.tokenToString,\r\n      offset: offset, // 标记在输入 buffer 中的偏移量\r\n      lineBreaks: lineNum,\r\n      line: this.line, // token 所在的行号\r\n      col: this.col, // token 所在的列号\r\n    };\r\n\r\n    const size = text.length;\r\n    this.index += size;\r\n    this.line += lineNum;\r\n    if (lineNum !== 0) {\r\n      this.col = size - last + 1;\r\n    } else {\r\n      this.col += size;\r\n    }\r\n\r\n    if (group.shouldThrow) {\r\n      throw new Error('Invalid Syntax!');\r\n    }\r\n\r\n    if (group.pop) {\r\n      this.popState();\r\n    } else if (group.push) {\r\n      this.pushState(group.push);\r\n    } else if (group.next) {\r\n      this.setState(group.next);\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  // 增加迭代器，允许逐个访问集合中的元素方法\r\n  [Symbol.iterator]() {\r\n    return {\r\n      next: (): IteratorResult<T> => {\r\n        const token = this.next();\r\n        return { value: token, done: !token } as IteratorResult<T>;\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * 根据正则表达式，获取匹配到message的值\r\n * 索引为 0 的元素是完整的匹配结果。\r\n * 索引为 1、2、3 等的元素是正则表达式中指定的捕获组的匹配结果。\r\n */\r\nconst getMatch = ruleUtils.checkSticky()\r\n  ? // 正则表达式具有 sticky 标志\r\n    (regexp: any, buffer: string) => regexp.exec(buffer)\r\n  : // 正则表达式具有 global 标志,匹配的字符串长度为 0，则表示匹配失败\r\n    (regexp: any, buffer: string) => (regexp.exec(buffer)[0].length === 0 ? null : regexp.exec(buffer));\r\n\r\nexport default Lexer;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nconst body: Record<string, any> = {\r\n  doubleapos: {\r\n    match: \"''\",\r\n    value: () => \"'\",\r\n  },\r\n  quoted: {\r\n    lineBreaks: true,\r\n    match: /'[{}#](?:[^]*?[^'])?'(?!')/u, // 用以匹配单引号、花括号{}以及井号# 如'Hello' 、{name}、{}#\r\n    value: (src: string) => src.slice(1, -1).replace(/''/g, \"'\"),\r\n  },\r\n  argument: {\r\n    lineBreaks: true,\r\n\r\n    // 用于匹配{name、{Hello{World，匹配{ }花括号中有任何Unicode字符，如空格、制表符等\r\n    match: /\\{\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*/u,\r\n    push: 'arg',\r\n    value: (src: string) => src.substring(1).trim(),\r\n  },\r\n  octothorpe: '#',\r\n  end: {\r\n    match: '}',\r\n    pop: 1,\r\n  },\r\n  content: {\r\n    lineBreaks: true,\r\n    match: /[^][^{}#]*/u, // 主要匹配不包含[]任何字符（除了换行符）、不包含{}、#的任何个字符\r\n  },\r\n};\r\n\r\nconst arg: Record<string, any> = {\r\n  select: {\r\n    lineBreaks: true,\r\n    match: /,\\s*(?:plural|select|selectordinal)\\s*,\\s*/u, // 匹配内容包含 plural、select 或 selectordinal\r\n    next: 'select', // 继续解析下一个参数\r\n    value: (src: string) => src.split(',')[1].trim(), // 提取第二个参数，并处理收尾空格\r\n  },\r\n  'func-args': {\r\n    // 匹配是否包含其他非特殊字符的参数,匹配结果包含特殊字符，如param1, param2, param3\r\n    lineBreaks: true,\r\n    match: /,\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*,/u,\r\n    next: 'body',\r\n    value: (src: string) => src.split(',')[1].trim(), // 参数字符串去除逗号并去除首尾空格\r\n  },\r\n  'func-simple': {\r\n    // 匹配是否包含其他简单参数，匹配结果不包含标点符号：param1 param2 param3\r\n    lineBreaks: true,\r\n    match: /,\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*/u,\r\n    value: (src: string) => src.substring(1).trim(),\r\n  },\r\n  end: {\r\n    match: '}',\r\n    pop: 1,\r\n  },\r\n};\r\n\r\nconst select: Record<string, any> = {\r\n  offset: {\r\n    lineBreaks: true,\r\n    match: /\\s*offset\\s*:\\s*\\d+\\s*/u, // 匹配message中是否包含偏移量offest信息\r\n    value: (src: string) => src.split(':')[1].trim(),\r\n  },\r\n  case: {\r\n    // 检查匹配该行是否包含分支信息。\r\n    lineBreaks: true,\r\n\r\n    // 设置规则匹配以左大括号 { 结尾的字符串，以等号 = 后跟数字开头的字符串，或者以非特殊符号和非空白字符开头的字符串，如 '=1 {'\r\n    match: /\\s*(?:=\\d+|[^\\p{Pat_Syn}\\p{Pat_WS}]+)\\s*\\{/u,\r\n    push: 'body', // 匹配成功，则会push到body栈中\r\n    value: (src: string) => src.substring(0, src.indexOf('{')).trim(),\r\n  },\r\n  end: {\r\n    match: /\\s*\\}/u,\r\n    pop: 1,\r\n  },\r\n};\r\n\r\nexport const mappingRule: Record<string, any> = {\r\n  body,\r\n  arg,\r\n  select,\r\n};\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n/**\r\n * \\\\(?:u\\{[a-fA-F0-9]+}) 匹配形如 \\u{0020} 的 Unicode 转义字符。\r\n * \\\\x[a-fA-F0-9]{2} 匹配形如 \\x0A 的十六进制转义字符。\r\n * [nrtf'\"] 匹配常见的转义字符：\\n（换行符）、\\r（回车符）、\\t（制表符）、\\f（换页符）、\\'（单引号）和 \\\"（双引号）。\r\n */\r\nexport const UNICODE_REG: RegExp = /\\\\(?:u\\{[a-fA-F0-9]+}|x[a-fA-F0-9]{2}|[nrtf'\"])/g;\r\nexport const STICKY_FLAG: string = 'ym';\r\nexport const GLOBAL_FLAG: string = 'gm';\r\n\r\nexport const VERTICAL_LINE: string = '|';\r\nexport const UNICODE_FLAG: string = 'u';\r\nexport const STATE_GROUP_START_INDEX: number = 1;\r\n// Inula 需要被保留静态常量\r\nexport const INULA_STATICS = {\r\n  childContextTypes: true,\r\n  contextType: true,\r\n  contextTypes: true,\r\n  defaultProps: true,\r\n  displayName: true,\r\n  getDefaultProps: true,\r\n  getDerivedStateFromError: true,\r\n  getDerivedStateFromProps: true,\r\n  mixins: true,\r\n  propTypes: true,\r\n  type: true,\r\n};\r\n\r\n// JavaScript 需要被保留原生静态属性\r\nexport const NATIVE_STATICS = {\r\n  name: true,\r\n  length: true,\r\n  prototype: true,\r\n  caller: true,\r\n  callee: true,\r\n  arguments: true,\r\n  arity: true,\r\n};\r\n\r\n// Inula ForwardRef 组件的静态属性需要被保留\r\nexport const INULA_FORWARD_REF_STATICS = {\r\n  vtype: true,\r\n  render: true,\r\n  defaultProps: true,\r\n  key: true,\r\n  type: true,\r\n};\r\n\r\n// React ForwardRef 组件的静态属性需要被保留\r\nexport const REACT_FORWARD_REF_STATICS = {\r\n  $$typeof: true, // inula 'vtype': true\r\n  render: true, // render\r\n  defaultProps: true, // props\r\n  displayName: true,\r\n  propTypes: true, // type: type,\r\n};\r\n\r\nexport const FORWARD_REF_STATICS = { ...INULA_FORWARD_REF_STATICS, ...REACT_FORWARD_REF_STATICS };\r\n\r\n// Inula Memo 组件的静态属性需要被保留\r\nexport const INULA_MEMO_STATICS = {\r\n  vtype: true, // inula 'vtype': true\r\n  compare: true,\r\n  defaultProps: true,\r\n  type: true,\r\n};\r\n\r\n// 默认复数规则\r\nexport const DEFAULT_PLURAL_KEYS = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n\r\nexport const voidElementTags = [\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'keygen',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n  'menuitem',\r\n];\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport Lexer from './Lexer';\r\nimport { mappingRule } from './mappingRule';\r\nimport ruleUtils from '../utils/parseRuleUtils';\r\nimport { RawToken } from '../types/types';\r\nimport { STATE_GROUP_START_INDEX, GLOBAL_FLAG, STICKY_FLAG, UNICODE_FLAG, VERTICAL_LINE } from '../constants';\r\n\r\nconst defaultErrorRule = ruleUtils.getRuleOptions('error', { lineBreaks: true, shouldThrow: true });\r\n\r\n// 解析规则并生成词法分析器所需的数据结构，以便进行词法分析操作\r\nfunction parseRules(rules: Record<string, any>, hasStates: boolean): Record<string, object> {\r\n  let errorRule: Record<string, object> | null = null;\r\n  const fast: Record<string, unknown> = {};\r\n  let enableFast = true;\r\n  let unicodeFlag: boolean | null = null;\r\n  const groups: Record<string, any>[] = [];\r\n  const parts: string[] = [];\r\n\r\n  // 检查是否存在 fallback 规则，若存在则禁用快速匹配\r\n  enableFast = isExistsFallback(rules, enableFast);\r\n\r\n  for (let i = 0; i < rules.length; i++) {\r\n    const options = rules[i];\r\n    if (options.include) {\r\n      throw new Error('Inheritance is not allowed in stateless lexers!');\r\n    }\r\n\r\n    errorRule = isOptionsErrorOrFallback(options, errorRule);\r\n\r\n    const match = options.match.slice();\r\n    if (enableFast) {\r\n      // 如果快速匹配允许，则将单字符的规则存入 fast 对象\r\n      processFast(match, fast, options);\r\n    }\r\n\r\n    // 检查规则中是否存在不适当的状态切换选项\r\n    if (options.pop || options.push || options.next) {\r\n      checkStateOptions(hasStates, options);\r\n    }\r\n    // 只有具有 .match 的规则才会被包含在正则表达式中\r\n    if (match.length === 0) {\r\n      continue;\r\n    }\r\n    enableFast = false;\r\n\r\n    groups.push(options);\r\n\r\n    // 检查是否所有规则都使用了unicode，或者都未使用\r\n    unicodeFlag = checkUnicode(match, unicodeFlag, options);\r\n\r\n    const pat = ruleUtils.getRegUnion(match.map(ruleUtils.getReg));\r\n    const regexp = new RegExp(pat);\r\n    if (regexp.test('')) {\r\n      throw new Error('The regex matched the empty string!');\r\n    }\r\n    const groupCount = ruleUtils.getRegGroups(pat);\r\n    if (groupCount > 0) {\r\n      throw new Error('The regular expression uses capture groups, use (?: … ) instead!');\r\n    }\r\n\r\n    // 检测规则是否匹配换行符\r\n    if (!options.lineBreaks && regexp.test('\\n')) {\r\n      throw new Error('The matching rule must contain lineBreaks.');\r\n    }\r\n\r\n    parts.push(ruleUtils.getRegCapture(pat));\r\n  }\r\n\r\n  // 如果没有 fallback 规则，则使用 sticky 标志，只在当前索引位置寻找匹配项，如果不支持 sticky 标志，则使用无法被否定的空模式来模拟\r\n  const fallbackRule = errorRule && errorRule.fallback;\r\n  let flags = ruleUtils.checkSticky() && !fallbackRule ? STICKY_FLAG : GLOBAL_FLAG;\r\n  const suffix = ruleUtils.checkSticky() || fallbackRule ? '' : VERTICAL_LINE;\r\n\r\n  if (unicodeFlag === true) {\r\n    flags += UNICODE_FLAG;\r\n  }\r\n  const combined = new RegExp(ruleUtils.getRegUnion(parts) + suffix, flags);\r\n\r\n  return {\r\n    regexp: combined,\r\n    groups: groups,\r\n    fast: fast,\r\n    error: errorRule || defaultErrorRule,\r\n  };\r\n}\r\n\r\nexport function checkStateGroup(group: Record<string, any>, name: string, mappingRules: Record<string, object>) {\r\n  const state = group && (group.push || group.next);\r\n  if (state && !mappingRules[state]) {\r\n    throw new Error('The state is missing.');\r\n  }\r\n  if (group && group.pop && +group.pop !== STATE_GROUP_START_INDEX) {\r\n    throw new Error('The value of pop must be 1.');\r\n  }\r\n}\r\n\r\n// 将国际化解析规则注入分词器中\r\nfunction parseMappingRule(mappingRule: Record<string, object>, startState?: string): Lexer<RawToken> {\r\n  const keys = Object.getOwnPropertyNames(mappingRule);\r\n\r\n  if (!startState) {\r\n    startState = keys[0];\r\n  }\r\n\r\n  // 将每个状态的规则解析为规则数组，并存储在 ruleMap 对象中\r\n  const ruleMap = keys.reduce((map, key) => {\r\n    map[key] = ruleUtils.getRules(mappingRule[key]);\r\n    return map;\r\n  }, {});\r\n\r\n  // 处理规则中的 include 声明，将被包含的规则添加到相应的状态中\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const rules = ruleMap[key];\r\n    const included = {};\r\n\r\n    for (let j = 0; j < rules.length; j++) {\r\n      const rule = rules[j];\r\n      if (!rule.include) {\r\n        continue;\r\n      }\r\n\r\n      const splice = [j, STATE_GROUP_START_INDEX];\r\n      if (rule.include !== key && !included[rule.include]) {\r\n        included[rule.include] = true;\r\n        const newRules = ruleMap[rule.include];\r\n\r\n        if (!newRules) {\r\n          throw new Error('Cannot contain a state that does not exist!');\r\n        }\r\n\r\n        newRules.forEach(newRule => {\r\n          if (!rules.includes(newRule)) {\r\n            splice.push(newRule);\r\n          }\r\n        });\r\n      }\r\n      // eslint-disable-next-line\r\n      rules.splice.apply(rules, splice);\r\n      j--;\r\n    }\r\n  }\r\n\r\n  const mappingAllRules = {};\r\n\r\n  // 将规则映射为词法分析器数据结构，并存储在 mappingAllRules 对象中\r\n  keys.forEach(key => {\r\n    mappingAllRules[key] = parseRules(ruleMap[key], true);\r\n  });\r\n\r\n  // 检查状态组中的规则是否正确引用了其他状态\r\n  keys.forEach(name => {\r\n    const state = mappingAllRules[name];\r\n    const groups = state.groups;\r\n    groups.forEach(group => {\r\n      checkStateGroup(group, name, mappingAllRules);\r\n    });\r\n    const fastKeys = Object.getOwnPropertyNames(state.fast);\r\n    fastKeys.forEach(fastKey => {\r\n      checkStateGroup(state.fast[fastKey], name, mappingAllRules);\r\n    });\r\n  });\r\n\r\n  // 将规则注入到词法解析器\r\n  return new Lexer(mappingAllRules, startState);\r\n}\r\n\r\n/**\r\n * 快速匹配模式\r\n * @param match\r\n * @param fast\r\n * @param options\r\n */\r\nfunction processFast(match: Record<string, any>, fast: Record<string, unknown> = {}, options: Record<string, object>) {\r\n  while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\r\n    // 获取到数组的第一个元素\r\n    const word = match.shift();\r\n    fast[word.charCodeAt(0)] = options;\r\n  }\r\n}\r\n\r\n/**\r\n *  用以处理错误逻辑\r\n * @param options 操作属性\r\n * @param errorRule 错误规则\r\n */\r\nfunction handleErrorRule(options: Record<string, object>, errorRule: Record<string, object>) {\r\n  if (!options.fallback === !errorRule.fallback) {\r\n    throw new Error('errorRule can only set one!');\r\n  } else {\r\n    throw new Error('fallback and error cannot be set at the same time!');\r\n  }\r\n}\r\n\r\n/**\r\n * 用以检查message中是否包含Unicode\r\n * @param match 匹配到的message\r\n * @param unicodeFlag Unicode标志\r\n * @param options 操作属性\r\n */\r\nfunction checkUnicode(match: Record<string, any>, unicodeFlag: boolean | null, options: Record<string, any>) {\r\n  for (let j = 0; j < match.length; j++) {\r\n    const obj = match[j];\r\n    if (!ruleUtils.checkRegExp(obj)) {\r\n      continue;\r\n    }\r\n\r\n    if (unicodeFlag === null) {\r\n      unicodeFlag = obj.unicode;\r\n    } else {\r\n      if (unicodeFlag !== obj.unicode && options.fallback === false) {\r\n        throw new Error('If the /u flag is used, all!');\r\n      }\r\n    }\r\n  }\r\n  return unicodeFlag;\r\n}\r\n\r\nfunction checkStateOptions(hasStates: boolean, options: Record<string, any>) {\r\n  if (!hasStates) {\r\n    throw new Error('State toggle options are not allowed in stateless tokenizers!');\r\n  }\r\n  if (options.fallback) {\r\n    throw new Error('State toggle options are not allowed on fallback tokens!');\r\n  }\r\n}\r\n\r\n/**\r\n * 检查是否存在fallback属性，用以来判断快速匹配规则\r\n * @param rules\r\n * @param enableFast\r\n */\r\nfunction isExistsFallback(rules: Record<string, any>, enableFast: boolean) {\r\n  for (let i = 0; i < rules.length; i++) {\r\n    if (rules[i].fallback) {\r\n      enableFast = false;\r\n    }\r\n  }\r\n  return enableFast;\r\n}\r\n\r\nfunction isOptionsErrorOrFallback(options: Record<string, object>, errorRule: Record<string, object> | null) {\r\n  if (options.error || options.fallback) {\r\n    // 只能设置一个 errorRule\r\n    if (errorRule) {\r\n      handleErrorRule(options, errorRule);\r\n    }\r\n    errorRule = options;\r\n  }\r\n  return errorRule;\r\n}\r\n\r\nexport const lexer = parseMappingRule(mappingRule);\r\n\r\nexport default parseMappingRule;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { lexer } from './parseMappingRule';\r\nimport { RawToken } from '../types/types';\r\nimport { DEFAULT_PLURAL_KEYS } from '../constants';\r\nimport { Content, FunctionArg, PlainArg, Select, TokenContext } from '../types/interfaces';\r\n\r\n/**\r\n *  语法解析器，根据Token,获得具备上下文的AST\r\n */\r\nclass Parser {\r\n  cardinalKeys: string[] = DEFAULT_PLURAL_KEYS;\r\n  ordinalKeys: string[] = DEFAULT_PLURAL_KEYS;\r\n\r\n  constructor(message: string) {\r\n    lexer.reset(message);\r\n  }\r\n\r\n  isSelectKeyValid(type: Select['type'], value: string) {\r\n    if (value[0] === '=') {\r\n      if (type === 'select') {\r\n        throw new Error('The key value of the select type is invalid.');\r\n      }\r\n    } else if (type !== 'select') {\r\n      const values = type === 'plural' ? this.cardinalKeys : this.ordinalKeys;\r\n      if (values.length > 0 && !values.includes(value)) {\r\n        throw new Error(`${type} type key value is invalid.`);\r\n      }\r\n    }\r\n  }\r\n\r\n  processSelect({ value: arg }: any, isPlural: boolean, context: TokenContext, type: Select['type']): Select {\r\n    const select: Select = { type, arg, cases: [], ctx: context };\r\n\r\n    if (type === 'plural' || type === 'selectordinal') {\r\n      isPlural = true;\r\n    }\r\n\r\n    for (const token of lexer) {\r\n      switch (token.type) {\r\n        case 'offset': {\r\n          if (type === 'select') {\r\n            throw new Error('The complex offset of the select type is incorrect.');\r\n          }\r\n          if (select.cases.length > 0) {\r\n            throw new Error('The complex offset must be set before cases.');\r\n          }\r\n\r\n          select.offset = Number(token.value);\r\n          context.text += token.text;\r\n          context.lineNum += token.lineBreaks;\r\n          break;\r\n        }\r\n        case 'case': {\r\n          this.isSelectKeyValid(type, token.value);\r\n          select.cases.push({\r\n            key: token.value.replace(/=/g, ''),\r\n            tokens: this.parse(isPlural),\r\n            ctx: getContext(token),\r\n          });\r\n          break;\r\n        }\r\n        case 'end': {\r\n          return select;\r\n        }\r\n        default: {\r\n          throw new Error(`Unrecognized analyzer token: ${token.type}`);\r\n        }\r\n      }\r\n    }\r\n    throw new Error('The message end position is invalid.');\r\n  }\r\n\r\n  /**\r\n   * 解析获得的Token\r\n   * @param token\r\n   * @param isPlural\r\n   */\r\n  parseToken(token: RawToken, isPlural: boolean): PlainArg | FunctionArg | Select {\r\n    const context = getContext(token);\r\n    const nextToken = lexer.next();\r\n\r\n    if (!nextToken) {\r\n      throw new Error('The message end position is invalid.');\r\n    }\r\n\r\n    context.text += nextToken.text;\r\n    context.lineNum += nextToken.lineBreaks;\r\n\r\n    switch (nextToken.type) {\r\n      case 'end': {\r\n        return { type: 'argument', arg: token.value, ctx: context };\r\n      }\r\n      case 'func-simple': {\r\n        const end = lexer.next();\r\n        if (!end) {\r\n          throw new Error('The message end position is invalid.');\r\n        }\r\n        if (end.type !== 'end') {\r\n          throw new Error(`Unrecognized analyzer token: ${end.type}`);\r\n        }\r\n        context.text += end.text;\r\n        if (checkSelectType(nextToken.value.toLowerCase())) {\r\n          throw new Error(`Invalid parameter type: ${nextToken.value}`);\r\n        }\r\n        return {\r\n          type: 'function',\r\n          arg: token.value,\r\n          key: nextToken.value,\r\n          ctx: context,\r\n        };\r\n      }\r\n      case 'func-args': {\r\n        if (checkSelectType(nextToken.value.toLowerCase())) {\r\n          throw new Error(`Invalid parameter type: ${nextToken.value}`);\r\n        }\r\n        const param = this.parse(isPlural);\r\n\r\n        return {\r\n          type: 'function',\r\n          arg: token.value,\r\n          key: nextToken.value,\r\n          param,\r\n          ctx: context,\r\n        };\r\n      }\r\n      case 'select':\r\n        if (checkSelectType(nextToken.value)) {\r\n          return this.processSelect(token, isPlural, context, nextToken.value);\r\n        } else {\r\n          throw new Error(`Invalid select type: ${nextToken.value}`);\r\n        }\r\n      default:\r\n        throw new Error(`Unrecognized analyzer token: ${nextToken.type}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析方法入口\r\n   * 在根级别解析时，遇到结束符号即结束解析并返回结果；而在非根级别解析时，遇到结束符号会被视为不合法的结束位置，抛出错误\r\n   * @param isPlural  标记复数\r\n   * @param isRoot  标记根节点\r\n   */\r\n  parse(isPlural: boolean, isRoot?: boolean): Array<Content | PlainArg | FunctionArg | Select> {\r\n    const tokens: any[] = [];\r\n    let content: string | Content | null = null;\r\n\r\n    for (const token of lexer) {\r\n      if (token.type === 'argument') {\r\n        if (content) {\r\n          content = null;\r\n        }\r\n        tokens.push(this.parseToken(token, isPlural));\r\n      } else if (token.type === 'octothorpe' && isPlural) {\r\n        if (content) {\r\n          content = null;\r\n        }\r\n        tokens.push({ type: 'octothorpe' });\r\n      } else if (token.type === 'end' && !isRoot) {\r\n        return tokens;\r\n      } else if (token.type === 'doubleapos') {\r\n        tokens.push(token.value);\r\n      } else if (token.type === 'quoted') {\r\n        tokens.push(token.value);\r\n      } else if (token.type === 'content') {\r\n        tokens.push(token.value);\r\n      } else {\r\n        let value = token.value;\r\n        if (!isPlural && token.type === 'quoted' && value[0] === '#') {\r\n          if (value.includes('{')) {\r\n            throw new Error(`Invalid template: ${value}`);\r\n          }\r\n          value = token.text;\r\n        }\r\n        if (content) {\r\n          content = value;\r\n        } else {\r\n          content = value;\r\n          tokens.push(content);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isRoot) {\r\n      return tokens;\r\n    }\r\n    throw new Error('The message end position is invalid.');\r\n  }\r\n}\r\n\r\n/**\r\n * 获得 Token 的上下文\r\n * @param Token Token\r\n */\r\nconst getContext = (Token: RawToken): TokenContext => ({\r\n  offset: Token.offset,\r\n  line: Token.line,\r\n  col: Token.col,\r\n  text: Token.text,\r\n  lineNum: Token.lineBreaks,\r\n});\r\n\r\n// 用以检查select规则中的类型\r\nexport const checkSelectType = (value: string): boolean => {\r\n  return value === 'plural' || value === 'select' || value === 'selectordinal';\r\n};\r\n\r\nexport default function parse(message: string): Array<Content | PlainArg | FunctionArg | Select> {\r\n  const parser = new Parser(message);\r\n  return parser.parse(false, true);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n/**\r\n * 将parse后的Token数组针对不同的匀速类型进行处理\r\n */\r\nenum TokenType {\r\n  octothorpe = 'OCTOTHORPE',\r\n  argument = 'ARGUMENT',\r\n  function = 'FUNCTION',\r\n}\r\n\r\nconst processToken = token => {\r\n  if (typeof token === 'string') {\r\n    return token;\r\n  } else if (TokenType[token.type] === 'OCTOTHORPE') {\r\n    // token为符号\r\n    return '#';\r\n  } else if (TokenType[token.type] === 'ARGUMENT') {\r\n    // token为变量\r\n    return [token.arg];\r\n  } else if (TokenType[token.type] === 'FUNCTION') {\r\n    // token为函数方法\r\n    const _param = token.param && token.param.tokens[0];\r\n    const param = typeof _param === 'string' ? _param.trim() : _param;\r\n    return [token.arg, token.key, param].filter(Boolean);\r\n  }\r\n\r\n  const offset = token.offset ? parseInt(token.offset) : undefined;\r\n\r\n  const tempFormatProps = {};\r\n  token.cases.forEach(item => {\r\n    tempFormatProps[item.key] = getTokenAST(item.tokens);\r\n  });\r\n\r\n  const mergedProps = Object.assign({}, { offset }, tempFormatProps);\r\n\r\n  return [token.arg, token.type, mergedProps];\r\n};\r\n\r\nfunction getTokenAST(tokens) {\r\n  if (!Array.isArray(tokens)) {\r\n    return tokens.join('');\r\n  }\r\n  return tokens.map(token => processToken(token));\r\n}\r\n\r\nexport default getTokenAST;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { CompiledMessage } from '../types/types';\r\nimport parse from '../parser/parser';\r\nimport getTokenAST from './getTokenAST';\r\nimport I18n from '../core/I18n';\r\n\r\nexport function isVariantI18n(i18n?: I18n) {\r\n  if (!i18n) {\r\n    throw new Error('I18n object is not found!');\r\n  }\r\n}\r\n\r\nfunction generateKey<T>(locales?: string | string[], options?: T, valueKey?: string | undefined) {\r\n  const localeKey = Array.isArray(locales) ? locales.sort().join('-') : locales;\r\n  return `${localeKey}:${JSON.stringify(options ?? {})}_${valueKey ?? ''}`;\r\n}\r\n\r\nfunction compile(message: string): CompiledMessage {\r\n  try {\r\n    return getTokenAST(parse(message));\r\n  } catch (e) {\r\n    console.error(`Message cannot be parse due to syntax errors: ${message},cause by ${e}`);\r\n    return message;\r\n  }\r\n}\r\n\r\nconst utils = {\r\n  isVariantI18n,\r\n  generateKey,\r\n  compile,\r\n};\r\n\r\nexport function createI18nProps(source) {\r\n  return {\r\n    intl: source,\r\n    locale: source.locale,\r\n    messages: source.messages,\r\n    defaultLocale: source.defaultLocale,\r\n    timeZone: source.timeZone,\r\n    onError: source.onError,\r\n    formatMessage: source.formatMessage.bind(source),\r\n    formatDate: source.formatDate ? source.formatDate.bind(source) : source.DateTimeFormat,\r\n    formatNumber: source.formatNumber ? source.formatNumber.bind(source) : source.NumberFormat,\r\n    $t: source.$t || source.formatMessage.bind(source),\r\n  };\r\n}\r\n\r\nexport default utils;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport creatI18nCache from '../cache/cache';\r\nimport utils from '../../utils/utils';\r\nimport { DatePool, Locales } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 时间格式化\r\n */\r\nclass DateTimeFormatter {\r\n  private readonly locales: Locales;\r\n  private readonly formatOptions: Intl.DateTimeFormatOptions;\r\n  // 创建一个缓存对象，用于存储DateTimeFormat的对象\r\n  private readonly cache?: I18nCache;\r\n  private readonly valueKey?: string;\r\n\r\n  constructor(locales: Locales, formatOptions?: Intl.DateTimeFormatOptions, cache?: I18nCache, valueKey?: string) {\r\n    this.locales = locales;\r\n    this.formatOptions = formatOptions ?? {};\r\n    this.cache = cache ?? creatI18nCache();\r\n    this.valueKey = valueKey ?? '';\r\n  }\r\n\r\n  dateTimeFormat(value: DatePool, formatOptions?: Intl.DateTimeFormatOptions): string {\r\n    const options = formatOptions ?? this.formatOptions;\r\n    const formatter = new Intl.DateTimeFormat(this.locales, options);\r\n    // 将传输的字符串转变为日期对象\r\n    if (typeof value === 'string') {\r\n      value = new Date(value);\r\n    }\r\n\r\n    // 如果启用了记忆化且已经有对应的数字格式化器缓存，则直接返回缓存中的格式化结果。否则创建新的格式化数据，并进行缓存\r\n    if (this.cache?.dateTimeFormat) {\r\n      // 造缓存的key，key包含区域设置和日期时间格式选项\r\n      const cacheKey = utils.generateKey<Intl.DateTimeFormatOptions>(this.locales, options, this.valueKey);\r\n\r\n      if (this.cache.dateTimeFormat[cacheKey]) {\r\n        return this.cache.dateTimeFormat[cacheKey].format(value);\r\n      }\r\n\r\n      // 查询缓存中的key， 若无key则创建新key\r\n      this.cache.dateTimeFormat[cacheKey] = formatter;\r\n      return formatter.format(value);\r\n    }\r\n\r\n    // 返回格式化后的时间\r\n\r\n    return formatter.format(value);\r\n  }\r\n}\r\n\r\nexport default DateTimeFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport creatI18nCache from '../cache/cache';\r\nimport { Locales } from '../../types/types';\r\nimport utils from '../../utils/utils';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 数字格式化\r\n */\r\nclass NumberFormatter {\r\n  private readonly locales: Locales;\r\n  private readonly formatOption?: Intl.NumberFormatOptions;\r\n  private cache?: I18nCache; // 创建一个缓存对象，用于缓存已经创建的数字格式化器\r\n  private readonly valueKey?: string;\r\n\r\n  constructor(locales: Locales, formatOption?: Intl.NumberFormatOptions, cache?: I18nCache, valueKey?: string) {\r\n    this.locales = locales;\r\n    this.formatOption = formatOption ?? {};\r\n    this.cache = cache ?? creatI18nCache();\r\n    this.valueKey = valueKey ?? '';\r\n  }\r\n\r\n  numberFormat(value: number, formatOption?: Intl.NumberFormatOptions): string {\r\n    const options = formatOption ?? this.formatOption;\r\n    const formatter = new Intl.NumberFormat(this.locales, options);\r\n\r\n    // 如果启用了记忆化且已经有对应的数字格式化器缓存，则直接返回缓存中的格式化结果。否则创建新的格式化数据，并进行缓存\r\n    if (this.cache?.numberFormat) {\r\n      // 造缓存的key，key包含区域设置数字格式选项\r\n      const cacheKey = utils.generateKey<Intl.NumberFormatOptions>(this.locales, options, this.valueKey);\r\n\r\n      if (this.cache.numberFormat[cacheKey]) {\r\n        return this.cache.numberFormat[cacheKey].format(value);\r\n      }\r\n\r\n      this.cache.numberFormat[cacheKey] = formatter;\r\n      return formatter.format(value);\r\n    }\r\n    return formatter.format(value);\r\n  }\r\n}\r\n\r\nexport default NumberFormatter;\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { EventCallback } from '../types/types';\r\n\r\n/**\r\n * 定义一个时间触发器类，使用泛型实现动态时间的监听\r\n */\r\nclass EventDispatcher<E extends Record<string, EventCallback>> {\r\n  // 声明_events，用于存储事件和对应的监听器\r\n  private _events: Map<keyof E, Set<EventCallback>>;\r\n\r\n  constructor() {\r\n    this._events = new Map();\r\n  }\r\n\r\n  /**\r\n   * on 方法，向指定的事件添加监听器，并返回一个用于移除该监听器的函数\r\n   * @param event\r\n   * @param listener\r\n   */\r\n  on(event: keyof E, listener: E[keyof E]): () => void {\r\n    if (!this._events.has(event)) {\r\n      this._events.set(event, new Set());\r\n    }\r\n    const listeners = this._events.get(event)!;\r\n    listeners.add(listener);\r\n\r\n    return () => {\r\n      this.removeListener(event, listener);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * removeListener 方法，移除指定事件的监听器\r\n   * @param event\r\n   * @param listener\r\n   */\r\n  removeListener(event: keyof E, listener: E[keyof E]): void {\r\n    if (!this._events.has(event)) {\r\n      return;\r\n    }\r\n    const listeners = this._events.get(event)!;\r\n    listeners.delete(listener);\r\n    if (listeners.size === 0) {\r\n      this._events.delete(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * emit 方法，触发指定事件，并按照监听器注册顺序执行监听器\r\n   * @param event\r\n   * @param args\r\n   */\r\n  emit(event: keyof E, ...args: Parameters<E[keyof E]>): void {\r\n    if (!this._events.has(event)) {\r\n      return;\r\n    }\r\n\r\n    // 获取该事件对应的监听器集合，并按照注册顺序执行每个监听器\r\n    const listeners = this._events.get(event)!;\r\n    for (const listener of listeners) {\r\n      listener.apply(this, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport default EventDispatcher;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../../utils/utils';\r\nimport NumberFormatter from './NumberFormatter';\r\nimport { Locale, Locales } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\nimport creatI18nCache from '../cache/cache';\r\n\r\n/**\r\n * 复数格式化\r\n */\r\nclass PluralFormatter {\r\n  private readonly locale: Locale;\r\n  private readonly locales: Locales;\r\n  private readonly value: number;\r\n  private readonly message: any;\r\n  constructor(locale: Locale, locales: Locales, value: any, message: any) {\r\n    this.locale = locale;\r\n    this.locales = locales;\r\n    this.value = value;\r\n    this.message = message;\r\n  }\r\n\r\n  // 将 message中的“#”替换为指定数字value，并返回新的字符串或者字符串数组\r\n  replaceSymbol(ctx: any) {\r\n    const msg = typeof this.message === 'function' ? this.message(ctx) : this.message;\r\n    const messages = Array.isArray(msg) ? msg : [msg];\r\n\r\n    const numberFormatter = new NumberFormatter(this.locales);\r\n    const valueStr = numberFormatter.numberFormat(this.value);\r\n\r\n    return messages.map(msg => (typeof msg === 'string' ? msg.replace('#', valueStr) : msg));\r\n  }\r\n}\r\n\r\nexport default PluralFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../../utils/utils';\r\nimport { Locale, SelectPool } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 规则选择器\r\n * eg : 输入选择语句 female {She} other {They}} ，表示'female'和'other'是两种可能的值，它们分别对应着'She'和'They'两个输出结果。\r\n * 如果调用select（{ value: 'female' }）则表示，输出 she\r\n */\r\nclass SelectFormatter {\r\n  private readonly locale: Locale;\r\n\r\n  constructor(locale: Locale) {\r\n    this.locale = locale;\r\n  }\r\n\r\n  getRule(value: SelectPool, rules: any) {\r\n    return rules[value] || rules.other;\r\n  }\r\n}\r\n\r\nexport default SelectFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport DateTimeFormatter from './fomatters/DateTimeFormatter';\r\nimport NumberFormatter from './fomatters/NumberFormatter';\r\nimport { DatePool, Locale, Locales, SelectPool } from '../types/types';\r\nimport PluralFormatter from './fomatters/PluralFormatter';\r\nimport SelectFormatter from './fomatters/SelectFormatter';\r\nimport { FormatOptions, I18nCache, IntlMessageFormat } from '../types/interfaces';\r\n\r\n/**\r\n * 默认格式化接口\r\n */\r\nconst generateFormatters = (\r\n  locale: Locale,\r\n  locales: Locales,\r\n  localeConfig: Record<string, any> = { plurals: undefined },\r\n  formatOptions: FormatOptions = {}, // 自定义格式对象\r\n  cache: I18nCache,\r\n  valueKey: string\r\n): IntlMessageFormat => {\r\n  const { plurals } = localeConfig;\r\n  /**\r\n   *  样式函数 ，根据格式获取格式样式， 如货币百分比， 返回相应的格式的对象，如果没有设定格式，则返回一个空对象\r\n   * @param formatOption\r\n   */\r\n  const getStyleOption = (formatOption: string | number) => {\r\n    if (typeof formatOption === 'string') {\r\n      return formatOptions[formatOption] || { option: formatOption };\r\n    } else {\r\n      return formatOption;\r\n    }\r\n  };\r\n\r\n  return {\r\n    // 复数规则\r\n    plural: (value: number, { offset = 0, ...rules }) => {\r\n      const pluralFormatter = new PluralFormatter(\r\n        locale,\r\n        locales,\r\n        value - offset,\r\n        rules[value] || rules[(plurals as any)?.(value - offset)] || rules.other\r\n      );\r\n      return pluralFormatter.replaceSymbol.bind(pluralFormatter);\r\n    },\r\n\r\n    selectordinal: (value: number, { offset = 0, ...rules }) => {\r\n      const message = rules[value] || rules[(plurals as any)?.(value - offset, true)] || rules.other;\r\n      const pluralFormatter = new PluralFormatter(locale, locales, value - offset, message);\r\n      return pluralFormatter.replaceSymbol.bind(pluralFormatter);\r\n    },\r\n\r\n    // 选择规则，如果规则对象中包含与该值相对应的属性，则返回该属性的值；否则，返回 \"other\" 属性的值。\r\n    select: (value: SelectPool, formatRules: any) => {\r\n      const selectFormatter = new SelectFormatter(locale);\r\n      return selectFormatter.getRule(value, formatRules);\r\n    },\r\n\r\n    // 用于将数字格式化为字符串，接受一个数字和一个格式化规则。它会根据规则返回格式化后的字符串。\r\n    numberFormat: (value: number, formatOption) => {\r\n      return new NumberFormatter(locales, getStyleOption(formatOption), cache, valueKey).numberFormat(value);\r\n    },\r\n\r\n    /**\r\n     * 用于将日期格式化为字符串，接受一个日期对象和一个格式化规则。它会根据规则返回格式化后的字符串。\r\n     * eg: { year: 'numeric', month: 'long', day: 'numeric' } 是一个用于指定DateTimeFormatter如何将日期对象转换为字符串的参数。\r\n     *      \\year: 'numeric' 表示年份的表示方式是数字形式（比如2023）。\r\n     *       month: 'long' 表示月份的表示方式是全名（比如January）。\r\n     *       day: 'numeric' 表示日期的表示方式是数字形式（比如1号）。\r\n     * @param value\r\n     * @param formatOption { year: 'numeric', month: 'long', day: 'numeric' }\r\n     */\r\n    dateTimeFormat: (value: DatePool, formatOption: any) => {\r\n      return new DateTimeFormatter(locales, getStyleOption(formatOption), cache, valueKey).dateTimeFormat(\r\n        value,\r\n        formatOption\r\n      );\r\n    },\r\n\r\n    // 用于处理未定义的值，接受一个值并直接返回它。\r\n    undefined: value => value,\r\n  };\r\n};\r\n\r\nexport default generateFormatters;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { CompiledMessage, Locale, LocaleConfig, Locales } from '../types/types';\r\nimport generateFormatters from './generateFormatters';\r\nimport { FormatOptions, I18nCache } from '../types/interfaces';\r\nimport creatI18nCache from './cache/cache';\r\n\r\n/**\r\n * 获取翻译结果\r\n */\r\nclass Translation {\r\n  private readonly compiledMessage: CompiledMessage;\r\n  private readonly locale: Locale;\r\n  private readonly locales: Locales;\r\n  private readonly localeConfig: Record<string, any>;\r\n  private readonly cache: I18nCache;\r\n\r\n  constructor(\r\n    compiledMessage: CompiledMessage,\r\n    locale: Locale,\r\n    locales: Locales,\r\n    localeConfig: LocaleConfig,\r\n    cache?: I18nCache\r\n  ) {\r\n    this.compiledMessage = compiledMessage;\r\n    this.locale = locale;\r\n    this.locales = locales;\r\n    this.localeConfig = localeConfig;\r\n    this.cache = cache ?? creatI18nCache();\r\n  }\r\n\r\n  /**\r\n   * @param values 需要替换文本占位符的值\r\n   * @param formatOptions 需要格式化选项\r\n   */\r\n  translate(values: Record<string, unknown>, formatOptions: FormatOptions = {}): string {\r\n    const createTextFormatter = (\r\n      locale: Locale,\r\n      locales: Locales,\r\n      values: Record<string, unknown>,\r\n      formatOptions: FormatOptions,\r\n      localeConfig: LocaleConfig\r\n    ) => {\r\n      const textFormatter = (valueKey: string, type: string, format: any) => {\r\n        const formatters = generateFormatters(locale, locales, localeConfig, formatOptions, this.cache, valueKey);\r\n        const value = values[valueKey];\r\n        const formatter = formatters[type](value, format);\r\n\r\n        let message: any;\r\n        if (typeof formatter === 'function') {\r\n          message = formatter(textFormatter); // 递归调用\r\n        } else {\r\n          message = formatter; // 获得变量值 formatted: \"Fred\"\r\n        }\r\n\r\n        return Array.isArray(message) ? message.join('') : message;\r\n      };\r\n\r\n      return textFormatter;\r\n    };\r\n\r\n    const textFormatter = createTextFormatter(this.locale, this.locales, values, formatOptions, this.localeConfig);\r\n    // 通过递归方法formatCore进行格式化处理\r\n    return this.formatMessage(this.compiledMessage, textFormatter); // 返回要格式化的结果\r\n  }\r\n\r\n  formatMessage(compiledMessage: CompiledMessage, textFormatter: (...args: any[]) => any) {\r\n    if (!Array.isArray(compiledMessage)) {\r\n      return compiledMessage;\r\n    }\r\n\r\n    return compiledMessage\r\n      .map(token => {\r\n        if (typeof token === 'string') {\r\n          return token;\r\n        }\r\n\r\n        const [name, type, format] = token;\r\n\r\n        let replaceValueFormat = format;\r\n\r\n        // 如果 format 是对象，函数将递归地对它的每个值调用 formatMessage 后保存，否则直接保存\r\n        if (format && typeof format !== 'string') {\r\n          replaceValueFormat = Object.keys(replaceValueFormat).reduce((text, key) => {\r\n            text[key] = this.formatMessage(format[key], textFormatter);\r\n            return text;\r\n          }, {});\r\n        }\r\n        //调用 getContent 函数来获取给定 name、type 和 interpolateFormat 的值\r\n        const value = textFormatter(name, type, replaceValueFormat);\r\n        return value ?? `{${name}}`;\r\n      })\r\n      .join('');\r\n  }\r\n}\r\n\r\nexport default Translation;\r\n","/*\r\n * Copyright (c) 2024 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { cloneElement, createElement, Fragment, InulaElement } from '@cloudsop/horizon';\r\nimport { voidElementTags } from '../constants';\r\n\r\n// 用于匹配标签的正则表达式\r\nconst tagReg = /<(\\d+)>(.*?)<\\/\\1>|<(\\d+)\\/>/;\r\n\r\n// 用于匹配换行符的正则表达式\r\nconst nlReg = /(?:\\r\\n|\\r|\\n)/g;\r\n\r\nexport function formatElements(\r\n  value: string,\r\n  elements: { [key: string]: InulaElement<any> } = {}\r\n): string | Array<any> {\r\n  const elementKeyID = getElementIndex(0, '$Inula');\r\n\r\n  //  value：This is a rich text with a custom component: <1/>\r\n  const arrays = value.replace(nlReg, '').split(tagReg);\r\n\r\n  // 若无InulaNode元素，则返回\r\n  if (arrays.length === 1) return value;\r\n\r\n  const result: any = [];\r\n\r\n  const before = arrays.shift();\r\n  if (before) {\r\n    result.push(before);\r\n  }\r\n\r\n  for (const [index, children, after] of getElements(arrays)) {\r\n    let element = elements[index];\r\n\r\n    if (!element || (voidElementTags[element.type as string] && children)) {\r\n      const errorMessage = !element\r\n        ? `Index not declared as ${index} in original translation`\r\n        : `${element.type} , No child element exists. Please check.`;\r\n      console.error(errorMessage);\r\n\r\n      // 对于异常元素，通过创建<></>来代替，并继续解析现有的子元素和之后的元素，并保证在构建数组时，不会因为缺少元素而导致索引错位。\r\n      element = createElement(Fragment, {});\r\n    }\r\n\r\n    // 如果存在子元素，则进行递归处理\r\n    const formattedChildren = children ? formatElements(children, elements) : element.props.children;\r\n\r\n    // 更新element 的属性和子元素\r\n    const clonedElement = cloneElement(element, { key: elementKeyID() }, formattedChildren);\r\n    result.push(clonedElement);\r\n\r\n    if (after) {\r\n      result.push(after);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n *  从arrays数组中解析出标签元素和其子元素\r\n * @param arrays\r\n */\r\nfunction getElements(arrays: string[]) {\r\n  // 如果 arrays 数组为空，则返回空数组\r\n  if (!arrays.length) return [];\r\n\r\n  /**\r\n   * pairedIndex: 第一个元素表示配对标签的内容，即 <1>...</1> 形式的标签。\r\n   * children: 第二个元素表示配对标签内的子元素内容。\r\n   * unpairedIndex: 第三个元素表示自闭合标签的内容，即 <1/> 形式的标签。\r\n   * textAfter: 第四个元素表示标签之后的文本内容，即标签后紧跟着的文本。\r\n   * eg: [undefined,undefined,1,\"\"]\r\n   */\r\n  const [pairedIndex, children, unpairedIndex, textAfter] = arrays.splice(0, 4);\r\n\r\n  // 解析当前标签元素和它的子元素，返回一个包含标签索引、子元素和后续文本的数组\r\n  const currentElement: [number, string, string] = [\r\n    parseInt(pairedIndex || unpairedIndex), // 解析标签索引，如果是自闭合标签，则使用 unpaired\r\n    children || '',\r\n    textAfter || '',\r\n  ];\r\n\r\n  // 递归调用 getElements 函数，处理剩余的 arrays 数组\r\n  const remainingElements = getElements(arrays);\r\n\r\n  // 将当前元素和递归处理后的元素数组合并并返回\r\n  return [currentElement, ...remainingElements];\r\n}\r\n\r\n// 对传入富文本元素的位置标志索引\r\nfunction getElementIndex(count = 0, prefix = '') {\r\n  return function () {\r\n    return `${prefix}_${count++}`;\r\n  };\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../utils/utils';\r\nimport Translation from './Translation';\r\nimport I18n from '../core/I18n';\r\nimport { MessageDescriptor, MessageOptions } from '../types/interfaces';\r\nimport { CompiledMessage } from '../types/types';\r\nimport creatI18nCache from './cache/cache';\r\nimport { formatElements } from '../utils/formatElements';\r\n\r\nexport function getFormatMessage(\r\n  i18n: I18n,\r\n  id: MessageDescriptor | string,\r\n  values: Record<string, unknown> | undefined = {},\r\n  options: MessageOptions = {},\r\n  components: any\r\n) {\r\n  let { messages, context } = options;\r\n  const { formatOptions } = options;\r\n  const cache = i18n.cache ?? creatI18nCache();\r\n  if (typeof id !== 'string') {\r\n    values = values || id.defaultValues;\r\n    messages = id.messages || id.defaultMessage;\r\n    context = id.context;\r\n    id = id.id;\r\n  }\r\n\r\n  // 对messages进行判空处理\r\n  const isMissingMessage = !context && !i18n.messages[id];\r\n  const isMissingContextMessage = context && !i18n.messages[context][id];\r\n  const messageUnavailable = isMissingContextMessage || isMissingMessage;\r\n\r\n  // 对错误消息进行处理\r\n  const messageError = i18n.onError;\r\n  if (messageError && messageUnavailable) {\r\n    if (typeof messageError === 'function') {\r\n      return messageError(i18n.locale, id, context);\r\n    } else {\r\n      return messageError;\r\n    }\r\n  }\r\n\r\n  let compliedMessage: CompiledMessage;\r\n  if (context) {\r\n    compliedMessage = i18n.messages[context][id] || messages || id;\r\n  } else {\r\n    compliedMessage = i18n.messages[id] || messages || id;\r\n  }\r\n\r\n  // 对解析的message进行parse解析，并输出解析后的Token\r\n  compliedMessage = typeof compliedMessage === 'string' ? utils.compile(compliedMessage) : compliedMessage;\r\n\r\n  const translation = new Translation(compliedMessage, i18n.locale, i18n.locales, i18n.localeConfig, cache);\r\n  const formatResult = translation.translate(values, formatOptions);\r\n\r\n  // 如果存在inula元素，则返回包含格式化的Inula元素的数组\r\n  return formatElements(formatResult, components);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport EventDispatcher from '../utils/eventListener';\r\nimport DateTimeFormatter from '../format/fomatters/DateTimeFormatter';\r\nimport NumberFormatter from '../format/fomatters/NumberFormatter';\r\nimport { getFormatMessage } from '../format/getFormatMessage';\r\nimport { I18nCache, I18nProps, MessageDescriptor, MessageOptions } from '../types/interfaces';\r\nimport {\r\n  Locale,\r\n  Locales,\r\n  Messages,\r\n  AllLocaleConfig,\r\n  AllMessages,\r\n  LocaleConfig,\r\n  Error,\r\n  Events,\r\n  InulaNode,\r\n} from '../types/types';\r\nimport creatI18nCache from '../format/cache/cache';\r\nimport { isValidElement } from '@cloudsop/horizon';\r\n\r\nexport class I18n extends EventDispatcher<Events> {\r\n  public locale: Locale;\r\n  public locales: Locales;\r\n  public defaultLocale?: Locale;\r\n  public timeZone?: string;\r\n  public allMessages: AllMessages;\r\n  private readonly _localeConfig: AllLocaleConfig;\r\n  public readonly onError?: Error;\r\n  public readonly cache?: I18nCache;\r\n  public $t: (\r\n    id: MessageDescriptor | string,\r\n    values?: Record<string, unknown> | undefined,\r\n    { messages, context, formatOptions }?: MessageOptions\r\n  ) => string | any[];\r\n\r\n  constructor(props: I18nProps) {\r\n    super();\r\n    this.defaultLocale = 'en';\r\n    this.locale = this.defaultLocale;\r\n    this.locales = this.locale || '';\r\n    this.allMessages = {};\r\n    this._localeConfig = {};\r\n    this.onError = props.onError;\r\n    this.timeZone = '';\r\n\r\n    this.loadMessage(props.messages);\r\n\r\n    if (props.localeConfig) {\r\n      this.loadLocaleConfig(props.localeConfig);\r\n    }\r\n    if (props.messages) {\r\n      this.changeMessage(props.messages);\r\n    }\r\n\r\n    if (props.locale || props.locales) {\r\n      this.changeLanguage(props.locale!, props.locales);\r\n    }\r\n    this.$t = this.formatMessage.bind(this);\r\n    this.formatMessage = this.formatMessage.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.formatNumber = this.formatNumber.bind(this);\r\n\r\n    this.cache = props.cache ?? creatI18nCache();\r\n  }\r\n\r\n  get messages(): string | Messages | AllMessages {\r\n    if (this.locale in this.allMessages) {\r\n      return this.allMessages[this.locale] ?? {};\r\n    } else {\r\n      return this.allMessages ?? {};\r\n    }\r\n  }\r\n\r\n  get localeConfig(): LocaleConfig {\r\n    return this._localeConfig[this.locale] ?? {};\r\n  }\r\n\r\n  setLocaleConfig(locale: Locale, localeData: LocaleConfig) {\r\n    if (this._localeConfig[locale]) {\r\n      Object.assign(this._localeConfig, localeData);\r\n    } else {\r\n      this._localeConfig[locale] = localeData;\r\n    }\r\n  }\r\n\r\n  // 将热语言环境的本地化数据加载\r\n  loadLocaleConfig(localeOrAllData: Locale | AllLocaleConfig, localeConfig?: LocaleConfig) {\r\n    if (localeConfig) {\r\n      this.setLocaleConfig(localeOrAllData as Locale, localeConfig);\r\n    } else {\r\n      Object.keys(localeOrAllData).forEach(locale => {\r\n        this.setLocaleConfig(locale, localeOrAllData[locale]);\r\n      });\r\n    }\r\n    this.emit('change');\r\n  }\r\n\r\n  setMessage(locale: Locale, messages: Messages) {\r\n    if (this.allMessages[locale]) {\r\n      this.allMessages[locale] = Object.assign({}, this.allMessages[locale], messages);\r\n    } else {\r\n      this.allMessages[locale] = messages;\r\n    }\r\n  }\r\n\r\n  changeMessage(messages: AllMessages) {\r\n    this.allMessages = messages;\r\n    this.emit('change');\r\n  }\r\n\r\n  // 加载messages\r\n  loadMessage(localeOrMessages: Locale | AllMessages | undefined, messages?: Messages) {\r\n    if (messages) {\r\n      //当 message 为空的时候，加载单一的message信息\r\n      this.setMessage(localeOrMessages as string, messages);\r\n    } else {\r\n      // 加载多对locale-message信息\r\n      localeOrMessages &&\r\n        Object.keys(localeOrMessages!).forEach(locale => this.setMessage(locale, localeOrMessages![locale]));\r\n    }\r\n    this.emit('change');\r\n  }\r\n\r\n  // 改变当前的语言环境\r\n  changeLanguage(locale: Locale, locales?: Locales) {\r\n    this.locale = locale;\r\n    if (locales) {\r\n      this.locales = locales;\r\n    }\r\n    this.emit('change', { locale, id: '' });\r\n  }\r\n\r\n  formatMessage(\r\n    id: MessageDescriptor | string,\r\n    values: Record<string, unknown> | undefined = {},\r\n    { messages, context, formatOptions }: MessageOptions = {}\r\n  ) {\r\n    // 在多次渲染时，保证存储component不丢失\r\n    const components: { [key: string]: InulaNode } = {};\r\n    const tempValues: Record<string, unknown> = { ...values };\r\n    if (tempValues) {\r\n      Object.keys(tempValues).forEach((key, index) => {\r\n        const value = tempValues[key];\r\n        if (!isValidElement(value)) return;\r\n        // 将inula元素暂存\r\n        components[index] = value;\r\n        tempValues[key] = `<${index}/>`;\r\n      });\r\n    }\r\n    return getFormatMessage(this, id, tempValues, { messages, context, formatOptions }, components!);\r\n  }\r\n\r\n  formatDate(value: string | Date, formatOptions?: Intl.DateTimeFormatOptions): string {\r\n    const dateTimeFormatter = new DateTimeFormatter(this.locale || this.locales, formatOptions, this.cache);\r\n    return dateTimeFormatter.dateTimeFormat(value);\r\n  }\r\n\r\n  formatNumber(value: number, formatOptions?: Intl.NumberFormatOptions): string {\r\n    const numberFormatter = new NumberFormatter(this.locale || this.locales, formatOptions, this.cache);\r\n    return numberFormatter.numberFormat(value);\r\n  }\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport function createI18nInstance(i18nProps: I18nProps = {}): I18n {\r\n  return new I18n(i18nProps);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { Children, Fragment } from '@cloudsop/horizon';\r\nimport { FormattedMessageProps } from '../../types/interfaces';\r\nimport { useIntl } from '../../index';\r\n\r\n/**\r\n * FormattedMessage组件,接收一个消息键作为属性，并根据当前选择的语言环境，从对应的翻译资源中获取相应的消息文本，并可选地对文本进行格式化。\r\n * @param props\r\n * @constructor\r\n */\r\nfunction FormattedMessage(props: FormattedMessageProps) {\r\n  const { formatMessage } = useIntl();\r\n  const { id, values, messages, formatOptions, context, tagName: TagName = Fragment, children, comment }: any = props;\r\n\r\n  const formatMessageOptions = {\r\n    comment,\r\n    messages,\r\n    context,\r\n    formatOptions,\r\n  };\r\n\r\n  const formattedMessage = formatMessage(id, values, formatMessageOptions);\r\n\r\n  if (typeof children === 'function') {\r\n    const childNodes = Array.isArray(formattedMessage) ? formattedMessage : [formattedMessage];\r\n    return children(childNodes);\r\n  }\r\n\r\n  if (TagName) {\r\n    return <TagName>{Children.toArray(formattedMessage)}</TagName>;\r\n  }\r\n\r\n  return <>{formattedMessage}</>;\r\n}\r\n\r\nexport default FormattedMessage;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { isMemo, ForwardRef } from '@cloudsop/horizon';\r\nimport { INULA_FORWARD_REF_STATICS, INULA_MEMO_STATICS, INULA_STATICS, NATIVE_STATICS } from '../constants';\r\n\r\nconst staticsMap = new Map();\r\nstaticsMap.set(ForwardRef, INULA_FORWARD_REF_STATICS);\r\n\r\n// 确定给定的组件是否为Memo组件，并返回相应的静态属性\r\nfunction getStatics(component) {\r\n  if (isMemo(component)) {\r\n    return INULA_MEMO_STATICS;\r\n  }\r\n\r\n  if (staticsMap.has(component['vtype'])) {\r\n    return staticsMap.get(component['vtype']) || INULA_STATICS;\r\n  }\r\n}\r\n\r\n/**\r\n * 判断给定的对象属性描述是否有效\r\n * @param sourceComponent\r\n * @param key\r\n */\r\nfunction isDescriptorValid<U>(sourceComponent: U, key: string | symbol) {\r\n  const descriptor = Object.getOwnPropertyDescriptor(sourceComponent, key);\r\n  return descriptor && (!descriptor.get || descriptor.get.prototype);\r\n}\r\n\r\n// 将一个对象的非react静态属性复制到另一个对象上，并返回马目标对象\r\nfunction copyStaticProps<T, U>(targetComponent: T, sourceComponent: U): T {\r\n  if (typeof sourceComponent === 'string') {\r\n    return targetComponent;\r\n  }\r\n  // 递归拷贝静态属性\r\n  const inheritedComponent = Object.getPrototypeOf(sourceComponent);\r\n  if (inheritedComponent && inheritedComponent !== Object.prototype) {\r\n    copyStaticProps(targetComponent, inheritedComponent);\r\n  }\r\n\r\n  // 获取源组件的属性列表\r\n  const keys: (string | symbol)[] = [\r\n    //获取指定对象自身的所有属性的名称（包括不可枚举属性）\r\n    ...Object.getOwnPropertyNames(sourceComponent),\r\n\r\n    //获取指定对象自身的所有 Symbol 类型的属性的名称（包括不可枚举属性）\r\n    ...Object.getOwnPropertySymbols(sourceComponent),\r\n  ];\r\n\r\n  // 获取目标组件和源组件的静态属性\r\n  const targetStatics = getStatics(targetComponent);\r\n  const sourceStatics = getStatics(sourceComponent);\r\n\r\n  keys.forEach(key => {\r\n    if (\r\n      !NATIVE_STATICS[key] &&\r\n      !(targetStatics && targetStatics[key]) &&\r\n      !(sourceStatics && sourceStatics[key]) &&\r\n      isDescriptorValid(sourceComponent, key)\r\n    ) {\r\n      try {\r\n        // 在一个已有的targetComponent对象上增加sourceComponent的属性\r\n        Object.defineProperty(targetComponent, key, Object.getOwnPropertyDescriptor(sourceComponent, key)!);\r\n      } catch (e) {\r\n        console.log('Error occurred while copying static props:', e);\r\n      }\r\n    }\r\n  });\r\n\r\n  return targetComponent;\r\n}\r\n\r\nexport default copyStaticProps;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { createContext, forwardRef } from '@cloudsop/horizon';\r\nimport { isVariantI18n } from '../../utils/utils';\r\nimport copyStaticProps from '../../utils/copyStaticProps';\r\nimport { InjectOptions } from '../../types/interfaces';\r\nimport I18n from '../I18n';\r\nimport VueI18n from '../../vueI18n-adapter/VueI18n';\r\n\r\n// 创建国际化组件对象上下文\r\nexport const I18nContext: any = createContext<I18n | VueI18n>(null as any);\r\nconst { Consumer, Provider } = I18nContext;\r\nexport const InjectProvider = Provider;\r\n\r\n/**\r\n * 用于实现国际化的高阶组件，将国际化功能注入到组件中，使组件能够使用国际化的本文格式化功能\r\n * @param Component\r\n * @param options\r\n */\r\nfunction injectI18n(Component, options?: InjectOptions): any {\r\n  const {\r\n    isUsingForwardRef = false, // 默认不使用\r\n    ensureContext = false,\r\n  } = options || {};\r\n\r\n  // 定义一个名为 WrappedI18n 的函数组件，接收传入组件的 props 和 forwardedRef，返回传入组件并注入 i18n\r\n  const WrappedI18n = props => (\r\n    <Consumer>\r\n      {context => {\r\n        if (ensureContext) {\r\n          isVariantI18n(context.i18nInstance);\r\n        }\r\n\r\n        const i18nProps = { intl: context.i18nInstance };\r\n        return <Component {...props} {...i18nProps} ref={isUsingForwardRef ? props.forwardedRef : null} />;\r\n      }}\r\n    </Consumer>\r\n  );\r\n\r\n  WrappedI18n.WrappedComponent = Component;\r\n\r\n  // 通过copyStatics方法，复制组件中的静态属性\r\n  return copyStaticProps(\r\n    isUsingForwardRef ? forwardRef((props, ref) => <WrappedI18n {...props} forwardedRef={ref} />) : WrappedI18n,\r\n    Component\r\n  );\r\n}\r\n\r\nexport default injectI18n;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { useCallback, useEffect, useMemo, useState } from '@cloudsop/horizon';\r\nimport { InjectProvider } from './InjectI18n';\r\nimport { createI18nInstance, I18n } from '../I18n';\r\nimport { I18nProviderProps } from '../../types/types';\r\nimport VueI18n from '../../vueI18n-adapter/VueI18n';\r\n\r\n/**\r\n * 用于为应用程序提供国际化的格式化功能，管理程序中的语言文本信息和本地化资源信息\r\n * @param props\r\n * @constructor\r\n */\r\nconst I18nProvider = (props: I18nProviderProps) => {\r\n  // 使用 useMemo 创建或获取 i18n 实例\r\n  const { locale, messages, i18n, children } = props;\r\n  const i18nInstance = useMemo(() => {\r\n    return i18n || createI18nInstance({ locale, messages });\r\n  }, [i18n, locale, messages]);\r\n\r\n  // 监听message和locale的变化\r\n  const { currentLocale, currentMessages } = useI18nSync(i18nInstance);\r\n\r\n  // 创建一个 memoized 的 context 值\r\n  const contextValue = useMemo(\r\n    () => ({\r\n      ...i18nInstance,\r\n      i18nInstance,\r\n      locale: currentLocale,\r\n      messages: currentMessages,\r\n      changeLanguage: i18nInstance.changeLanguage,\r\n      changeMessage: i18nInstance.changeMessage,\r\n    }),\r\n    [i18nInstance, currentLocale, currentMessages]\r\n  );\r\n  // 提供一个 Provider 组件\r\n  return <InjectProvider value={contextValue}>{children}</InjectProvider>;\r\n};\r\n\r\nexport const useI18nSync = (i18nInstance: VueI18n | I18n) => {\r\n  const [currentLocale, setCurrentLocale] = useState(i18nInstance.locale);\r\n  const [currentMessages, setCurrentMessages] = useState(i18nInstance.messages);\r\n\r\n  const handleChange = useCallback(() => {\r\n    if (currentLocale !== i18nInstance.locale) {\r\n      setCurrentLocale(i18nInstance.locale);\r\n    }\r\n    if (currentMessages !== i18nInstance.messages) {\r\n      setCurrentMessages(i18nInstance.messages);\r\n    }\r\n  }, [i18nInstance, currentLocale, currentMessages]);\r\n\r\n  useEffect(() => {\r\n    // 清理函数\r\n    return i18nInstance.on('change', handleChange);\r\n  }, [i18nInstance, handleChange]);\r\n\r\n  return { currentLocale, currentMessages };\r\n};\r\n\r\nexport default I18nProvider;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { useContext, useMemo } from '@cloudsop/horizon';\r\nimport utils, { createI18nProps, isVariantI18n } from '../../utils/utils';\r\nimport { I18nContext } from '../components/InjectI18n';\r\nimport I18n from '../I18n';\r\n\r\n/**\r\n *  useI18n hook，与 Inula 组件一起使用。\r\n *  使用 useI18n 钩子函数可以更方便地在函数组件中进行国际化操作\r\n */\r\nfunction useIntl(): any {\r\n  const ContextI18n = useContext<any>(I18nContext);\r\n\r\n  isVariantI18n(ContextI18n);\r\n\r\n  // 用于兼容通过createI18n对象直接创建一个I18n实例.\r\n  const i18nInstance = ContextI18n.i18nInstance ? ContextI18n.i18nInstance : ContextI18n;\r\n  utils.isVariantI18n(i18nInstance);\r\n  return useMemo(() => {\r\n    return createI18nProps(i18nInstance);\r\n  }, [i18nInstance]);\r\n}\r\n\r\nexport default useIntl;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { configProps, I18nCache } from '../types/interfaces';\r\nimport { createI18nInstance } from './I18n';\r\nimport creatI18nCache from '../format/cache/cache';\r\nimport { IntlType } from '../types/types';\r\nimport { createI18nProps } from '../utils/utils';\r\n\r\n/**\r\n * createIntl hook函数，用于创建国际化i8n实例，以进行相关的数据操作\r\n */\r\n\r\nexport const createIntl = (config: configProps, cache?: I18nCache): any => {\r\n  const { locale, defaultLocale, messages } = config;\r\n  const i18nInstance = createI18nInstance({\r\n    locale: locale || defaultLocale || 'en',\r\n    messages: messages,\r\n    cache: cache ?? creatI18nCache(),\r\n  });\r\n  return createI18nProps(i18nInstance);\r\n};\r\n\r\nexport default createIntl;\r\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n// 动作常量\r\nexport const APPEND = 0;\r\nexport const PUSH = 1;\r\nexport const INC_SUB_PATH_DEPTH = 2;\r\nexport const PUSH_SUB_PATH = 3;\r\n\r\n// 状态常量\r\nexport const BEFORE_PATH = 0;\r\nexport const IN_PATH = 1;\r\nexport const BEFORE_IDENT = 2;\r\nexport const IN_IDENT = 3;\r\nexport const IN_SUB_PATH = 4;\r\nexport const IN_SINGLE_QUOTE = 5;\r\nexport const IN_DOUBLE_QUOTE = 6;\r\nexport const AFTER_PATH = 7;\r\nexport const ERROR = 8;\r\n\r\nexport const pathStateMachine: any = {\r\n  [BEFORE_PATH]: {\r\n    ws: [BEFORE_PATH],\r\n    ident: [IN_IDENT, APPEND],\r\n    '[': [IN_SUB_PATH],\r\n    eof: [AFTER_PATH],\r\n  },\r\n  [IN_PATH]: {\r\n    ws: [IN_PATH],\r\n    '.': [BEFORE_IDENT],\r\n    '[': [IN_SUB_PATH],\r\n    eof: [AFTER_PATH],\r\n  },\r\n  [BEFORE_IDENT]: {\r\n    ws: [BEFORE_IDENT],\r\n    ident: [IN_IDENT, APPEND],\r\n    '0': [IN_IDENT, APPEND],\r\n    number: [IN_IDENT, APPEND],\r\n  },\r\n  [IN_IDENT]: {\r\n    ident: [IN_IDENT, APPEND],\r\n    '0': [IN_IDENT, APPEND],\r\n    number: [IN_IDENT, APPEND],\r\n    ws: [IN_PATH, PUSH],\r\n    '.': [BEFORE_IDENT, PUSH],\r\n    '[': [IN_SUB_PATH, PUSH],\r\n    eof: [AFTER_PATH, PUSH],\r\n  },\r\n  [IN_SUB_PATH]: {\r\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\r\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\r\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\r\n    ']': [IN_PATH, PUSH_SUB_PATH],\r\n    eof: ERROR,\r\n    else: [IN_SUB_PATH, APPEND],\r\n  },\r\n  [IN_SINGLE_QUOTE]: {\r\n    \"'\": [IN_SUB_PATH, APPEND],\r\n    eof: ERROR,\r\n    else: [IN_SINGLE_QUOTE, APPEND],\r\n  },\r\n  [IN_DOUBLE_QUOTE]: {\r\n    '\"': [IN_SUB_PATH, APPEND],\r\n    eof: ERROR,\r\n    else: [IN_DOUBLE_QUOTE, APPEND],\r\n  },\r\n};\r\n\r\nexport const numberFormatKeys = [\r\n  'compactDisplay',\r\n  'currency',\r\n  'currencyDisplay',\r\n  'currencySign',\r\n  'localeMatcher',\r\n  'notation',\r\n  'numberingSystem',\r\n  'signDisplay',\r\n  'style',\r\n  'unit',\r\n  'unitDisplay',\r\n  'useGrouping',\r\n  'minimumIntegerDigits',\r\n  'minimumFractionDigits',\r\n  'maximumFractionDigits',\r\n  'minimumSignificantDigits',\r\n  'maximumSignificantDigits',\r\n];\r\n\r\nexport const dateTimeFormatKeys = [\r\n  'dateStyle',\r\n  'timeStyle',\r\n  'calendar',\r\n  'localeMatcher',\r\n  'hour12',\r\n  'hourCycle',\r\n  'timeZone',\r\n  'formatMatcher',\r\n  'weekday',\r\n  'era',\r\n  'year',\r\n  'month',\r\n  'day',\r\n  'hour',\r\n  'minute',\r\n  'second',\r\n  'timeZoneName',\r\n];\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { AllMessages, Locale, Messages } from '../../intl/types/types';\r\nimport I18nPath from './parseMsgParamUtils';\r\n\r\nexport function includes(arr: Array<any>, item: any): boolean {\r\n  return !!~arr.indexOf(item);\r\n}\r\n\r\nexport function dealNumberOrTimesArgs(args: any[], numericOrTimeConstansArr: string[]) {\r\n  let locale: Locale = 'en';\r\n  let key: string;\r\n  let options: object = {};\r\n\r\n  if (args.length === 1) {\r\n    if (typeof args[0] == 'string') {\r\n      key = args[0];\r\n    } else if (typeof args[0] == 'object') {\r\n      if (args[0].locale) {\r\n        locale = args[0].locale;\r\n      }\r\n      if (args[0].key) {\r\n        key = args[0].key;\r\n      }\r\n      options = Object.keys(args[0]).reduce((acc, key) => {\r\n        if (includes(numericOrTimeConstansArr, key)) {\r\n          return Object.assign({}, acc, { [key]: args[0][key] });\r\n        }\r\n        return acc;\r\n      }, {});\r\n    }\r\n  } else if (args.length === 2) {\r\n    if (typeof args[0] == 'string') {\r\n      key = args[0];\r\n    }\r\n    if (typeof args[1] == 'string') {\r\n      locale = args[1];\r\n    }\r\n  }\r\n\r\n  const dealLocale = locale.substring(0, 2);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-expect-error\r\n  return { dealLocale, key, options };\r\n}\r\n\r\nexport function isObject(obj: string | Messages | AllMessages): boolean {\r\n  return obj !== null && typeof obj === 'object';\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst toString: Function = Object.prototype.toString;\r\nconst OBJECT_STRING: string = '[object Object]';\r\n\r\nexport function isPlainObject(obj: any): boolean {\r\n  return toString.call(obj) === OBJECT_STRING;\r\n}\r\n\r\nexport function isString(val: any): boolean {\r\n  return typeof val === 'string';\r\n}\r\n\r\nexport const isArray = Array.isArray;\r\n\r\nexport function isNull(val: any): boolean {\r\n  return val === null || val === undefined;\r\n}\r\n\r\nexport function isFunction(val: any): boolean {\r\n  return typeof val === 'function';\r\n}\r\n\r\nexport function dealMsgArgs(pathRet, message, key) {\r\n  if (isArray(pathRet) || isPlainObject(pathRet)) {\r\n    return pathRet;\r\n  }\r\n\r\n  let ret: any;\r\n  if (isNull(pathRet)) {\r\n    /* istanbul ignore else */\r\n    if (isPlainObject(message)) {\r\n      ret = message[key];\r\n      if (!(isString(ret) || isFunction(ret))) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`Value of key '${key}' is not a string or function !`);\r\n        }\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (isString(pathRet) || isFunction(pathRet)) {\r\n      ret = pathRet;\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`Value of key '${key}' is not a string or function!`);\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { AllMessages, Messages } from '../../intl/types/types';\r\nimport { isNull, isObject } from './utils';\r\nimport {\r\n  AFTER_PATH,\r\n  APPEND,\r\n  BEFORE_PATH,\r\n  ERROR,\r\n  IN_DOUBLE_QUOTE,\r\n  IN_SINGLE_QUOTE,\r\n  IN_SUB_PATH,\r\n  INC_SUB_PATH_DEPTH,\r\n  pathStateMachine,\r\n  PUSH,\r\n  PUSH_SUB_PATH,\r\n} from '../constants';\r\nimport { PathStateMachine, PathValue } from '../type/types';\r\n\r\nexport default class I18nPath {\r\n  // 使用严格类型的缓存对象\r\n  private _cache: Record<string, string[]> = Object.create(null);\r\n\r\n  /**\r\n   * External parse that check for a cache hit first\r\n   */\r\n  parsePath(path: string): string[] {\r\n    let hit: string[] = this._cache[path];\r\n    if (!hit) {\r\n      hit = parse(path);\r\n      if (hit) {\r\n        this._cache[path] = hit;\r\n      }\r\n    }\r\n    return hit || [];\r\n  }\r\n\r\n  getPathValue(obj: string | Messages | AllMessages, id: string): PathValue {\r\n    // 如果传入的不是对象，则返回null\r\n    if (!isObject(obj)) {\r\n      return null;\r\n    }\r\n    // 解析路径\r\n    const paths: string[] = this.parsePath(id);\r\n\r\n    if (paths.length === 0) {\r\n      return null;\r\n    } else {\r\n      let last: any = obj;\r\n      for (const path of paths) {\r\n        const value: any = last[path];\r\n        // 如果路径对应的值为undefined或null，则返回null\r\n        if (value === undefined || value === null) {\r\n          return null;\r\n        }\r\n        last = value;\r\n      }\r\n      return last;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-expect-error\r\nfunction parse(path: string): string[] {\r\n  const keys: string[] = [];\r\n  let index: number = -1;\r\n  let mode: number = BEFORE_PATH;\r\n  let subPathDepth: number = 0;\r\n  let c: string | undefined;\r\n  let key: any;\r\n  let newChar: string;\r\n  let type: string;\r\n  let transition: any;\r\n  let action: () => void | boolean;\r\n  let typeMap: PathStateMachine;\r\n  const actions: Array<() => void | boolean> = [];\r\n\r\n  actions[PUSH] = function () {\r\n    if (key !== undefined) {\r\n      keys.push(key);\r\n      key = undefined;\r\n    }\r\n  };\r\n\r\n  actions[APPEND] = function () {\r\n    if (key === undefined) {\r\n      key = newChar;\r\n    } else {\r\n      key += newChar;\r\n    }\r\n  };\r\n\r\n  actions[INC_SUB_PATH_DEPTH] = function () {\r\n    actions[APPEND]();\r\n    subPathDepth++;\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-expect-error\r\n  actions[PUSH_SUB_PATH] = function () {\r\n    if (subPathDepth > 0) {\r\n      subPathDepth--;\r\n      mode = IN_SUB_PATH;\r\n      actions[APPEND]();\r\n    } else {\r\n      subPathDepth = 0;\r\n      if (key === undefined) {\r\n        return false;\r\n      }\r\n      key = formatSubPath(key);\r\n      if (key === false) {\r\n        return false;\r\n      } else {\r\n        actions[PUSH]();\r\n      }\r\n    }\r\n  };\r\n\r\n  function maybeUnescapeQuote(): boolean | void {\r\n    const nextChar: string = path[index + 1];\r\n    if ((mode === IN_SINGLE_QUOTE && nextChar === \"'\") || (mode === IN_DOUBLE_QUOTE && nextChar === '\"')) {\r\n      index++;\r\n      newChar = '\\\\' + nextChar;\r\n      actions[APPEND]();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  while (mode !== null) {\r\n    index++;\r\n    c = path[index];\r\n\r\n    if (c === '\\\\' && maybeUnescapeQuote()) {\r\n      continue;\r\n    }\r\n\r\n    type = getPathCharType(c);\r\n\r\n    //  根据不同的字符串，进行匹配对应的状态模式\r\n    typeMap = pathStateMachine[mode];\r\n    transition = typeMap[type] || typeMap['else'] || ERROR;\r\n\r\n    if (transition === ERROR) {\r\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n      // @ts-expect-error\r\n      return; // parse error\r\n    }\r\n\r\n    mode = transition[0];\r\n    action = actions[transition[1]];\r\n    if (action) {\r\n      newChar = transition[2];\r\n      newChar = newChar === undefined ? c : newChar;\r\n      if (action() === false) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-expect-error\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (mode === AFTER_PATH) {\r\n      return keys;\r\n    }\r\n  }\r\n}\r\n\r\n// 格式化子路径\r\nfunction formatSubPath(path: string): boolean | string {\r\n  const trimmed: string = path.trim();\r\n  if (path.charAt(0) === '0' && isNaN(Number(path))) {\r\n    return false;\r\n  }\r\n\r\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\r\n}\r\n\r\nconst literalValueRE: RegExp = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\n\r\nfunction isLiteral(exp: string): boolean {\r\n  return literalValueRE.test(exp);\r\n}\r\n\r\n/**\r\n * 剥离引号\r\n */\r\nfunction stripQuotes(str: string): string | boolean {\r\n  const a: number = str.charCodeAt(0);\r\n  const b: number = str.charCodeAt(str.length - 1);\r\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n\r\nfunction getPathCharType(ch: string): string {\r\n  if (ch === undefined || ch === null) {\r\n    return 'eof';\r\n  }\r\n\r\n  const code: number = ch.charCodeAt(0);\r\n\r\n  switch (code) {\r\n    case 0x5b: // [\r\n    case 0x5d: // ]\r\n    case 0x2e: // .\r\n    case 0x22: // \"\r\n    case 0x27: // '\r\n      return ch;\r\n\r\n    case 0x5f: // _\r\n    case 0x24: // $\r\n    case 0x2d: // -\r\n      return 'ident';\r\n\r\n    case 0x09: // Tab\r\n    case 0x0a: // Newline\r\n    case 0x0d: // Return\r\n    case 0xa0: // No-break space\r\n    case 0xfeff: // Byte Order Mark\r\n    case 0x2028: // Line Separator\r\n    case 0x2029: // Paragraph Separator\r\n      return 'ws';\r\n  }\r\n\r\n  return 'ident';\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { I18nOptions } from './type/types';\r\nimport { dateTimeFormatKeys, numberFormatKeys } from './constants';\r\nimport { dealMsgArgs, dealNumberOrTimesArgs } from './utils/utils';\r\nimport { I18n } from '../intl';\r\nimport { AllMessages, DatePool, Locale, Messages } from '../intl/types/types';\r\nimport I18nPath from './utils/parseMsgParamUtils';\r\n\r\nclass VueI18n extends I18n {\r\n  public locale: Locale;\r\n  public localMessages: Map<string, AllMessages>;\r\n  public dateTimeFormats?: NonNullable<unknown>;\r\n  public datetimeFormats?: NonNullable<unknown>;\r\n  public numberFormats?: NonNullable<unknown>;\r\n  public vueMessages: string | AllMessages;\r\n  public path?: I18nPath;\r\n  public listeners?: any;\r\n\r\n  constructor(options: I18nOptions) {\r\n    super(options);\r\n    this.locale = options.locale || 'en';\r\n    this.localMessages = new Map();\r\n    this.vueMessages = options.messages || {};\r\n    this.numberFormats = options.numberFormats || {};\r\n    this.dateTimeFormats = options.dateTimeFormats || {};\r\n    this.datetimeFormats = options.datetimeFormats || {};\r\n    this.path = new I18nPath();\r\n    this.listeners = new Set();\r\n    this.loadMessage(this.vueMessages);\r\n  }\r\n\r\n  // 重写 messages getter\r\n  get messages(): string | Messages | AllMessages {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-expect-error\r\n    if (this.locale in this.vueMessages) {\r\n      return this.vueMessages[this.locale] ?? {};\r\n    } else {\r\n      return this.vueMessages ?? {};\r\n    }\r\n  }\r\n\r\n  // 重写 loadMessage 方法以支持加载局部消息\r\n  loadMessage = (localeOrMessages: Locale | AllMessages | undefined, messages?: Messages) => {\r\n    super.loadMessage(localeOrMessages, messages);\r\n    this.emit('change');\r\n  };\r\n\r\n  changeLanguage = (locale: Locale) => {\r\n    this.locale = locale;\r\n    super.changeLanguage(locale);\r\n  };\r\n\r\n  changeMessage = (messages: AllMessages) => {\r\n    super.changeMessage(messages);\r\n  };\r\n\r\n  $t = (msgKey: string, values?: any) => {\r\n    const { messages } = this;\r\n    const pathRet = this.path!.getPathValue(messages, msgKey);\r\n    const msgId = pathRet !== null ? dealMsgArgs(pathRet, messages, msgKey) : msgKey;\r\n    return super.formatMessage(msgId, values);\r\n  };\r\n\r\n  $n = (value: number, ...args: any) => {\r\n    const { dealLocale, key, options } = dealNumberOrTimesArgs(args, numberFormatKeys);\r\n    // 如果自己传入新的语言，则更新\r\n    super.changeLanguage(dealLocale ? dealLocale : 'en');\r\n\r\n    if (key) {\r\n      const formatOptions = this.numberFormats![dealLocale][key]!;\r\n      return super.formatNumber(value, formatOptions);\r\n    }\r\n\r\n    return super.formatNumber(value, options);\r\n  };\r\n\r\n  $d = (value: DatePool, ...args: any) => {\r\n    const { dealLocale, key, options } = dealNumberOrTimesArgs(args, dateTimeFormatKeys);\r\n    super.changeLanguage(dealLocale ? dealLocale : 'en');\r\n\r\n    if (key) {\r\n      const formatOptions = this.dateTimeFormats![dealLocale][key];\r\n      return super.formatDate(value, formatOptions);\r\n    }\r\n    return super.formatDate(value, options);\r\n  };\r\n}\r\n\r\nexport function createVueI18nInstance(i18nProps: I18nOptions = {}): VueI18n {\r\n  return new VueI18n(i18nProps);\r\n}\r\nexport default VueI18n;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport I18nProvider from '../../intl/core/components/I18nProvider';\r\nimport { I18nOptions, App } from '../type/types';\r\nimport { createVueI18nInstance } from '../VueI18n';\r\nimport { createElement } from '@cloudsop/horizon';\r\n\r\nexport function createI18n(options: I18nOptions): any {\r\n  const { locale, messages } = options;\r\n  const i18nInstance = createVueI18nInstance({\r\n    locale: locale || 'en',\r\n    messages: messages,\r\n  });\r\n  return {\r\n    global: {\r\n      ...i18nInstance,\r\n\r\n      // 这里需要手动把on属性带上，因为on来自i18nInstance的原型链上，...展开会丢失\r\n      on: i18nInstance.on.bind(i18nInstance),\r\n      t: i18nInstance.$t.bind(i18nInstance),\r\n      messages: i18nInstance.allMessages,\r\n    },\r\n\r\n    // 用于注册到全局国际化插件\r\n    install: (app: App) => {\r\n      // 将 vueIi18n 实例提供给I18nProvider\r\n      app.rootComponent = createElement(I18nProvider, { i18n: i18nInstance }, app.rootComponent);\r\n    },\r\n  };\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { UseI18nOptions } from '../type/types';\r\nimport VueI18n from '../VueI18n';\r\nimport { useContext, useEffect } from '@cloudsop/horizon';\r\nimport { I18nContext } from '../../intl/core/components/InjectI18n';\r\n\r\nexport const useI18n = (options?: UseI18nOptions): any => {\r\n  const contextI18n = useContext<VueI18n | null>(I18nContext);\r\n\r\n  if (contextI18n && !options) {\r\n    return i18nInstance(contextI18n);\r\n  }\r\n\r\n  if (!options) {\r\n    throw new Error('I18nProvider is not used and options are not provided');\r\n  }\r\n\r\n  if (options.messages) {\r\n    Object.entries(options.messages).forEach(([locale, messages]) => {\r\n      contextI18n?.i18nInstance?.loadMessage({\r\n        [locale]: {\r\n          ...contextI18n.messages[locale],\r\n          ...messages,\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (options?.locale) {\r\n      contextI18n?.changeLanguage(options.locale);\r\n    }\r\n    if (options?.messages) {\r\n      contextI18n?.loadMessage(options.messages);\r\n    }\r\n  }, [options?.locale, options?.messages]);\r\n\r\n  return i18nInstance(contextI18n);\r\n};\r\n\r\nfunction i18nInstance(i18nContext: any): any {\r\n  const i18nInstance = i18nContext.i18nInstance ? i18nContext.i18nInstance : i18nContext;\r\n  return {\r\n    ...i18nInstance,\r\n    on: i18nInstance.on.bind(i18nInstance),\r\n    n: i18nInstance.$n.bind(i18nInstance),\r\n    d: i18nInstance.$d.bind(i18nInstance),\r\n    t: i18nInstance.$t.bind(i18nInstance),\r\n  };\r\n}\r\n","import { useMemo, useRef } from '@cloudsop/horizon';\r\nimport { AllMessages } from '../../intl/types/types';\r\nimport { useI18n } from './useI18n';\r\nimport { dealMsgArgs } from '../utils/utils';\r\n\r\nexport const useLocalMessage = (messages: AllMessages): any => {\r\n  const instance = useI18n();\r\n  const { t, formatMessage, path, on, locale } = instance;\r\n  const currentLocale = useRef(locale);\r\n  useMemo(() => {\r\n    on('change', ({ locale }) => {\r\n      currentLocale.current = locale;\r\n    });\r\n  }, []);\r\n  const $t = (msgKey: string, values?: any) => {\r\n    const currentMessages = messages[currentLocale.current] || {};\r\n    const pathRet = path.getPathValue(currentMessages, msgKey);\r\n    if (pathRet || currentMessages[msgKey]) {\r\n      const msgId = pathRet !== null ? dealMsgArgs(pathRet, currentMessages, msgKey) : currentMessages[msgKey];\r\n      return formatMessage(msgId, values);\r\n    }\r\n    return t(msgKey, values);\r\n  };\r\n  return { $t, t: $t };\r\n};\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n// type for $api\r\nimport VueI18n from './VueI18n';\r\nimport { createI18n } from './hooks/createI18n';\r\nimport { useI18n } from './hooks/useI18n';\r\nimport { useLocalMessage } from './hooks/useLocalMessage';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    $i18n: VueI18n;\r\n  }\r\n}\r\n\r\nexport default {\r\n  VueI18n,\r\n};\r\n\r\nexport { createI18n, useI18n, useLocalMessage };\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport DateTimeFormatter from './format/fomatters/DateTimeFormatter';\r\nimport NumberFormatter from './format/fomatters/NumberFormatter';\r\nimport I18n from './core/I18n';\r\nimport createI18nCache from './format/cache/cache';\r\nimport FormattedMessage from './core/components/FormattedMessage';\r\nimport I18nProvider from './core/components/I18nProvider';\r\nimport injectIntl, { I18nContext, InjectProvider } from './core/components/InjectI18n';\r\nimport useIntl from './core/hook/useIntl';\r\nimport createIntl from './core/createIntl';\r\nimport { MessageDescriptor } from './types/interfaces';\r\nimport VueI18n, { createI18n, useI18n, useLocalMessage } from '../vueI18n';\r\n\r\n// 函数API\r\nexport {\r\n  I18n,\r\n  createI18nCache as createIntlCache,\r\n  createIntl,\r\n  DateTimeFormatter,\r\n  NumberFormatter,\r\n  useIntl,\r\n  I18nProvider,\r\n  createI18n,\r\n  useI18n,\r\n  useLocalMessage,\r\n};\r\n\r\n// 组件\r\nexport {\r\n  FormattedMessage,\r\n  I18nContext as IntlContext,\r\n  I18nProvider as IntlProvider,\r\n  injectIntl as injectIntl,\r\n  InjectProvider as RawIntlProvider,\r\n};\r\n\r\nexport default {\r\n  I18n,\r\n  createIntlCache: createI18nCache,\r\n  createIntl,\r\n  DateTimeFormatter,\r\n  NumberFormatter,\r\n  useIntl,\r\n  FormattedMessage,\r\n  I18nContext,\r\n  IntlProvider: I18nProvider,\r\n  injectIntl: injectIntl,\r\n  RawIntlProvider: InjectProvider,\r\n  VueI18n,\r\n};\r\n\r\n// 用于定义文本\r\nexport function defineMessages<K extends keyof any, T = MessageDescriptor, U = Record<K, T>>(msgs: U): U {\r\n  return msgs;\r\n}\r\n\r\nexport function defineMessage<T>(msg: T): T {\r\n  return msg;\r\n}\r\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_typeof","o","Symbol","iterator","constructor","prototype","toPrimitive","t","r","e","i","call","String","Number","toPropertyKey","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","creatI18nCache","dateTimeFormat","numberFormat","plurals","select","octothorpe","_extends","assign","bind","arguments","source","hasOwnProperty","apply","getType","input","str","toString","slice","toLowerCase","createTypeChecker","type","checkObject","checkRegExp","checkSticky","_RegExp","RegExp","sticky","transferReg","replace","getRegGroups","_regExp$exec","regExp","exec","getRegCapture","getRegUnion","regexps","map","join","getReg","ignoreCase","Error","global","multiline","getRulesByObject","object","keys","getOwnPropertyNames","result","_loop","thing","rules","concat","j","push","include","match","forEach","rule","getRuleOptions","getRulesByArray","array","obj","options","defaultType","lineBreaks","error","fallback","pop","next","value","shouldThrow","Array","isArray","sort","str1","str2","getRules","spec","ruleUtils","Lexer","unionReg","startState","buffer","stack","index","line","col","queuedText","state","groups","regexp","fast","queuedGroup","reset","data","setState","info","popState","pushState","getGroup","groupCount","undefined","tokenToString","token","getToken","fastGroup","charCodeAt","charAt","lastIndex","getMatch","group","text","offset","lineNum","last","matchNL","size","_this","done","body","doubleapos","quoted","src","argument","substring","trim","end","content","arg","split","case","indexOf","mappingRule","STICKY_FLAG","GLOBAL_FLAG","VERTICAL_LINE","UNICODE_FLAG","STATE_GROUP_START_INDEX","INULA_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","NATIVE_STATICS","name","caller","callee","arity","INULA_FORWARD_REF_STATICS","vtype","render","REACT_FORWARD_REF_STATICS","$$typeof","INULA_MEMO_STATICS","compare","DEFAULT_PLURAL_KEYS","voidElementTags","defaultErrorRule","parseRules","hasStates","errorRule","enableFast","unicodeFlag","parts","isExistsFallback","isOptionsErrorOrFallback","processFast","checkStateOptions","checkUnicode","pat","test","fallbackRule","flags","suffix","combined","checkStateGroup","mappingRules","parseMappingRule","ruleMap","reduce","included","_loop2","_j","splice","newRules","newRule","includes","mappingAllRules","fastKeys","fastKey","word","shift","handleErrorRule","unicode","lexer","Parser","message","cardinalKeys","ordinalKeys","isSelectKeyValid","values","processSelect","_ref","isPlural","context","cases","ctx","_iterator","_createForOfIteratorHelper","_step","s","n","tokens","parse","getContext","err","f","parseToken","nextToken","checkSelectType","param","isRoot","_iterator2","_step2","Token","parser","TokenType","processToken","_param","filter","Boolean","parseInt","tempFormatProps","item","getTokenAST","mergedProps","isVariantI18n","i18n","generateKey","locales","valueKey","localeKey","JSON","stringify","compile","console","utils","createI18nProps","intl","locale","messages","defaultLocale","timeZone","onError","formatMessage","formatDate","DateTimeFormat","formatNumber","NumberFormat","$t","DateTimeFormatter","formatOptions","cache","_this$cache","formatter","Intl","Date","cacheKey","format","NumberFormatter","formatOption","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","EventDispatcher","_events","Map","on","event","listener","has","set","Set","listeners","get","add","removeListener","delete","emit","_len","args","_key","_objectWithoutPropertiesLoose","excluded","sourceKeys","PluralFormatter","replaceSymbol","msg","numberFormatter","valueStr","SelectFormatter","getRule","other","generateFormatters","localeConfig","getStyleOption","option","plural","_ref$offset","_excluded","pluralFormatter","selectordinal","_ref2","_ref2$offset","_excluded2","formatRules","selectFormatter","Translation","compiledMessage","translate","createTextFormatter","textFormatter","formatters","_this2","replaceValueFormat","tagReg","nlReg","formatElements","elements","elementKeyID","getElementIndex","arrays","before","getElements","_step$value","children","after","element","errorMessage","createElement","Fragment","formattedChildren","clonedElement","cloneElement","_arrays$splice","pairedIndex","unpairedIndex","textAfter","currentElement","remainingElements","count","prefix","getFormatMessage","id","_i18n$cache","components","defaultValues","defaultMessage","isMissingMessage","isMissingContextMessage","messageUnavailable","messageError","compliedMessage","translation","formatResult","I18n","_EventDispatcher","_props$cache","_callSuper","allMessages","_localeConfig","loadMessage","loadLocaleConfig","changeMessage","changeLanguage","_this$allMessages$thi","_this$allMessages","_this$_localeConfig$t","setLocaleConfig","localeData","localeOrAllData","setMessage","localeOrMessages","_this3","tempValues","isValidElement","dateTimeFormatter","createI18nInstance","i18nProps","FormattedMessage","_useIntl","useIntl","_props$tagName","tagName","TagName","comment","formatMessageOptions","formattedMessage","childNodes","_jsx","Children","toArray","_Fragment","staticsMap","ForwardRef","getStatics","component","isMemo","isDescriptorValid","sourceComponent","getOwnPropertyDescriptor","copyStaticProps","targetComponent","inheritedComponent","getOwnPropertySymbols","targetStatics","sourceStatics","log","I18nContext","createContext","Consumer","Provider","InjectProvider","injectI18n","Component","_ref$isUsingForwardRe","isUsingForwardRef","_ref$ensureContext","ensureContext","WrappedI18n","i18nInstance","ref","forwardedRef","WrappedComponent","forwardRef","I18nProvider","useMemo","_useI18nSync","useI18nSync","currentLocale","currentMessages","contextValue","_useState","useState","setCurrentLocale","_useState2","setCurrentMessages","handleChange","useCallback","useEffect","ContextI18n","useContext","createIntl","config","_superPropBase","property","_get","Reflect","receiver","base","superPropBase","desc","_defineProperty","APPEND","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","BEFORE_PATH","IN_PATH","BEFORE_IDENT","IN_IDENT","IN_SUB_PATH","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","AFTER_PATH","ERROR","pathStateMachine","ws","ident","eof","number","else","numberFormatKeys","dateTimeFormatKeys","arr","dealNumberOrTimesArgs","numericOrTimeConstansArr","acc","dealLocale","isObject","OBJECT_STRING","isPlainObject","isString","val","isNull","isFunction","dealMsgArgs","pathRet","ret","process","env","NODE_ENV","warn","I18nPath","_cache","parsePath","path","hit","getPathValue","paths","mode","subPathDepth","c","newChar","transition","action","typeMap","actions","formatSubPath","maybeUnescapeQuote","nextChar","getPathCharType","trimmed","isNaN","isLiteral","stripQuotes","literalValueRE","exp","a","b","ch","code","VueI18n","_I18n","localMessages","dateTimeFormats","datetimeFormats","numberFormats","vueMessages","_superPropGet","msgKey","_assertThisInitialize","msgId","$n","_dealNumberOrTimesArg","$d","_len2","_key2","_dealNumberOrTimesArg2","_this$vueMessages$thi","_this$vueMessages","createVueI18nInstance","createI18n","install","app","rootComponent","useI18n","contextI18n","entries","_contextI18n$i18nInst","i18nContext","d","useLocalMessage","useRef","current","createIntlCache","createI18nCache","IntlProvider","injectIntl","RawIntlProvider","defineMessages","msgs","defineMessage"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,6,17,18,19,20,21,23,37,38,39]}