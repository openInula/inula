{"version":3,"file":"vueI18n.min.js","sources":["../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/get.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../src/vueI18n/constants/index.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../../src/vueI18n/utils/utils.ts","../../../src/intl/utils/parseRuleUtils.ts","../../../src/intl/parser/Lexer.ts","../../../src/intl/parser/mappingRule.ts","../../../src/intl/constants/index.ts","../../../src/intl/parser/parseMappingRule.ts","../../../src/intl/parser/parser.ts","../../../src/intl/utils/getTokenAST.ts","../../../src/intl/utils/utils.ts","../../../src/intl/format/fomatters/DateTimeFormatter.ts","../../../src/intl/format/cache/cache.ts","../../../src/intl/format/fomatters/NumberFormatter.ts","../../../src/intl/utils/eventListener.ts","../../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../src/intl/format/fomatters/PluralFormatter.ts","../../../src/intl/format/fomatters/SelectFormatter.ts","../../../src/intl/format/Translation.ts","../../../src/intl/format/generateFormatters.ts","../../../src/intl/utils/formatElements.ts","../../../src/intl/core/I18n.ts","../../../src/intl/format/getFormatMessage.ts","../../../src/intl/utils/copyStaticProps.ts","../../../src/intl/core/components/InjectI18n.tsx","../../../src/intl/core/components/I18nProvider.tsx","../../../src/vueI18n/utils/parseMsgParamUtils.ts","../../../src/vueI18n/VueI18n.ts","../../../src/vueI18n/hooks/useI18n.ts","../../../src/vueI18n/index.ts","../../../src/vueI18n/hooks/createI18n.ts","../../../src/vueI18n/hooks/useLocalMessage.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n// 动作常量\r\nexport const APPEND = 0;\r\nexport const PUSH = 1;\r\nexport const INC_SUB_PATH_DEPTH = 2;\r\nexport const PUSH_SUB_PATH = 3;\r\n\r\n// 状态常量\r\nexport const BEFORE_PATH = 0;\r\nexport const IN_PATH = 1;\r\nexport const BEFORE_IDENT = 2;\r\nexport const IN_IDENT = 3;\r\nexport const IN_SUB_PATH = 4;\r\nexport const IN_SINGLE_QUOTE = 5;\r\nexport const IN_DOUBLE_QUOTE = 6;\r\nexport const AFTER_PATH = 7;\r\nexport const ERROR = 8;\r\n\r\nexport const pathStateMachine: any = {\r\n  [BEFORE_PATH]: {\r\n    ws: [BEFORE_PATH],\r\n    ident: [IN_IDENT, APPEND],\r\n    '[': [IN_SUB_PATH],\r\n    eof: [AFTER_PATH],\r\n  },\r\n  [IN_PATH]: {\r\n    ws: [IN_PATH],\r\n    '.': [BEFORE_IDENT],\r\n    '[': [IN_SUB_PATH],\r\n    eof: [AFTER_PATH],\r\n  },\r\n  [BEFORE_IDENT]: {\r\n    ws: [BEFORE_IDENT],\r\n    ident: [IN_IDENT, APPEND],\r\n    '0': [IN_IDENT, APPEND],\r\n    number: [IN_IDENT, APPEND],\r\n  },\r\n  [IN_IDENT]: {\r\n    ident: [IN_IDENT, APPEND],\r\n    '0': [IN_IDENT, APPEND],\r\n    number: [IN_IDENT, APPEND],\r\n    ws: [IN_PATH, PUSH],\r\n    '.': [BEFORE_IDENT, PUSH],\r\n    '[': [IN_SUB_PATH, PUSH],\r\n    eof: [AFTER_PATH, PUSH],\r\n  },\r\n  [IN_SUB_PATH]: {\r\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\r\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\r\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\r\n    ']': [IN_PATH, PUSH_SUB_PATH],\r\n    eof: ERROR,\r\n    else: [IN_SUB_PATH, APPEND],\r\n  },\r\n  [IN_SINGLE_QUOTE]: {\r\n    \"'\": [IN_SUB_PATH, APPEND],\r\n    eof: ERROR,\r\n    else: [IN_SINGLE_QUOTE, APPEND],\r\n  },\r\n  [IN_DOUBLE_QUOTE]: {\r\n    '\"': [IN_SUB_PATH, APPEND],\r\n    eof: ERROR,\r\n    else: [IN_DOUBLE_QUOTE, APPEND],\r\n  },\r\n};\r\n\r\nexport const numberFormatKeys = [\r\n  'compactDisplay',\r\n  'currency',\r\n  'currencyDisplay',\r\n  'currencySign',\r\n  'localeMatcher',\r\n  'notation',\r\n  'numberingSystem',\r\n  'signDisplay',\r\n  'style',\r\n  'unit',\r\n  'unitDisplay',\r\n  'useGrouping',\r\n  'minimumIntegerDigits',\r\n  'minimumFractionDigits',\r\n  'maximumFractionDigits',\r\n  'minimumSignificantDigits',\r\n  'maximumSignificantDigits',\r\n];\r\n\r\nexport const dateTimeFormatKeys = [\r\n  'dateStyle',\r\n  'timeStyle',\r\n  'calendar',\r\n  'localeMatcher',\r\n  'hour12',\r\n  'hourCycle',\r\n  'timeZone',\r\n  'formatMatcher',\r\n  'weekday',\r\n  'era',\r\n  'year',\r\n  'month',\r\n  'day',\r\n  'hour',\r\n  'minute',\r\n  'second',\r\n  'timeZoneName',\r\n];\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { AllMessages, Locale, Messages } from '../../intl/types/types';\r\nimport I18nPath from './parseMsgParamUtils';\r\n\r\nexport function includes(arr: Array<any>, item: any): boolean {\r\n  return !!~arr.indexOf(item);\r\n}\r\n\r\nexport function dealNumberOrTimesArgs(args: any[], numericOrTimeConstansArr: string[]) {\r\n  let locale: Locale = 'en';\r\n  let key: string;\r\n  let options: object = {};\r\n\r\n  if (args.length === 1) {\r\n    if (typeof args[0] == 'string') {\r\n      key = args[0];\r\n    } else if (typeof args[0] == 'object') {\r\n      if (args[0].locale) {\r\n        locale = args[0].locale;\r\n      }\r\n      if (args[0].key) {\r\n        key = args[0].key;\r\n      }\r\n      options = Object.keys(args[0]).reduce((acc, key) => {\r\n        if (includes(numericOrTimeConstansArr, key)) {\r\n          return Object.assign({}, acc, { [key]: args[0][key] });\r\n        }\r\n        return acc;\r\n      }, {});\r\n    }\r\n  } else if (args.length === 2) {\r\n    if (typeof args[0] == 'string') {\r\n      key = args[0];\r\n    }\r\n    if (typeof args[1] == 'string') {\r\n      locale = args[1];\r\n    }\r\n  }\r\n\r\n  const dealLocale = locale.substring(0, 2);\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-expect-error\r\n  return { dealLocale, key, options };\r\n}\r\n\r\nexport function isObject(obj: string | Messages | AllMessages): boolean {\r\n  return obj !== null && typeof obj === 'object';\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nconst toString: Function = Object.prototype.toString;\r\nconst OBJECT_STRING: string = '[object Object]';\r\n\r\nexport function isPlainObject(obj: any): boolean {\r\n  return toString.call(obj) === OBJECT_STRING;\r\n}\r\n\r\nexport function isString(val: any): boolean {\r\n  return typeof val === 'string';\r\n}\r\n\r\nexport const isArray = Array.isArray;\r\n\r\nexport function isNull(val: any): boolean {\r\n  return val === null || val === undefined;\r\n}\r\n\r\nexport function isFunction(val: any): boolean {\r\n  return typeof val === 'function';\r\n}\r\n\r\nexport function dealMsgArgs(pathRet, message, key) {\r\n  if (isArray(pathRet) || isPlainObject(pathRet)) {\r\n    return pathRet;\r\n  }\r\n\r\n  let ret: any;\r\n  if (isNull(pathRet)) {\r\n    /* istanbul ignore else */\r\n    if (isPlainObject(message)) {\r\n      ret = message[key];\r\n      if (!(isString(ret) || isFunction(ret))) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`Value of key '${key}' is not a string or function !`);\r\n        }\r\n        return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (isString(pathRet) || isFunction(pathRet)) {\r\n      ret = pathRet;\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`Value of key '${key}' is not a string or function!`);\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nfunction getType(input: any): string {\r\n  const str: string = Object.prototype.toString.call(input);\r\n  return str.slice(8, -1).toLowerCase();\r\n}\r\n\r\n// 类型检查器\r\nconst createTypeChecker = (type: string) => {\r\n  return (input: any) => {\r\n    return getType(input) === type.toLowerCase();\r\n  };\r\n};\r\n\r\nconst checkObject = (input: any) => input !== null && typeof input === 'object';\r\n\r\nconst checkRegExp = createTypeChecker('RegExp');\r\n\r\n// 使用正则表达式，如果对象存在则访问该属性，用来判断当前环境是否支持正则表达式sticky属性。\r\nconst checkSticky = () => typeof new RegExp('')?.sticky === 'boolean';\r\n\r\n// 转义正则表达式中的特殊字符\r\nfunction transferReg(str: string): string {\r\n  // eslint-disable-next-line\r\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n\r\n// 计算正则表达式中捕获组的数量，用以匹配（）\r\nfunction getRegGroups(str: string): number {\r\n  const regExp = new RegExp('|' + str);\r\n  // eslint-disable-next-line\r\n  return regExp.exec('')?.length! - 1;\r\n}\r\n\r\n// 创建一个捕获组的正则表达式模式\r\nfunction getRegCapture(str: string): string {\r\n  return '(' + str + ')';\r\n}\r\n\r\n// 将正则表达式合并为一个联合的正则表达式模式\r\nfunction getRegUnion(regexps: string[]): string {\r\n  if (!regexps.length) {\r\n    return '(?!)';\r\n  }\r\n  const source = regexps.map(str => '(?:' + str + ')').join('|');\r\n  return '(?:' + source + ')';\r\n}\r\n\r\nfunction getReg(input: string | Record<string, any>): string {\r\n  if (typeof input === 'string') {\r\n    return '(?:' + transferReg(input) + ')';\r\n  } else if (checkRegExp(input) || checkObject(input)) {\r\n    if (input.ignoreCase) {\r\n      throw new Error('/i prohibition sign');\r\n    }\r\n    if (input.global) {\r\n      throw new Error('/g prohibition sign');\r\n    }\r\n    if (input.sticky) {\r\n      throw new Error('/y prohibition sign');\r\n    }\r\n    if (input.multiline) {\r\n      throw new Error('/m prohibition sign');\r\n    }\r\n    return input.source;\r\n  } else {\r\n    throw new Error(`${input}Non-conformance to specifications!`);\r\n  }\r\n}\r\n\r\nfunction getRulesByObject(object: Record<string, any>) {\r\n  const keys = Object.getOwnPropertyNames(object);\r\n\r\n  // 存储最终的规则数组\r\n  const result: any[] = [];\r\n\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const thing = object[key];\r\n\r\n    // 将属性值转换为规则数组\r\n    const rules = [].concat(thing);\r\n\r\n    // 如果属性名为 'include'，表示需要包含其他规则\r\n    if (key === 'include') {\r\n      for (let j = 0; j < rules.length; j++) {\r\n        result.push({ include: rules[j] });\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // 用于保存当前规则的匹配模式\r\n    let match = [];\r\n    rules.forEach(function (rule) {\r\n      if (checkObject(rule)) {\r\n        // 如果规则是一个对象，表示具有选项设置，添加该规则到结果数组中，并重置匹配模式数组\r\n        if (match.length) result.push(getRuleOptions(key, match));\r\n        result.push(getRuleOptions(key, rule));\r\n        match = [];\r\n      } else {\r\n        match.push(rule);\r\n      }\r\n    });\r\n\r\n    // 如果匹配模式数组中还有剩余的匹配模式，创建规则对象并添加到结果数组中\r\n    if (match.length) result.push(getRuleOptions(key, match));\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getRulesByArray(array: any[]) {\r\n  const result: any[] = [];\r\n\r\n  for (let i = 0; i < array.length; i++) {\r\n    const obj = array[i];\r\n\r\n    // 如果元素具有 'include' 属性，表示需要包含其他规则\r\n    if (obj.include) {\r\n      const include = [].concat(obj.include);\r\n      for (let j = 0; j < include.length; j++) {\r\n        result.push({ include: include[j] });\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (!obj.type) {\r\n      throw new Error('The rule does not have the type attribute.');\r\n    }\r\n    result.push(getRuleOptions(obj.type, obj));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getRuleOptions(type: any, obj: any) {\r\n  // 如果 obj 不是一个对象，则将其转换为包含 'match' 属性的对象\r\n  if (!checkObject(obj)) {\r\n    obj = { match: obj };\r\n  }\r\n\r\n  // 如果 obj 包含 'include' 属性，则抛出错误，因为匹配规则不能包含状态\r\n  if (obj.include) {\r\n    throw new Error('The matching rule cannot contain the status!');\r\n  }\r\n\r\n  // 创建默认的选项对象，初始化各个选项属性\r\n  const options: Record<string, any> = {\r\n    defaultType: type,\r\n    lineBreaks: !!obj.error || !!obj.fallback,\r\n    pop: false,\r\n    next: null,\r\n    push: null,\r\n    error: false,\r\n    fallback: false,\r\n    value: null,\r\n    type: null,\r\n    shouldThrow: false,\r\n  };\r\n\r\n  Object.assign(options, obj);\r\n\r\n  if (typeof options.type === 'string' && type !== options.type) {\r\n    throw new Error('The type attribute cannot be a string.');\r\n  }\r\n\r\n  const match = options.match;\r\n  if (Array.isArray(match)) {\r\n    options.match = match;\r\n  } else if (match) {\r\n    options.match = [match];\r\n  } else {\r\n    options.match = [];\r\n  }\r\n  options.match.sort((str1: string, str2: string) => {\r\n    // 根据规则的类型进行排序，确保正则表达式排在最前面，长度较长的规则排在前面\r\n    if (checkRegExp(str1) && checkRegExp(str2)) {\r\n      return 0;\r\n    } else if (checkRegExp(str2)) {\r\n      return -1;\r\n    } else if (checkRegExp(str1)) {\r\n      return +1;\r\n    } else {\r\n      return str2.length - str1.length;\r\n    }\r\n  });\r\n\r\n  return options;\r\n}\r\n\r\nfunction getRules(spec: any) {\r\n  return Array.isArray(spec) ? getRulesByArray(spec) : getRulesByObject(spec);\r\n}\r\n\r\nconst ruleUtils = {\r\n  checkObject,\r\n  checkRegExp,\r\n  transferReg,\r\n  checkSticky,\r\n  getRegGroups,\r\n  getRegCapture,\r\n  getRegUnion,\r\n  getReg,\r\n  getRulesByObject,\r\n  getRulesByArray,\r\n  getRuleOptions,\r\n  getRules,\r\n};\r\n\r\nexport default ruleUtils;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport ruleUtils from '../utils/parseRuleUtils';\r\nimport { LexerInterface } from '../types/interfaces';\r\n\r\n/**\r\n * 词法解析器，主要根据设计的规则对message进行处理成Token\r\n */\r\nclass Lexer<T> implements LexerInterface<T> {\r\n  readonly startState: string;\r\n  readonly unionReg: Record<string, any>;\r\n  private buffer = '';\r\n  private stack: string[] = [];\r\n  private index = 0;\r\n  private line = 1;\r\n  private col = 1;\r\n  private queuedText = '';\r\n  private state = '';\r\n  private groups: string[] = [];\r\n  private error: Record<string, any> | undefined;\r\n  private regexp: any;\r\n  private fast: Record<string, unknown> = {};\r\n  private queuedGroup: string | null = '';\r\n  private value = '';\r\n\r\n  constructor(unionReg: Record<string, any>, startState: string) {\r\n    this.startState = startState;\r\n    this.unionReg = unionReg;\r\n    this.buffer = '';\r\n    this.stack = [];\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   *  根据新的消息重置解析器\r\n   * @param data 消息数据\r\n   */\r\n  public reset(data?: string) {\r\n    this.buffer = data || '';\r\n    this.index = 0;\r\n    this.line = 1;\r\n    this.col = 1;\r\n    this.queuedText = '';\r\n    this.setState(this.startState);\r\n    this.stack = [];\r\n    return this;\r\n  }\r\n\r\n  private setState(state: string) {\r\n    if (!state || this.state === state) {\r\n      return;\r\n    }\r\n    this.state = state;\r\n    const info = this.unionReg[state];\r\n    this.groups = info.groups;\r\n    this.error = info.error;\r\n    this.regexp = info.regexp;\r\n    this.fast = info.fast;\r\n  }\r\n\r\n  private popState() {\r\n    this.setState(<string>this.stack.pop());\r\n  }\r\n\r\n  private pushState(state: string) {\r\n    this.stack.push(this.state);\r\n    this.setState(state);\r\n  }\r\n\r\n  private getGroup(match: Record<string, object>) {\r\n    const groupCount = this.groups.length;\r\n    for (let i = 0; i < groupCount; i++) {\r\n      if (match[i + 1] !== undefined) {\r\n        return this.groups[i];\r\n      }\r\n    }\r\n    throw new Error('No token type found matching text!');\r\n  }\r\n\r\n  private tokenToString() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 迭代获取下一个 token\r\n   */\r\n  public next() {\r\n    const index = this.index;\r\n\r\n    if (this.queuedGroup) {\r\n      const token = this.getToken(this.queuedGroup, this.queuedText, index);\r\n      this.queuedGroup = null;\r\n      this.queuedText = '';\r\n      return token;\r\n    }\r\n\r\n    const buffer = this.buffer;\r\n    if (index === buffer.length) {\r\n      return;\r\n    }\r\n\r\n    const fastGroup = this.fast[buffer.charCodeAt(index)];\r\n    if (fastGroup) {\r\n      return this.getToken(fastGroup, buffer.charAt(index), index);\r\n    }\r\n\r\n    // 如果没有快速匹配，那么使用预先编译的正则表达式进行匹配操作\r\n    const regexp = this.regexp;\r\n    regexp.lastIndex = index;\r\n    const match = getMatch(regexp, buffer);\r\n    const error = this.error;\r\n    if (match == null) {\r\n      return this.getToken(error, buffer.slice(index, buffer.length), index);\r\n    }\r\n\r\n    const group = this.getGroup(match);\r\n    const text = match[0];\r\n\r\n    if (error?.fallback && match.index !== index) {\r\n      this.queuedGroup = group;\r\n      this.queuedText = text;\r\n      return this.getToken(error, buffer.slice(index, match.index), index);\r\n    }\r\n\r\n    return this.getToken(group, text, index);\r\n  }\r\n\r\n  /**\r\n   * 获取Token\r\n   * @param group 解析模板后获得的属性值\r\n   * @param text 文本属性的信息\r\n   * @param offset 偏移量\r\n   * @private\r\n   */\r\n  private getToken(group: any, text: string, offset: number) {\r\n    let lineNum = 0;\r\n    let last = 1; // 最后一个换行符的索引位置\r\n    if (group.lineBreaks) {\r\n      const matchNL = /\\n/g;\r\n      if (text === '\\n') {\r\n        lineNum = 1;\r\n      } else {\r\n        while (matchNL.exec(text)) {\r\n          lineNum++;\r\n          last = matchNL.lastIndex;\r\n        }\r\n      }\r\n    }\r\n\r\n    const token = {\r\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\r\n      value: typeof group.value === 'function' ? group.value(text) : text,\r\n      text: text,\r\n      toString: this.tokenToString,\r\n      offset: offset, // 标记在输入 buffer 中的偏移量\r\n      lineBreaks: lineNum,\r\n      line: this.line, // token 所在的行号\r\n      col: this.col, // token 所在的列号\r\n    };\r\n\r\n    const size = text.length;\r\n    this.index += size;\r\n    this.line += lineNum;\r\n    if (lineNum !== 0) {\r\n      this.col = size - last + 1;\r\n    } else {\r\n      this.col += size;\r\n    }\r\n\r\n    if (group.shouldThrow) {\r\n      throw new Error('Invalid Syntax!');\r\n    }\r\n\r\n    if (group.pop) {\r\n      this.popState();\r\n    } else if (group.push) {\r\n      this.pushState(group.push);\r\n    } else if (group.next) {\r\n      this.setState(group.next);\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  // 增加迭代器，允许逐个访问集合中的元素方法\r\n  [Symbol.iterator]() {\r\n    return {\r\n      next: (): IteratorResult<T> => {\r\n        const token = this.next();\r\n        return { value: token, done: !token } as IteratorResult<T>;\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * 根据正则表达式，获取匹配到message的值\r\n * 索引为 0 的元素是完整的匹配结果。\r\n * 索引为 1、2、3 等的元素是正则表达式中指定的捕获组的匹配结果。\r\n */\r\nconst getMatch = ruleUtils.checkSticky()\r\n  ? // 正则表达式具有 sticky 标志\r\n    (regexp: any, buffer: string) => regexp.exec(buffer)\r\n  : // 正则表达式具有 global 标志,匹配的字符串长度为 0，则表示匹配失败\r\n    (regexp: any, buffer: string) => (regexp.exec(buffer)[0].length === 0 ? null : regexp.exec(buffer));\r\n\r\nexport default Lexer;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nconst body: Record<string, any> = {\r\n  doubleapos: {\r\n    match: \"''\",\r\n    value: () => \"'\",\r\n  },\r\n  quoted: {\r\n    lineBreaks: true,\r\n    match: /'[{}#](?:[^]*?[^'])?'(?!')/u, // 用以匹配单引号、花括号{}以及井号# 如'Hello' 、{name}、{}#\r\n    value: (src: string) => src.slice(1, -1).replace(/''/g, \"'\"),\r\n  },\r\n  argument: {\r\n    lineBreaks: true,\r\n\r\n    // 用于匹配{name、{Hello{World，匹配{ }花括号中有任何Unicode字符，如空格、制表符等\r\n    match: /\\{\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*/u,\r\n    push: 'arg',\r\n    value: (src: string) => src.substring(1).trim(),\r\n  },\r\n  octothorpe: '#',\r\n  end: {\r\n    match: '}',\r\n    pop: 1,\r\n  },\r\n  content: {\r\n    lineBreaks: true,\r\n    match: /[^][^{}#]*/u, // 主要匹配不包含[]任何字符（除了换行符）、不包含{}、#的任何个字符\r\n  },\r\n};\r\n\r\nconst arg: Record<string, any> = {\r\n  select: {\r\n    lineBreaks: true,\r\n    match: /,\\s*(?:plural|select|selectordinal)\\s*,\\s*/u, // 匹配内容包含 plural、select 或 selectordinal\r\n    next: 'select', // 继续解析下一个参数\r\n    value: (src: string) => src.split(',')[1].trim(), // 提取第二个参数，并处理收尾空格\r\n  },\r\n  'func-args': {\r\n    // 匹配是否包含其他非特殊字符的参数,匹配结果包含特殊字符，如param1, param2, param3\r\n    lineBreaks: true,\r\n    match: /,\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*,/u,\r\n    next: 'body',\r\n    value: (src: string) => src.split(',')[1].trim(), // 参数字符串去除逗号并去除首尾空格\r\n  },\r\n  'func-simple': {\r\n    // 匹配是否包含其他简单参数，匹配结果不包含标点符号：param1 param2 param3\r\n    lineBreaks: true,\r\n    match: /,\\s*[^\\p{Pat_Syn}\\p{Pat_WS}]+\\s*/u,\r\n    value: (src: string) => src.substring(1).trim(),\r\n  },\r\n  end: {\r\n    match: '}',\r\n    pop: 1,\r\n  },\r\n};\r\n\r\nconst select: Record<string, any> = {\r\n  offset: {\r\n    lineBreaks: true,\r\n    match: /\\s*offset\\s*:\\s*\\d+\\s*/u, // 匹配message中是否包含偏移量offest信息\r\n    value: (src: string) => src.split(':')[1].trim(),\r\n  },\r\n  case: {\r\n    // 检查匹配该行是否包含分支信息。\r\n    lineBreaks: true,\r\n\r\n    // 设置规则匹配以左大括号 { 结尾的字符串，以等号 = 后跟数字开头的字符串，或者以非特殊符号和非空白字符开头的字符串，如 '=1 {'\r\n    match: /\\s*(?:=\\d+|[^\\p{Pat_Syn}\\p{Pat_WS}]+)\\s*\\{/u,\r\n    push: 'body', // 匹配成功，则会push到body栈中\r\n    value: (src: string) => src.substring(0, src.indexOf('{')).trim(),\r\n  },\r\n  end: {\r\n    match: /\\s*\\}/u,\r\n    pop: 1,\r\n  },\r\n};\r\n\r\nexport const mappingRule: Record<string, any> = {\r\n  body,\r\n  arg,\r\n  select,\r\n};\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n/**\r\n * \\\\(?:u\\{[a-fA-F0-9]+}) 匹配形如 \\u{0020} 的 Unicode 转义字符。\r\n * \\\\x[a-fA-F0-9]{2} 匹配形如 \\x0A 的十六进制转义字符。\r\n * [nrtf'\"] 匹配常见的转义字符：\\n（换行符）、\\r（回车符）、\\t（制表符）、\\f（换页符）、\\'（单引号）和 \\\"（双引号）。\r\n */\r\nexport const UNICODE_REG: RegExp = /\\\\(?:u\\{[a-fA-F0-9]+}|x[a-fA-F0-9]{2}|[nrtf'\"])/g;\r\nexport const STICKY_FLAG: string = 'ym';\r\nexport const GLOBAL_FLAG: string = 'gm';\r\n\r\nexport const VERTICAL_LINE: string = '|';\r\nexport const UNICODE_FLAG: string = 'u';\r\nexport const STATE_GROUP_START_INDEX: number = 1;\r\n// Inula 需要被保留静态常量\r\nexport const INULA_STATICS = {\r\n  childContextTypes: true,\r\n  contextType: true,\r\n  contextTypes: true,\r\n  defaultProps: true,\r\n  displayName: true,\r\n  getDefaultProps: true,\r\n  getDerivedStateFromError: true,\r\n  getDerivedStateFromProps: true,\r\n  mixins: true,\r\n  propTypes: true,\r\n  type: true,\r\n};\r\n\r\n// JavaScript 需要被保留原生静态属性\r\nexport const NATIVE_STATICS = {\r\n  name: true,\r\n  length: true,\r\n  prototype: true,\r\n  caller: true,\r\n  callee: true,\r\n  arguments: true,\r\n  arity: true,\r\n};\r\n\r\n// Inula ForwardRef 组件的静态属性需要被保留\r\nexport const INULA_FORWARD_REF_STATICS = {\r\n  vtype: true,\r\n  render: true,\r\n  defaultProps: true,\r\n  key: true,\r\n  type: true,\r\n};\r\n\r\n// React ForwardRef 组件的静态属性需要被保留\r\nexport const REACT_FORWARD_REF_STATICS = {\r\n  $$typeof: true, // inula 'vtype': true\r\n  render: true, // render\r\n  defaultProps: true, // props\r\n  displayName: true,\r\n  propTypes: true, // type: type,\r\n};\r\n\r\nexport const FORWARD_REF_STATICS = { ...INULA_FORWARD_REF_STATICS, ...REACT_FORWARD_REF_STATICS };\r\n\r\n// Inula Memo 组件的静态属性需要被保留\r\nexport const INULA_MEMO_STATICS = {\r\n  vtype: true, // inula 'vtype': true\r\n  compare: true,\r\n  defaultProps: true,\r\n  type: true,\r\n};\r\n\r\n// 默认复数规则\r\nexport const DEFAULT_PLURAL_KEYS = ['zero', 'one', 'two', 'few', 'many', 'other'];\r\n\r\nexport const voidElementTags = [\r\n  'area',\r\n  'base',\r\n  'br',\r\n  'col',\r\n  'embed',\r\n  'hr',\r\n  'img',\r\n  'input',\r\n  'keygen',\r\n  'link',\r\n  'meta',\r\n  'param',\r\n  'source',\r\n  'track',\r\n  'wbr',\r\n  'menuitem',\r\n];\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport Lexer from './Lexer';\r\nimport { mappingRule } from './mappingRule';\r\nimport ruleUtils from '../utils/parseRuleUtils';\r\nimport { RawToken } from '../types/types';\r\nimport { STATE_GROUP_START_INDEX, GLOBAL_FLAG, STICKY_FLAG, UNICODE_FLAG, VERTICAL_LINE } from '../constants';\r\n\r\nconst defaultErrorRule = ruleUtils.getRuleOptions('error', { lineBreaks: true, shouldThrow: true });\r\n\r\n// 解析规则并生成词法分析器所需的数据结构，以便进行词法分析操作\r\nfunction parseRules(rules: Record<string, any>, hasStates: boolean): Record<string, object> {\r\n  let errorRule: Record<string, object> | null = null;\r\n  const fast: Record<string, unknown> = {};\r\n  let enableFast = true;\r\n  let unicodeFlag: boolean | null = null;\r\n  const groups: Record<string, any>[] = [];\r\n  const parts: string[] = [];\r\n\r\n  // 检查是否存在 fallback 规则，若存在则禁用快速匹配\r\n  enableFast = isExistsFallback(rules, enableFast);\r\n\r\n  for (let i = 0; i < rules.length; i++) {\r\n    const options = rules[i];\r\n    if (options.include) {\r\n      throw new Error('Inheritance is not allowed in stateless lexers!');\r\n    }\r\n\r\n    errorRule = isOptionsErrorOrFallback(options, errorRule);\r\n\r\n    const match = options.match.slice();\r\n    if (enableFast) {\r\n      // 如果快速匹配允许，则将单字符的规则存入 fast 对象\r\n      processFast(match, fast, options);\r\n    }\r\n\r\n    // 检查规则中是否存在不适当的状态切换选项\r\n    if (options.pop || options.push || options.next) {\r\n      checkStateOptions(hasStates, options);\r\n    }\r\n    // 只有具有 .match 的规则才会被包含在正则表达式中\r\n    if (match.length === 0) {\r\n      continue;\r\n    }\r\n    enableFast = false;\r\n\r\n    groups.push(options);\r\n\r\n    // 检查是否所有规则都使用了unicode，或者都未使用\r\n    unicodeFlag = checkUnicode(match, unicodeFlag, options);\r\n\r\n    const pat = ruleUtils.getRegUnion(match.map(ruleUtils.getReg));\r\n    const regexp = new RegExp(pat);\r\n    if (regexp.test('')) {\r\n      throw new Error('The regex matched the empty string!');\r\n    }\r\n    const groupCount = ruleUtils.getRegGroups(pat);\r\n    if (groupCount > 0) {\r\n      throw new Error('The regular expression uses capture groups, use (?: … ) instead!');\r\n    }\r\n\r\n    // 检测规则是否匹配换行符\r\n    if (!options.lineBreaks && regexp.test('\\n')) {\r\n      throw new Error('The matching rule must contain lineBreaks.');\r\n    }\r\n\r\n    parts.push(ruleUtils.getRegCapture(pat));\r\n  }\r\n\r\n  // 如果没有 fallback 规则，则使用 sticky 标志，只在当前索引位置寻找匹配项，如果不支持 sticky 标志，则使用无法被否定的空模式来模拟\r\n  const fallbackRule = errorRule && errorRule.fallback;\r\n  let flags = ruleUtils.checkSticky() && !fallbackRule ? STICKY_FLAG : GLOBAL_FLAG;\r\n  const suffix = ruleUtils.checkSticky() || fallbackRule ? '' : VERTICAL_LINE;\r\n\r\n  if (unicodeFlag === true) {\r\n    flags += UNICODE_FLAG;\r\n  }\r\n  const combined = new RegExp(ruleUtils.getRegUnion(parts) + suffix, flags);\r\n\r\n  return {\r\n    regexp: combined,\r\n    groups: groups,\r\n    fast: fast,\r\n    error: errorRule || defaultErrorRule,\r\n  };\r\n}\r\n\r\nexport function checkStateGroup(group: Record<string, any>, name: string, mappingRules: Record<string, object>) {\r\n  const state = group && (group.push || group.next);\r\n  if (state && !mappingRules[state]) {\r\n    throw new Error('The state is missing.');\r\n  }\r\n  if (group && group.pop && +group.pop !== STATE_GROUP_START_INDEX) {\r\n    throw new Error('The value of pop must be 1.');\r\n  }\r\n}\r\n\r\n// 将国际化解析规则注入分词器中\r\nfunction parseMappingRule(mappingRule: Record<string, object>, startState?: string): Lexer<RawToken> {\r\n  const keys = Object.getOwnPropertyNames(mappingRule);\r\n\r\n  if (!startState) {\r\n    startState = keys[0];\r\n  }\r\n\r\n  // 将每个状态的规则解析为规则数组，并存储在 ruleMap 对象中\r\n  const ruleMap = keys.reduce((map, key) => {\r\n    map[key] = ruleUtils.getRules(mappingRule[key]);\r\n    return map;\r\n  }, {});\r\n\r\n  // 处理规则中的 include 声明，将被包含的规则添加到相应的状态中\r\n  for (let i = 0; i < keys.length; i++) {\r\n    const key = keys[i];\r\n    const rules = ruleMap[key];\r\n    const included = {};\r\n\r\n    for (let j = 0; j < rules.length; j++) {\r\n      const rule = rules[j];\r\n      if (!rule.include) {\r\n        continue;\r\n      }\r\n\r\n      const splice = [j, STATE_GROUP_START_INDEX];\r\n      if (rule.include !== key && !included[rule.include]) {\r\n        included[rule.include] = true;\r\n        const newRules = ruleMap[rule.include];\r\n\r\n        if (!newRules) {\r\n          throw new Error('Cannot contain a state that does not exist!');\r\n        }\r\n\r\n        newRules.forEach(newRule => {\r\n          if (!rules.includes(newRule)) {\r\n            splice.push(newRule);\r\n          }\r\n        });\r\n      }\r\n      // eslint-disable-next-line\r\n      rules.splice.apply(rules, splice);\r\n      j--;\r\n    }\r\n  }\r\n\r\n  const mappingAllRules = {};\r\n\r\n  // 将规则映射为词法分析器数据结构，并存储在 mappingAllRules 对象中\r\n  keys.forEach(key => {\r\n    mappingAllRules[key] = parseRules(ruleMap[key], true);\r\n  });\r\n\r\n  // 检查状态组中的规则是否正确引用了其他状态\r\n  keys.forEach(name => {\r\n    const state = mappingAllRules[name];\r\n    const groups = state.groups;\r\n    groups.forEach(group => {\r\n      checkStateGroup(group, name, mappingAllRules);\r\n    });\r\n    const fastKeys = Object.getOwnPropertyNames(state.fast);\r\n    fastKeys.forEach(fastKey => {\r\n      checkStateGroup(state.fast[fastKey], name, mappingAllRules);\r\n    });\r\n  });\r\n\r\n  // 将规则注入到词法解析器\r\n  return new Lexer(mappingAllRules, startState);\r\n}\r\n\r\n/**\r\n * 快速匹配模式\r\n * @param match\r\n * @param fast\r\n * @param options\r\n */\r\nfunction processFast(match: Record<string, any>, fast: Record<string, unknown> = {}, options: Record<string, object>) {\r\n  while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\r\n    // 获取到数组的第一个元素\r\n    const word = match.shift();\r\n    fast[word.charCodeAt(0)] = options;\r\n  }\r\n}\r\n\r\n/**\r\n *  用以处理错误逻辑\r\n * @param options 操作属性\r\n * @param errorRule 错误规则\r\n */\r\nfunction handleErrorRule(options: Record<string, object>, errorRule: Record<string, object>) {\r\n  if (!options.fallback === !errorRule.fallback) {\r\n    throw new Error('errorRule can only set one!');\r\n  } else {\r\n    throw new Error('fallback and error cannot be set at the same time!');\r\n  }\r\n}\r\n\r\n/**\r\n * 用以检查message中是否包含Unicode\r\n * @param match 匹配到的message\r\n * @param unicodeFlag Unicode标志\r\n * @param options 操作属性\r\n */\r\nfunction checkUnicode(match: Record<string, any>, unicodeFlag: boolean | null, options: Record<string, any>) {\r\n  for (let j = 0; j < match.length; j++) {\r\n    const obj = match[j];\r\n    if (!ruleUtils.checkRegExp(obj)) {\r\n      continue;\r\n    }\r\n\r\n    if (unicodeFlag === null) {\r\n      unicodeFlag = obj.unicode;\r\n    } else {\r\n      if (unicodeFlag !== obj.unicode && options.fallback === false) {\r\n        throw new Error('If the /u flag is used, all!');\r\n      }\r\n    }\r\n  }\r\n  return unicodeFlag;\r\n}\r\n\r\nfunction checkStateOptions(hasStates: boolean, options: Record<string, any>) {\r\n  if (!hasStates) {\r\n    throw new Error('State toggle options are not allowed in stateless tokenizers!');\r\n  }\r\n  if (options.fallback) {\r\n    throw new Error('State toggle options are not allowed on fallback tokens!');\r\n  }\r\n}\r\n\r\n/**\r\n * 检查是否存在fallback属性，用以来判断快速匹配规则\r\n * @param rules\r\n * @param enableFast\r\n */\r\nfunction isExistsFallback(rules: Record<string, any>, enableFast: boolean) {\r\n  for (let i = 0; i < rules.length; i++) {\r\n    if (rules[i].fallback) {\r\n      enableFast = false;\r\n    }\r\n  }\r\n  return enableFast;\r\n}\r\n\r\nfunction isOptionsErrorOrFallback(options: Record<string, object>, errorRule: Record<string, object> | null) {\r\n  if (options.error || options.fallback) {\r\n    // 只能设置一个 errorRule\r\n    if (errorRule) {\r\n      handleErrorRule(options, errorRule);\r\n    }\r\n    errorRule = options;\r\n  }\r\n  return errorRule;\r\n}\r\n\r\nexport const lexer = parseMappingRule(mappingRule);\r\n\r\nexport default parseMappingRule;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { lexer } from './parseMappingRule';\r\nimport { RawToken } from '../types/types';\r\nimport { DEFAULT_PLURAL_KEYS } from '../constants';\r\nimport { Content, FunctionArg, PlainArg, Select, TokenContext } from '../types/interfaces';\r\n\r\n/**\r\n *  语法解析器，根据Token,获得具备上下文的AST\r\n */\r\nclass Parser {\r\n  cardinalKeys: string[] = DEFAULT_PLURAL_KEYS;\r\n  ordinalKeys: string[] = DEFAULT_PLURAL_KEYS;\r\n\r\n  constructor(message: string) {\r\n    lexer.reset(message);\r\n  }\r\n\r\n  isSelectKeyValid(type: Select['type'], value: string) {\r\n    if (value[0] === '=') {\r\n      if (type === 'select') {\r\n        throw new Error('The key value of the select type is invalid.');\r\n      }\r\n    } else if (type !== 'select') {\r\n      const values = type === 'plural' ? this.cardinalKeys : this.ordinalKeys;\r\n      if (values.length > 0 && !values.includes(value)) {\r\n        throw new Error(`${type} type key value is invalid.`);\r\n      }\r\n    }\r\n  }\r\n\r\n  processSelect({ value: arg }: any, isPlural: boolean, context: TokenContext, type: Select['type']): Select {\r\n    const select: Select = { type, arg, cases: [], ctx: context };\r\n\r\n    if (type === 'plural' || type === 'selectordinal') {\r\n      isPlural = true;\r\n    }\r\n\r\n    for (const token of lexer) {\r\n      switch (token.type) {\r\n        case 'offset': {\r\n          if (type === 'select') {\r\n            throw new Error('The complex offset of the select type is incorrect.');\r\n          }\r\n          if (select.cases.length > 0) {\r\n            throw new Error('The complex offset must be set before cases.');\r\n          }\r\n\r\n          select.offset = Number(token.value);\r\n          context.text += token.text;\r\n          context.lineNum += token.lineBreaks;\r\n          break;\r\n        }\r\n        case 'case': {\r\n          this.isSelectKeyValid(type, token.value);\r\n          select.cases.push({\r\n            key: token.value.replace(/=/g, ''),\r\n            tokens: this.parse(isPlural),\r\n            ctx: getContext(token),\r\n          });\r\n          break;\r\n        }\r\n        case 'end': {\r\n          return select;\r\n        }\r\n        default: {\r\n          throw new Error(`Unrecognized analyzer token: ${token.type}`);\r\n        }\r\n      }\r\n    }\r\n    throw new Error('The message end position is invalid.');\r\n  }\r\n\r\n  /**\r\n   * 解析获得的Token\r\n   * @param token\r\n   * @param isPlural\r\n   */\r\n  parseToken(token: RawToken, isPlural: boolean): PlainArg | FunctionArg | Select {\r\n    const context = getContext(token);\r\n    const nextToken = lexer.next();\r\n\r\n    if (!nextToken) {\r\n      throw new Error('The message end position is invalid.');\r\n    }\r\n\r\n    context.text += nextToken.text;\r\n    context.lineNum += nextToken.lineBreaks;\r\n\r\n    switch (nextToken.type) {\r\n      case 'end': {\r\n        return { type: 'argument', arg: token.value, ctx: context };\r\n      }\r\n      case 'func-simple': {\r\n        const end = lexer.next();\r\n        if (!end) {\r\n          throw new Error('The message end position is invalid.');\r\n        }\r\n        if (end.type !== 'end') {\r\n          throw new Error(`Unrecognized analyzer token: ${end.type}`);\r\n        }\r\n        context.text += end.text;\r\n        if (checkSelectType(nextToken.value.toLowerCase())) {\r\n          throw new Error(`Invalid parameter type: ${nextToken.value}`);\r\n        }\r\n        return {\r\n          type: 'function',\r\n          arg: token.value,\r\n          key: nextToken.value,\r\n          ctx: context,\r\n        };\r\n      }\r\n      case 'func-args': {\r\n        if (checkSelectType(nextToken.value.toLowerCase())) {\r\n          throw new Error(`Invalid parameter type: ${nextToken.value}`);\r\n        }\r\n        const param = this.parse(isPlural);\r\n\r\n        return {\r\n          type: 'function',\r\n          arg: token.value,\r\n          key: nextToken.value,\r\n          param,\r\n          ctx: context,\r\n        };\r\n      }\r\n      case 'select':\r\n        if (checkSelectType(nextToken.value)) {\r\n          return this.processSelect(token, isPlural, context, nextToken.value);\r\n        } else {\r\n          throw new Error(`Invalid select type: ${nextToken.value}`);\r\n        }\r\n      default:\r\n        throw new Error(`Unrecognized analyzer token: ${nextToken.type}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 解析方法入口\r\n   * 在根级别解析时，遇到结束符号即结束解析并返回结果；而在非根级别解析时，遇到结束符号会被视为不合法的结束位置，抛出错误\r\n   * @param isPlural  标记复数\r\n   * @param isRoot  标记根节点\r\n   */\r\n  parse(isPlural: boolean, isRoot?: boolean): Array<Content | PlainArg | FunctionArg | Select> {\r\n    const tokens: any[] = [];\r\n    let content: string | Content | null = null;\r\n\r\n    for (const token of lexer) {\r\n      if (token.type === 'argument') {\r\n        if (content) {\r\n          content = null;\r\n        }\r\n        tokens.push(this.parseToken(token, isPlural));\r\n      } else if (token.type === 'octothorpe' && isPlural) {\r\n        if (content) {\r\n          content = null;\r\n        }\r\n        tokens.push({ type: 'octothorpe' });\r\n      } else if (token.type === 'end' && !isRoot) {\r\n        return tokens;\r\n      } else if (token.type === 'doubleapos') {\r\n        tokens.push(token.value);\r\n      } else if (token.type === 'quoted') {\r\n        tokens.push(token.value);\r\n      } else if (token.type === 'content') {\r\n        tokens.push(token.value);\r\n      } else {\r\n        let value = token.value;\r\n        if (!isPlural && token.type === 'quoted' && value[0] === '#') {\r\n          if (value.includes('{')) {\r\n            throw new Error(`Invalid template: ${value}`);\r\n          }\r\n          value = token.text;\r\n        }\r\n        if (content) {\r\n          content = value;\r\n        } else {\r\n          content = value;\r\n          tokens.push(content);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isRoot) {\r\n      return tokens;\r\n    }\r\n    throw new Error('The message end position is invalid.');\r\n  }\r\n}\r\n\r\n/**\r\n * 获得 Token 的上下文\r\n * @param Token Token\r\n */\r\nconst getContext = (Token: RawToken): TokenContext => ({\r\n  offset: Token.offset,\r\n  line: Token.line,\r\n  col: Token.col,\r\n  text: Token.text,\r\n  lineNum: Token.lineBreaks,\r\n});\r\n\r\n// 用以检查select规则中的类型\r\nexport const checkSelectType = (value: string): boolean => {\r\n  return value === 'plural' || value === 'select' || value === 'selectordinal';\r\n};\r\n\r\nexport default function parse(message: string): Array<Content | PlainArg | FunctionArg | Select> {\r\n  const parser = new Parser(message);\r\n  return parser.parse(false, true);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\n/**\r\n * 将parse后的Token数组针对不同的匀速类型进行处理\r\n */\r\nenum TokenType {\r\n  octothorpe = 'OCTOTHORPE',\r\n  argument = 'ARGUMENT',\r\n  function = 'FUNCTION',\r\n}\r\n\r\nconst processToken = token => {\r\n  if (typeof token === 'string') {\r\n    return token;\r\n  } else if (TokenType[token.type] === 'OCTOTHORPE') {\r\n    // token为符号\r\n    return '#';\r\n  } else if (TokenType[token.type] === 'ARGUMENT') {\r\n    // token为变量\r\n    return [token.arg];\r\n  } else if (TokenType[token.type] === 'FUNCTION') {\r\n    // token为函数方法\r\n    const _param = token.param && token.param.tokens[0];\r\n    const param = typeof _param === 'string' ? _param.trim() : _param;\r\n    return [token.arg, token.key, param].filter(Boolean);\r\n  }\r\n\r\n  const offset = token.offset ? parseInt(token.offset) : undefined;\r\n\r\n  const tempFormatProps = {};\r\n  token.cases.forEach(item => {\r\n    tempFormatProps[item.key] = getTokenAST(item.tokens);\r\n  });\r\n\r\n  const mergedProps = Object.assign({}, { offset }, tempFormatProps);\r\n\r\n  return [token.arg, token.type, mergedProps];\r\n};\r\n\r\nfunction getTokenAST(tokens) {\r\n  if (!Array.isArray(tokens)) {\r\n    return tokens.join('');\r\n  }\r\n  return tokens.map(token => processToken(token));\r\n}\r\n\r\nexport default getTokenAST;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { CompiledMessage } from '../types/types';\r\nimport parse from '../parser/parser';\r\nimport getTokenAST from './getTokenAST';\r\nimport I18n from '../core/I18n';\r\n\r\nexport function isVariantI18n(i18n?: I18n) {\r\n  if (!i18n) {\r\n    throw new Error('I18n object is not found!');\r\n  }\r\n}\r\n\r\nfunction generateKey<T>(locales?: string | string[], options?: T, valueKey?: string | undefined) {\r\n  const localeKey = Array.isArray(locales) ? locales.sort().join('-') : locales;\r\n  return `${localeKey}:${JSON.stringify(options ?? {})}_${valueKey ?? ''}`;\r\n}\r\n\r\nfunction compile(message: string): CompiledMessage {\r\n  try {\r\n    return getTokenAST(parse(message));\r\n  } catch (e) {\r\n    console.error(`Message cannot be parse due to syntax errors: ${message},cause by ${e}`);\r\n    return message;\r\n  }\r\n}\r\n\r\nconst utils = {\r\n  isVariantI18n,\r\n  generateKey,\r\n  compile,\r\n};\r\n\r\nexport function createI18nProps(source) {\r\n  return {\r\n    intl: source,\r\n    locale: source.locale,\r\n    messages: source.messages,\r\n    defaultLocale: source.defaultLocale,\r\n    timeZone: source.timeZone,\r\n    onError: source.onError,\r\n    formatMessage: source.formatMessage.bind(source),\r\n    formatDate: source.formatDate ? source.formatDate.bind(source) : source.DateTimeFormat,\r\n    formatNumber: source.formatNumber ? source.formatNumber.bind(source) : source.NumberFormat,\r\n    $t: source.$t || source.formatMessage.bind(source),\r\n  };\r\n}\r\n\r\nexport default utils;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport creatI18nCache from '../cache/cache';\r\nimport utils from '../../utils/utils';\r\nimport { DatePool, Locales } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 时间格式化\r\n */\r\nclass DateTimeFormatter {\r\n  private readonly locales: Locales;\r\n  private readonly formatOptions: Intl.DateTimeFormatOptions;\r\n  // 创建一个缓存对象，用于存储DateTimeFormat的对象\r\n  private readonly cache?: I18nCache;\r\n  private readonly valueKey?: string;\r\n\r\n  constructor(locales: Locales, formatOptions?: Intl.DateTimeFormatOptions, cache?: I18nCache, valueKey?: string) {\r\n    this.locales = locales;\r\n    this.formatOptions = formatOptions ?? {};\r\n    this.cache = cache ?? creatI18nCache();\r\n    this.valueKey = valueKey ?? '';\r\n  }\r\n\r\n  dateTimeFormat(value: DatePool, formatOptions?: Intl.DateTimeFormatOptions): string {\r\n    const options = formatOptions ?? this.formatOptions;\r\n    const formatter = new Intl.DateTimeFormat(this.locales, options);\r\n    // 将传输的字符串转变为日期对象\r\n    if (typeof value === 'string') {\r\n      value = new Date(value);\r\n    }\r\n\r\n    // 如果启用了记忆化且已经有对应的数字格式化器缓存，则直接返回缓存中的格式化结果。否则创建新的格式化数据，并进行缓存\r\n    if (this.cache?.dateTimeFormat) {\r\n      // 造缓存的key，key包含区域设置和日期时间格式选项\r\n      const cacheKey = utils.generateKey<Intl.DateTimeFormatOptions>(this.locales, options, this.valueKey);\r\n\r\n      if (this.cache.dateTimeFormat[cacheKey]) {\r\n        return this.cache.dateTimeFormat[cacheKey].format(value);\r\n      }\r\n\r\n      // 查询缓存中的key， 若无key则创建新key\r\n      this.cache.dateTimeFormat[cacheKey] = formatter;\r\n      return formatter.format(value);\r\n    }\r\n\r\n    // 返回格式化后的时间\r\n\r\n    return formatter.format(value);\r\n  }\r\n}\r\n\r\nexport default DateTimeFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 缓存机制\r\n */\r\nfunction creatI18nCache(): I18nCache {\r\n  return {\r\n    dateTimeFormat: {},\r\n    numberFormat: {},\r\n    plurals: {},\r\n    select: {},\r\n    octothorpe: {},\r\n  };\r\n}\r\n\r\nexport default creatI18nCache;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport creatI18nCache from '../cache/cache';\r\nimport { Locales } from '../../types/types';\r\nimport utils from '../../utils/utils';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 数字格式化\r\n */\r\nclass NumberFormatter {\r\n  private readonly locales: Locales;\r\n  private readonly formatOption?: Intl.NumberFormatOptions;\r\n  private cache?: I18nCache; // 创建一个缓存对象，用于缓存已经创建的数字格式化器\r\n  private readonly valueKey?: string;\r\n\r\n  constructor(locales: Locales, formatOption?: Intl.NumberFormatOptions, cache?: I18nCache, valueKey?: string) {\r\n    this.locales = locales;\r\n    this.formatOption = formatOption ?? {};\r\n    this.cache = cache ?? creatI18nCache();\r\n    this.valueKey = valueKey ?? '';\r\n  }\r\n\r\n  numberFormat(value: number, formatOption?: Intl.NumberFormatOptions): string {\r\n    const options = formatOption ?? this.formatOption;\r\n    const formatter = new Intl.NumberFormat(this.locales, options);\r\n\r\n    // 如果启用了记忆化且已经有对应的数字格式化器缓存，则直接返回缓存中的格式化结果。否则创建新的格式化数据，并进行缓存\r\n    if (this.cache?.numberFormat) {\r\n      // 造缓存的key，key包含区域设置数字格式选项\r\n      const cacheKey = utils.generateKey<Intl.NumberFormatOptions>(this.locales, options, this.valueKey);\r\n\r\n      if (this.cache.numberFormat[cacheKey]) {\r\n        return this.cache.numberFormat[cacheKey].format(value);\r\n      }\r\n\r\n      this.cache.numberFormat[cacheKey] = formatter;\r\n      return formatter.format(value);\r\n    }\r\n    return formatter.format(value);\r\n  }\r\n}\r\n\r\nexport default NumberFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { EventCallback } from '../types/types';\r\n\r\n/**\r\n * 定义一个时间触发器类，使用泛型实现动态时间的监听\r\n */\r\nclass EventDispatcher<E extends Record<string, EventCallback>> {\r\n  // 声明_events，用于存储事件和对应的监听器\r\n  private _events: Map<keyof E, Set<EventCallback>>;\r\n\r\n  constructor() {\r\n    this._events = new Map();\r\n  }\r\n\r\n  /**\r\n   * on 方法，向指定的事件添加监听器，并返回一个用于移除该监听器的函数\r\n   * @param event\r\n   * @param listener\r\n   */\r\n  on(event: keyof E, listener: E[keyof E]): () => void {\r\n    if (!this._events.has(event)) {\r\n      this._events.set(event, new Set());\r\n    }\r\n    const listeners = this._events.get(event)!;\r\n    listeners.add(listener);\r\n\r\n    return () => {\r\n      this.removeListener(event, listener);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * removeListener 方法，移除指定事件的监听器\r\n   * @param event\r\n   * @param listener\r\n   */\r\n  removeListener(event: keyof E, listener: E[keyof E]): void {\r\n    if (!this._events.has(event)) {\r\n      return;\r\n    }\r\n    const listeners = this._events.get(event)!;\r\n    listeners.delete(listener);\r\n    if (listeners.size === 0) {\r\n      this._events.delete(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * emit 方法，触发指定事件，并按照监听器注册顺序执行监听器\r\n   * @param event\r\n   * @param args\r\n   */\r\n  emit(event: keyof E, ...args: Parameters<E[keyof E]>): void {\r\n    if (!this._events.has(event)) {\r\n      return;\r\n    }\r\n\r\n    // 获取该事件对应的监听器集合，并按照注册顺序执行每个监听器\r\n    const listeners = this._events.get(event)!;\r\n    for (const listener of listeners) {\r\n      listener.apply(this, args);\r\n    }\r\n  }\r\n}\r\n\r\nexport default EventDispatcher;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../../utils/utils';\r\nimport NumberFormatter from './NumberFormatter';\r\nimport { Locale, Locales } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\nimport creatI18nCache from '../cache/cache';\r\n\r\n/**\r\n * 复数格式化\r\n */\r\nclass PluralFormatter {\r\n  private readonly locale: Locale;\r\n  private readonly locales: Locales;\r\n  private readonly value: number;\r\n  private readonly message: any;\r\n  constructor(locale: Locale, locales: Locales, value: any, message: any) {\r\n    this.locale = locale;\r\n    this.locales = locales;\r\n    this.value = value;\r\n    this.message = message;\r\n  }\r\n\r\n  // 将 message中的“#”替换为指定数字value，并返回新的字符串或者字符串数组\r\n  replaceSymbol(ctx: any) {\r\n    const msg = typeof this.message === 'function' ? this.message(ctx) : this.message;\r\n    const messages = Array.isArray(msg) ? msg : [msg];\r\n\r\n    const numberFormatter = new NumberFormatter(this.locales);\r\n    const valueStr = numberFormatter.numberFormat(this.value);\r\n\r\n    return messages.map(msg => (typeof msg === 'string' ? msg.replace('#', valueStr) : msg));\r\n  }\r\n}\r\n\r\nexport default PluralFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../../utils/utils';\r\nimport { Locale, SelectPool } from '../../types/types';\r\nimport { I18nCache } from '../../types/interfaces';\r\n\r\n/**\r\n * 规则选择器\r\n * eg : 输入选择语句 female {She} other {They}} ，表示'female'和'other'是两种可能的值，它们分别对应着'She'和'They'两个输出结果。\r\n * 如果调用select（{ value: 'female' }）则表示，输出 she\r\n */\r\nclass SelectFormatter {\r\n  private readonly locale: Locale;\r\n\r\n  constructor(locale: Locale) {\r\n    this.locale = locale;\r\n  }\r\n\r\n  getRule(value: SelectPool, rules: any) {\r\n    return rules[value] || rules.other;\r\n  }\r\n}\r\n\r\nexport default SelectFormatter;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { CompiledMessage, Locale, LocaleConfig, Locales } from '../types/types';\r\nimport generateFormatters from './generateFormatters';\r\nimport { FormatOptions, I18nCache } from '../types/interfaces';\r\nimport creatI18nCache from './cache/cache';\r\n\r\n/**\r\n * 获取翻译结果\r\n */\r\nclass Translation {\r\n  private readonly compiledMessage: CompiledMessage;\r\n  private readonly locale: Locale;\r\n  private readonly locales: Locales;\r\n  private readonly localeConfig: Record<string, any>;\r\n  private readonly cache: I18nCache;\r\n\r\n  constructor(\r\n    compiledMessage: CompiledMessage,\r\n    locale: Locale,\r\n    locales: Locales,\r\n    localeConfig: LocaleConfig,\r\n    cache?: I18nCache\r\n  ) {\r\n    this.compiledMessage = compiledMessage;\r\n    this.locale = locale;\r\n    this.locales = locales;\r\n    this.localeConfig = localeConfig;\r\n    this.cache = cache ?? creatI18nCache();\r\n  }\r\n\r\n  /**\r\n   * @param values 需要替换文本占位符的值\r\n   * @param formatOptions 需要格式化选项\r\n   */\r\n  translate(values: Record<string, unknown>, formatOptions: FormatOptions = {}): string {\r\n    const createTextFormatter = (\r\n      locale: Locale,\r\n      locales: Locales,\r\n      values: Record<string, unknown>,\r\n      formatOptions: FormatOptions,\r\n      localeConfig: LocaleConfig\r\n    ) => {\r\n      const textFormatter = (valueKey: string, type: string, format: any) => {\r\n        const formatters = generateFormatters(locale, locales, localeConfig, formatOptions, this.cache, valueKey);\r\n        const value = values[valueKey];\r\n        const formatter = formatters[type](value, format);\r\n\r\n        let message: any;\r\n        if (typeof formatter === 'function') {\r\n          message = formatter(textFormatter); // 递归调用\r\n        } else {\r\n          message = formatter; // 获得变量值 formatted: \"Fred\"\r\n        }\r\n\r\n        return Array.isArray(message) ? message.join('') : message;\r\n      };\r\n\r\n      return textFormatter;\r\n    };\r\n\r\n    const textFormatter = createTextFormatter(this.locale, this.locales, values, formatOptions, this.localeConfig);\r\n    // 通过递归方法formatCore进行格式化处理\r\n    return this.formatMessage(this.compiledMessage, textFormatter); // 返回要格式化的结果\r\n  }\r\n\r\n  formatMessage(compiledMessage: CompiledMessage, textFormatter: (...args: any[]) => any) {\r\n    if (!Array.isArray(compiledMessage)) {\r\n      return compiledMessage;\r\n    }\r\n\r\n    return compiledMessage\r\n      .map(token => {\r\n        if (typeof token === 'string') {\r\n          return token;\r\n        }\r\n\r\n        const [name, type, format] = token;\r\n\r\n        let replaceValueFormat = format;\r\n\r\n        // 如果 format 是对象，函数将递归地对它的每个值调用 formatMessage 后保存，否则直接保存\r\n        if (format && typeof format !== 'string') {\r\n          replaceValueFormat = Object.keys(replaceValueFormat).reduce((text, key) => {\r\n            text[key] = this.formatMessage(format[key], textFormatter);\r\n            return text;\r\n          }, {});\r\n        }\r\n        //调用 getContent 函数来获取给定 name、type 和 interpolateFormat 的值\r\n        const value = textFormatter(name, type, replaceValueFormat);\r\n        return value ?? `{${name}}`;\r\n      })\r\n      .join('');\r\n  }\r\n}\r\n\r\nexport default Translation;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport DateTimeFormatter from './fomatters/DateTimeFormatter';\r\nimport NumberFormatter from './fomatters/NumberFormatter';\r\nimport { DatePool, Locale, Locales, SelectPool } from '../types/types';\r\nimport PluralFormatter from './fomatters/PluralFormatter';\r\nimport SelectFormatter from './fomatters/SelectFormatter';\r\nimport { FormatOptions, I18nCache, IntlMessageFormat } from '../types/interfaces';\r\n\r\n/**\r\n * 默认格式化接口\r\n */\r\nconst generateFormatters = (\r\n  locale: Locale,\r\n  locales: Locales,\r\n  localeConfig: Record<string, any> = { plurals: undefined },\r\n  formatOptions: FormatOptions = {}, // 自定义格式对象\r\n  cache: I18nCache,\r\n  valueKey: string\r\n): IntlMessageFormat => {\r\n  const { plurals } = localeConfig;\r\n  /**\r\n   *  样式函数 ，根据格式获取格式样式， 如货币百分比， 返回相应的格式的对象，如果没有设定格式，则返回一个空对象\r\n   * @param formatOption\r\n   */\r\n  const getStyleOption = (formatOption: string | number) => {\r\n    if (typeof formatOption === 'string') {\r\n      return formatOptions[formatOption] || { option: formatOption };\r\n    } else {\r\n      return formatOption;\r\n    }\r\n  };\r\n\r\n  return {\r\n    // 复数规则\r\n    plural: (value: number, { offset = 0, ...rules }) => {\r\n      const pluralFormatter = new PluralFormatter(\r\n        locale,\r\n        locales,\r\n        value - offset,\r\n        rules[value] || rules[(plurals as any)?.(value - offset)] || rules.other\r\n      );\r\n      return pluralFormatter.replaceSymbol.bind(pluralFormatter);\r\n    },\r\n\r\n    selectordinal: (value: number, { offset = 0, ...rules }) => {\r\n      const message = rules[value] || rules[(plurals as any)?.(value - offset, true)] || rules.other;\r\n      const pluralFormatter = new PluralFormatter(locale, locales, value - offset, message);\r\n      return pluralFormatter.replaceSymbol.bind(pluralFormatter);\r\n    },\r\n\r\n    // 选择规则，如果规则对象中包含与该值相对应的属性，则返回该属性的值；否则，返回 \"other\" 属性的值。\r\n    select: (value: SelectPool, formatRules: any) => {\r\n      const selectFormatter = new SelectFormatter(locale);\r\n      return selectFormatter.getRule(value, formatRules);\r\n    },\r\n\r\n    // 用于将数字格式化为字符串，接受一个数字和一个格式化规则。它会根据规则返回格式化后的字符串。\r\n    numberFormat: (value: number, formatOption) => {\r\n      return new NumberFormatter(locales, getStyleOption(formatOption), cache, valueKey).numberFormat(value);\r\n    },\r\n\r\n    /**\r\n     * 用于将日期格式化为字符串，接受一个日期对象和一个格式化规则。它会根据规则返回格式化后的字符串。\r\n     * eg: { year: 'numeric', month: 'long', day: 'numeric' } 是一个用于指定DateTimeFormatter如何将日期对象转换为字符串的参数。\r\n     *      \\year: 'numeric' 表示年份的表示方式是数字形式（比如2023）。\r\n     *       month: 'long' 表示月份的表示方式是全名（比如January）。\r\n     *       day: 'numeric' 表示日期的表示方式是数字形式（比如1号）。\r\n     * @param value\r\n     * @param formatOption { year: 'numeric', month: 'long', day: 'numeric' }\r\n     */\r\n    dateTimeFormat: (value: DatePool, formatOption: any) => {\r\n      return new DateTimeFormatter(locales, getStyleOption(formatOption), cache, valueKey).dateTimeFormat(\r\n        value,\r\n        formatOption\r\n      );\r\n    },\r\n\r\n    // 用于处理未定义的值，接受一个值并直接返回它。\r\n    undefined: value => value,\r\n  };\r\n};\r\n\r\nexport default generateFormatters;\r\n","/*\r\n * Copyright (c) 2024 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { cloneElement, createElement, Fragment, InulaElement } from '@cloudsop/horizon';\r\nimport { voidElementTags } from '../constants';\r\n\r\n// 用于匹配标签的正则表达式\r\nconst tagReg = /<(\\d+)>(.*?)<\\/\\1>|<(\\d+)\\/>/;\r\n\r\n// 用于匹配换行符的正则表达式\r\nconst nlReg = /(?:\\r\\n|\\r|\\n)/g;\r\n\r\nexport function formatElements(\r\n  value: string,\r\n  elements: { [key: string]: InulaElement<any> } = {}\r\n): string | Array<any> {\r\n  const elementKeyID = getElementIndex(0, '$Inula');\r\n\r\n  //  value：This is a rich text with a custom component: <1/>\r\n  const arrays = value.replace(nlReg, '').split(tagReg);\r\n\r\n  // 若无InulaNode元素，则返回\r\n  if (arrays.length === 1) return value;\r\n\r\n  const result: any = [];\r\n\r\n  const before = arrays.shift();\r\n  if (before) {\r\n    result.push(before);\r\n  }\r\n\r\n  for (const [index, children, after] of getElements(arrays)) {\r\n    let element = elements[index];\r\n\r\n    if (!element || (voidElementTags[element.type as string] && children)) {\r\n      const errorMessage = !element\r\n        ? `Index not declared as ${index} in original translation`\r\n        : `${element.type} , No child element exists. Please check.`;\r\n      console.error(errorMessage);\r\n\r\n      // 对于异常元素，通过创建<></>来代替，并继续解析现有的子元素和之后的元素，并保证在构建数组时，不会因为缺少元素而导致索引错位。\r\n      element = createElement(Fragment, {});\r\n    }\r\n\r\n    // 如果存在子元素，则进行递归处理\r\n    const formattedChildren = children ? formatElements(children, elements) : element.props.children;\r\n\r\n    // 更新element 的属性和子元素\r\n    const clonedElement = cloneElement(element, { key: elementKeyID() }, formattedChildren);\r\n    result.push(clonedElement);\r\n\r\n    if (after) {\r\n      result.push(after);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n *  从arrays数组中解析出标签元素和其子元素\r\n * @param arrays\r\n */\r\nfunction getElements(arrays: string[]) {\r\n  // 如果 arrays 数组为空，则返回空数组\r\n  if (!arrays.length) return [];\r\n\r\n  /**\r\n   * pairedIndex: 第一个元素表示配对标签的内容，即 <1>...</1> 形式的标签。\r\n   * children: 第二个元素表示配对标签内的子元素内容。\r\n   * unpairedIndex: 第三个元素表示自闭合标签的内容，即 <1/> 形式的标签。\r\n   * textAfter: 第四个元素表示标签之后的文本内容，即标签后紧跟着的文本。\r\n   * eg: [undefined,undefined,1,\"\"]\r\n   */\r\n  const [pairedIndex, children, unpairedIndex, textAfter] = arrays.splice(0, 4);\r\n\r\n  // 解析当前标签元素和它的子元素，返回一个包含标签索引、子元素和后续文本的数组\r\n  const currentElement: [number, string, string] = [\r\n    parseInt(pairedIndex || unpairedIndex), // 解析标签索引，如果是自闭合标签，则使用 unpaired\r\n    children || '',\r\n    textAfter || '',\r\n  ];\r\n\r\n  // 递归调用 getElements 函数，处理剩余的 arrays 数组\r\n  const remainingElements = getElements(arrays);\r\n\r\n  // 将当前元素和递归处理后的元素数组合并并返回\r\n  return [currentElement, ...remainingElements];\r\n}\r\n\r\n// 对传入富文本元素的位置标志索引\r\nfunction getElementIndex(count = 0, prefix = '') {\r\n  return function () {\r\n    return `${prefix}_${count++}`;\r\n  };\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport EventDispatcher from '../utils/eventListener';\r\nimport DateTimeFormatter from '../format/fomatters/DateTimeFormatter';\r\nimport NumberFormatter from '../format/fomatters/NumberFormatter';\r\nimport { getFormatMessage } from '../format/getFormatMessage';\r\nimport { I18nCache, I18nProps, MessageDescriptor, MessageOptions } from '../types/interfaces';\r\nimport {\r\n  Locale,\r\n  Locales,\r\n  Messages,\r\n  AllLocaleConfig,\r\n  AllMessages,\r\n  LocaleConfig,\r\n  Error,\r\n  Events,\r\n  InulaNode,\r\n} from '../types/types';\r\nimport creatI18nCache from '../format/cache/cache';\r\nimport { isValidElement } from '@cloudsop/horizon';\r\n\r\nexport class I18n extends EventDispatcher<Events> {\r\n  public locale: Locale;\r\n  public locales: Locales;\r\n  public defaultLocale?: Locale;\r\n  public timeZone?: string;\r\n  public allMessages: AllMessages;\r\n  private readonly _localeConfig: AllLocaleConfig;\r\n  public readonly onError?: Error;\r\n  public readonly cache?: I18nCache;\r\n  public $t: (\r\n    id: MessageDescriptor | string,\r\n    values?: Record<string, unknown> | undefined,\r\n    { messages, context, formatOptions }?: MessageOptions\r\n  ) => string | any[];\r\n\r\n  constructor(props: I18nProps) {\r\n    super();\r\n    this.defaultLocale = 'en';\r\n    this.locale = this.defaultLocale;\r\n    this.locales = this.locale || '';\r\n    this.allMessages = {};\r\n    this._localeConfig = {};\r\n    this.onError = props.onError;\r\n    this.timeZone = '';\r\n\r\n    this.loadMessage(props.messages);\r\n\r\n    if (props.localeConfig) {\r\n      this.loadLocaleConfig(props.localeConfig);\r\n    }\r\n    if (props.messages) {\r\n      this.changeMessage(props.messages);\r\n    }\r\n\r\n    if (props.locale || props.locales) {\r\n      this.changeLanguage(props.locale!, props.locales);\r\n    }\r\n    this.$t = this.formatMessage.bind(this);\r\n    this.formatMessage = this.formatMessage.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n    this.formatNumber = this.formatNumber.bind(this);\r\n\r\n    this.cache = props.cache ?? creatI18nCache();\r\n  }\r\n\r\n  get messages(): string | Messages | AllMessages {\r\n    if (this.locale in this.allMessages) {\r\n      return this.allMessages[this.locale] ?? {};\r\n    } else {\r\n      return this.allMessages ?? {};\r\n    }\r\n  }\r\n\r\n  get localeConfig(): LocaleConfig {\r\n    return this._localeConfig[this.locale] ?? {};\r\n  }\r\n\r\n  setLocaleConfig(locale: Locale, localeData: LocaleConfig) {\r\n    if (this._localeConfig[locale]) {\r\n      Object.assign(this._localeConfig, localeData);\r\n    } else {\r\n      this._localeConfig[locale] = localeData;\r\n    }\r\n  }\r\n\r\n  // 将热语言环境的本地化数据加载\r\n  loadLocaleConfig(localeOrAllData: Locale | AllLocaleConfig, localeConfig?: LocaleConfig) {\r\n    if (localeConfig) {\r\n      this.setLocaleConfig(localeOrAllData as Locale, localeConfig);\r\n    } else {\r\n      Object.keys(localeOrAllData).forEach(locale => {\r\n        this.setLocaleConfig(locale, localeOrAllData[locale]);\r\n      });\r\n    }\r\n    this.emit('change');\r\n  }\r\n\r\n  setMessage(locale: Locale, messages: Messages) {\r\n    if (this.allMessages[locale]) {\r\n      this.allMessages[locale] = Object.assign({}, this.allMessages[locale], messages);\r\n    } else {\r\n      this.allMessages[locale] = messages;\r\n    }\r\n  }\r\n\r\n  changeMessage(messages: AllMessages) {\r\n    this.allMessages = messages;\r\n    this.emit('change');\r\n  }\r\n\r\n  // 加载messages\r\n  loadMessage(localeOrMessages: Locale | AllMessages | undefined, messages?: Messages) {\r\n    if (messages) {\r\n      //当 message 为空的时候，加载单一的message信息\r\n      this.setMessage(localeOrMessages as string, messages);\r\n    } else {\r\n      // 加载多对locale-message信息\r\n      localeOrMessages &&\r\n        Object.keys(localeOrMessages!).forEach(locale => this.setMessage(locale, localeOrMessages![locale]));\r\n    }\r\n    this.emit('change');\r\n  }\r\n\r\n  // 改变当前的语言环境\r\n  changeLanguage(locale: Locale, locales?: Locales) {\r\n    this.locale = locale;\r\n    if (locales) {\r\n      this.locales = locales;\r\n    }\r\n    this.emit('change', { locale, id: '' });\r\n  }\r\n\r\n  formatMessage(\r\n    id: MessageDescriptor | string,\r\n    values: Record<string, unknown> | undefined = {},\r\n    { messages, context, formatOptions }: MessageOptions = {}\r\n  ) {\r\n    // 在多次渲染时，保证存储component不丢失\r\n    const components: { [key: string]: InulaNode } = {};\r\n    const tempValues: Record<string, unknown> = { ...values };\r\n    if (tempValues) {\r\n      Object.keys(tempValues).forEach((key, index) => {\r\n        const value = tempValues[key];\r\n        if (!isValidElement(value)) return;\r\n        // 将inula元素暂存\r\n        components[index] = value;\r\n        tempValues[key] = `<${index}/>`;\r\n      });\r\n    }\r\n    return getFormatMessage(this, id, tempValues, { messages, context, formatOptions }, components!);\r\n  }\r\n\r\n  formatDate(value: string | Date, formatOptions?: Intl.DateTimeFormatOptions): string {\r\n    const dateTimeFormatter = new DateTimeFormatter(this.locale || this.locales, formatOptions, this.cache);\r\n    return dateTimeFormatter.dateTimeFormat(value);\r\n  }\r\n\r\n  formatNumber(value: number, formatOptions?: Intl.NumberFormatOptions): string {\r\n    const numberFormatter = new NumberFormatter(this.locale || this.locales, formatOptions, this.cache);\r\n    return numberFormatter.numberFormat(value);\r\n  }\r\n}\r\n\r\nexport default I18n;\r\n\r\nexport function createI18nInstance(i18nProps: I18nProps = {}): I18n {\r\n  return new I18n(i18nProps);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport utils from '../utils/utils';\r\nimport Translation from './Translation';\r\nimport I18n from '../core/I18n';\r\nimport { MessageDescriptor, MessageOptions } from '../types/interfaces';\r\nimport { CompiledMessage } from '../types/types';\r\nimport creatI18nCache from './cache/cache';\r\nimport { formatElements } from '../utils/formatElements';\r\n\r\nexport function getFormatMessage(\r\n  i18n: I18n,\r\n  id: MessageDescriptor | string,\r\n  values: Record<string, unknown> | undefined = {},\r\n  options: MessageOptions = {},\r\n  components: any\r\n) {\r\n  let { messages, context } = options;\r\n  const { formatOptions } = options;\r\n  const cache = i18n.cache ?? creatI18nCache();\r\n  if (typeof id !== 'string') {\r\n    values = values || id.defaultValues;\r\n    messages = id.messages || id.defaultMessage;\r\n    context = id.context;\r\n    id = id.id;\r\n  }\r\n\r\n  // 对messages进行判空处理\r\n  const isMissingMessage = !context && !i18n.messages[id];\r\n  const isMissingContextMessage = context && !i18n.messages[context][id];\r\n  const messageUnavailable = isMissingContextMessage || isMissingMessage;\r\n\r\n  // 对错误消息进行处理\r\n  const messageError = i18n.onError;\r\n  if (messageError && messageUnavailable) {\r\n    if (typeof messageError === 'function') {\r\n      return messageError(i18n.locale, id, context);\r\n    } else {\r\n      return messageError;\r\n    }\r\n  }\r\n\r\n  let compliedMessage: CompiledMessage;\r\n  if (context) {\r\n    compliedMessage = i18n.messages[context][id] || messages || id;\r\n  } else {\r\n    compliedMessage = i18n.messages[id] || messages || id;\r\n  }\r\n\r\n  // 对解析的message进行parse解析，并输出解析后的Token\r\n  compliedMessage = typeof compliedMessage === 'string' ? utils.compile(compliedMessage) : compliedMessage;\r\n\r\n  const translation = new Translation(compliedMessage, i18n.locale, i18n.locales, i18n.localeConfig, cache);\r\n  const formatResult = translation.translate(values, formatOptions);\r\n\r\n  // 如果存在inula元素，则返回包含格式化的Inula元素的数组\r\n  return formatElements(formatResult, components);\r\n}\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { isMemo, ForwardRef } from '@cloudsop/horizon';\r\nimport { INULA_FORWARD_REF_STATICS, INULA_MEMO_STATICS, INULA_STATICS, NATIVE_STATICS } from '../constants';\r\n\r\nconst staticsMap = new Map();\r\nstaticsMap.set(ForwardRef, INULA_FORWARD_REF_STATICS);\r\n\r\n// 确定给定的组件是否为Memo组件，并返回相应的静态属性\r\nfunction getStatics(component) {\r\n  if (isMemo(component)) {\r\n    return INULA_MEMO_STATICS;\r\n  }\r\n\r\n  if (staticsMap.has(component['vtype'])) {\r\n    return staticsMap.get(component['vtype']) || INULA_STATICS;\r\n  }\r\n}\r\n\r\n/**\r\n * 判断给定的对象属性描述是否有效\r\n * @param sourceComponent\r\n * @param key\r\n */\r\nfunction isDescriptorValid<U>(sourceComponent: U, key: string | symbol) {\r\n  const descriptor = Object.getOwnPropertyDescriptor(sourceComponent, key);\r\n  return descriptor && (!descriptor.get || descriptor.get.prototype);\r\n}\r\n\r\n// 将一个对象的非react静态属性复制到另一个对象上，并返回马目标对象\r\nfunction copyStaticProps<T, U>(targetComponent: T, sourceComponent: U): T {\r\n  if (typeof sourceComponent === 'string') {\r\n    return targetComponent;\r\n  }\r\n  // 递归拷贝静态属性\r\n  const inheritedComponent = Object.getPrototypeOf(sourceComponent);\r\n  if (inheritedComponent && inheritedComponent !== Object.prototype) {\r\n    copyStaticProps(targetComponent, inheritedComponent);\r\n  }\r\n\r\n  // 获取源组件的属性列表\r\n  const keys: (string | symbol)[] = [\r\n    //获取指定对象自身的所有属性的名称（包括不可枚举属性）\r\n    ...Object.getOwnPropertyNames(sourceComponent),\r\n\r\n    //获取指定对象自身的所有 Symbol 类型的属性的名称（包括不可枚举属性）\r\n    ...Object.getOwnPropertySymbols(sourceComponent),\r\n  ];\r\n\r\n  // 获取目标组件和源组件的静态属性\r\n  const targetStatics = getStatics(targetComponent);\r\n  const sourceStatics = getStatics(sourceComponent);\r\n\r\n  keys.forEach(key => {\r\n    if (\r\n      !NATIVE_STATICS[key] &&\r\n      !(targetStatics && targetStatics[key]) &&\r\n      !(sourceStatics && sourceStatics[key]) &&\r\n      isDescriptorValid(sourceComponent, key)\r\n    ) {\r\n      try {\r\n        // 在一个已有的targetComponent对象上增加sourceComponent的属性\r\n        Object.defineProperty(targetComponent, key, Object.getOwnPropertyDescriptor(sourceComponent, key)!);\r\n      } catch (e) {\r\n        console.log('Error occurred while copying static props:', e);\r\n      }\r\n    }\r\n  });\r\n\r\n  return targetComponent;\r\n}\r\n\r\nexport default copyStaticProps;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { createContext, forwardRef } from '@cloudsop/horizon';\r\nimport { isVariantI18n } from '../../utils/utils';\r\nimport copyStaticProps from '../../utils/copyStaticProps';\r\nimport { InjectOptions } from '../../types/interfaces';\r\nimport I18n from '../I18n';\r\nimport VueI18n from '../../vueI18n-adapter/VueI18n';\r\n\r\n// 创建国际化组件对象上下文\r\nexport const I18nContext: any = createContext<I18n | VueI18n>(null as any);\r\nconst { Consumer, Provider } = I18nContext;\r\nexport const InjectProvider = Provider;\r\n\r\n/**\r\n * 用于实现国际化的高阶组件，将国际化功能注入到组件中，使组件能够使用国际化的本文格式化功能\r\n * @param Component\r\n * @param options\r\n */\r\nfunction injectI18n(Component, options?: InjectOptions): any {\r\n  const {\r\n    isUsingForwardRef = false, // 默认不使用\r\n    ensureContext = false,\r\n  } = options || {};\r\n\r\n  // 定义一个名为 WrappedI18n 的函数组件，接收传入组件的 props 和 forwardedRef，返回传入组件并注入 i18n\r\n  const WrappedI18n = props => (\r\n    <Consumer>\r\n      {context => {\r\n        if (ensureContext) {\r\n          isVariantI18n(context.i18nInstance);\r\n        }\r\n\r\n        const i18nProps = { intl: context.i18nInstance };\r\n        return <Component {...props} {...i18nProps} ref={isUsingForwardRef ? props.forwardedRef : null} />;\r\n      }}\r\n    </Consumer>\r\n  );\r\n\r\n  WrappedI18n.WrappedComponent = Component;\r\n\r\n  // 通过copyStatics方法，复制组件中的静态属性\r\n  return copyStaticProps(\r\n    isUsingForwardRef ? forwardRef((props, ref) => <WrappedI18n {...props} forwardedRef={ref} />) : WrappedI18n,\r\n    Component\r\n  );\r\n}\r\n\r\nexport default injectI18n;\r\n","/*\r\n * Copyright (c) 2023 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { useCallback, useEffect, useMemo, useState } from '@cloudsop/horizon';\r\nimport { InjectProvider } from './InjectI18n';\r\nimport { createI18nInstance, I18n } from '../I18n';\r\nimport { I18nProviderProps } from '../../types/types';\r\nimport VueI18n from '../../vueI18n-adapter/VueI18n';\r\n\r\n/**\r\n * 用于为应用程序提供国际化的格式化功能，管理程序中的语言文本信息和本地化资源信息\r\n * @param props\r\n * @constructor\r\n */\r\nconst I18nProvider = (props: I18nProviderProps) => {\r\n  // 使用 useMemo 创建或获取 i18n 实例\r\n  const { locale, messages, i18n, children } = props;\r\n  const i18nInstance = useMemo(() => {\r\n    return i18n || createI18nInstance({ locale, messages });\r\n  }, [i18n, locale, messages]);\r\n\r\n  // 监听message和locale的变化\r\n  const { currentLocale, currentMessages } = useI18nSync(i18nInstance);\r\n\r\n  // 创建一个 memoized 的 context 值\r\n  const contextValue = useMemo(\r\n    () => ({\r\n      ...i18nInstance,\r\n      i18nInstance,\r\n      locale: currentLocale,\r\n      messages: currentMessages,\r\n      changeLanguage: i18nInstance.changeLanguage,\r\n      changeMessage: i18nInstance.changeMessage,\r\n    }),\r\n    [i18nInstance, currentLocale, currentMessages]\r\n  );\r\n  // 提供一个 Provider 组件\r\n  return <InjectProvider value={contextValue}>{children}</InjectProvider>;\r\n};\r\n\r\nexport const useI18nSync = (i18nInstance: VueI18n | I18n) => {\r\n  const [currentLocale, setCurrentLocale] = useState(i18nInstance.locale);\r\n  const [currentMessages, setCurrentMessages] = useState(i18nInstance.messages);\r\n\r\n  const handleChange = useCallback(() => {\r\n    if (currentLocale !== i18nInstance.locale) {\r\n      setCurrentLocale(i18nInstance.locale);\r\n    }\r\n    if (currentMessages !== i18nInstance.messages) {\r\n      setCurrentMessages(i18nInstance.messages);\r\n    }\r\n  }, [i18nInstance, currentLocale, currentMessages]);\r\n\r\n  useEffect(() => {\r\n    // 清理函数\r\n    return i18nInstance.on('change', handleChange);\r\n  }, [i18nInstance, handleChange]);\r\n\r\n  return { currentLocale, currentMessages };\r\n};\r\n\r\nexport default I18nProvider;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { AllMessages, Messages } from '../../intl/types/types';\r\nimport { isNull, isObject } from './utils';\r\nimport {\r\n  AFTER_PATH,\r\n  APPEND,\r\n  BEFORE_PATH,\r\n  ERROR,\r\n  IN_DOUBLE_QUOTE,\r\n  IN_SINGLE_QUOTE,\r\n  IN_SUB_PATH,\r\n  INC_SUB_PATH_DEPTH,\r\n  pathStateMachine,\r\n  PUSH,\r\n  PUSH_SUB_PATH,\r\n} from '../constants';\r\nimport { PathStateMachine, PathValue } from '../type/types';\r\n\r\nexport default class I18nPath {\r\n  // 使用严格类型的缓存对象\r\n  private _cache: Record<string, string[]> = Object.create(null);\r\n\r\n  /**\r\n   * External parse that check for a cache hit first\r\n   */\r\n  parsePath(path: string): string[] {\r\n    let hit: string[] = this._cache[path];\r\n    if (!hit) {\r\n      hit = parse(path);\r\n      if (hit) {\r\n        this._cache[path] = hit;\r\n      }\r\n    }\r\n    return hit || [];\r\n  }\r\n\r\n  getPathValue(obj: string | Messages | AllMessages, id: string): PathValue {\r\n    // 如果传入的不是对象，则返回null\r\n    if (!isObject(obj)) {\r\n      return null;\r\n    }\r\n    // 解析路径\r\n    const paths: string[] = this.parsePath(id);\r\n\r\n    if (paths.length === 0) {\r\n      return null;\r\n    } else {\r\n      let last: any = obj;\r\n      for (const path of paths) {\r\n        const value: any = last[path];\r\n        // 如果路径对应的值为undefined或null，则返回null\r\n        if (value === undefined || value === null) {\r\n          return null;\r\n        }\r\n        last = value;\r\n      }\r\n      return last;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-expect-error\r\nfunction parse(path: string): string[] {\r\n  const keys: string[] = [];\r\n  let index: number = -1;\r\n  let mode: number = BEFORE_PATH;\r\n  let subPathDepth: number = 0;\r\n  let c: string | undefined;\r\n  let key: any;\r\n  let newChar: string;\r\n  let type: string;\r\n  let transition: any;\r\n  let action: () => void | boolean;\r\n  let typeMap: PathStateMachine;\r\n  const actions: Array<() => void | boolean> = [];\r\n\r\n  actions[PUSH] = function () {\r\n    if (key !== undefined) {\r\n      keys.push(key);\r\n      key = undefined;\r\n    }\r\n  };\r\n\r\n  actions[APPEND] = function () {\r\n    if (key === undefined) {\r\n      key = newChar;\r\n    } else {\r\n      key += newChar;\r\n    }\r\n  };\r\n\r\n  actions[INC_SUB_PATH_DEPTH] = function () {\r\n    actions[APPEND]();\r\n    subPathDepth++;\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-expect-error\r\n  actions[PUSH_SUB_PATH] = function () {\r\n    if (subPathDepth > 0) {\r\n      subPathDepth--;\r\n      mode = IN_SUB_PATH;\r\n      actions[APPEND]();\r\n    } else {\r\n      subPathDepth = 0;\r\n      if (key === undefined) {\r\n        return false;\r\n      }\r\n      key = formatSubPath(key);\r\n      if (key === false) {\r\n        return false;\r\n      } else {\r\n        actions[PUSH]();\r\n      }\r\n    }\r\n  };\r\n\r\n  function maybeUnescapeQuote(): boolean | void {\r\n    const nextChar: string = path[index + 1];\r\n    if ((mode === IN_SINGLE_QUOTE && nextChar === \"'\") || (mode === IN_DOUBLE_QUOTE && nextChar === '\"')) {\r\n      index++;\r\n      newChar = '\\\\' + nextChar;\r\n      actions[APPEND]();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  while (mode !== null) {\r\n    index++;\r\n    c = path[index];\r\n\r\n    if (c === '\\\\' && maybeUnescapeQuote()) {\r\n      continue;\r\n    }\r\n\r\n    type = getPathCharType(c);\r\n\r\n    //  根据不同的字符串，进行匹配对应的状态模式\r\n    typeMap = pathStateMachine[mode];\r\n    transition = typeMap[type] || typeMap['else'] || ERROR;\r\n\r\n    if (transition === ERROR) {\r\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n      // @ts-expect-error\r\n      return; // parse error\r\n    }\r\n\r\n    mode = transition[0];\r\n    action = actions[transition[1]];\r\n    if (action) {\r\n      newChar = transition[2];\r\n      newChar = newChar === undefined ? c : newChar;\r\n      if (action() === false) {\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-expect-error\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (mode === AFTER_PATH) {\r\n      return keys;\r\n    }\r\n  }\r\n}\r\n\r\n// 格式化子路径\r\nfunction formatSubPath(path: string): boolean | string {\r\n  const trimmed: string = path.trim();\r\n  if (path.charAt(0) === '0' && isNaN(Number(path))) {\r\n    return false;\r\n  }\r\n\r\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\r\n}\r\n\r\nconst literalValueRE: RegExp = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\n\r\nfunction isLiteral(exp: string): boolean {\r\n  return literalValueRE.test(exp);\r\n}\r\n\r\n/**\r\n * 剥离引号\r\n */\r\nfunction stripQuotes(str: string): string | boolean {\r\n  const a: number = str.charCodeAt(0);\r\n  const b: number = str.charCodeAt(str.length - 1);\r\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n\r\nfunction getPathCharType(ch: string): string {\r\n  if (ch === undefined || ch === null) {\r\n    return 'eof';\r\n  }\r\n\r\n  const code: number = ch.charCodeAt(0);\r\n\r\n  switch (code) {\r\n    case 0x5b: // [\r\n    case 0x5d: // ]\r\n    case 0x2e: // .\r\n    case 0x22: // \"\r\n    case 0x27: // '\r\n      return ch;\r\n\r\n    case 0x5f: // _\r\n    case 0x24: // $\r\n    case 0x2d: // -\r\n      return 'ident';\r\n\r\n    case 0x09: // Tab\r\n    case 0x0a: // Newline\r\n    case 0x0d: // Return\r\n    case 0xa0: // No-break space\r\n    case 0xfeff: // Byte Order Mark\r\n    case 0x2028: // Line Separator\r\n    case 0x2029: // Paragraph Separator\r\n      return 'ws';\r\n  }\r\n\r\n  return 'ident';\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\nimport { I18nOptions } from './type/types';\r\nimport { dateTimeFormatKeys, numberFormatKeys } from './constants';\r\nimport { dealMsgArgs, dealNumberOrTimesArgs } from './utils/utils';\r\nimport { I18n } from '../intl';\r\nimport { AllMessages, DatePool, Locale, Messages } from '../intl/types/types';\r\nimport I18nPath from './utils/parseMsgParamUtils';\r\n\r\nclass VueI18n extends I18n {\r\n  public locale: Locale;\r\n  public localMessages: Map<string, AllMessages>;\r\n  public dateTimeFormats?: NonNullable<unknown>;\r\n  public datetimeFormats?: NonNullable<unknown>;\r\n  public numberFormats?: NonNullable<unknown>;\r\n  public vueMessages: string | AllMessages;\r\n  public path?: I18nPath;\r\n  public listeners?: any;\r\n\r\n  constructor(options: I18nOptions) {\r\n    super(options);\r\n    this.locale = options.locale || 'en';\r\n    this.localMessages = new Map();\r\n    this.vueMessages = options.messages || {};\r\n    this.numberFormats = options.numberFormats || {};\r\n    this.dateTimeFormats = options.dateTimeFormats || {};\r\n    this.datetimeFormats = options.datetimeFormats || {};\r\n    this.path = new I18nPath();\r\n    this.listeners = new Set();\r\n    this.loadMessage(this.vueMessages);\r\n  }\r\n\r\n  // 重写 messages getter\r\n  get messages(): string | Messages | AllMessages {\r\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n    // @ts-expect-error\r\n    if (this.locale in this.vueMessages) {\r\n      return this.vueMessages[this.locale] ?? {};\r\n    } else {\r\n      return this.vueMessages ?? {};\r\n    }\r\n  }\r\n\r\n  // 重写 loadMessage 方法以支持加载局部消息\r\n  loadMessage = (localeOrMessages: Locale | AllMessages | undefined, messages?: Messages) => {\r\n    super.loadMessage(localeOrMessages, messages);\r\n    this.emit('change');\r\n  };\r\n\r\n  changeLanguage = (locale: Locale) => {\r\n    this.locale = locale;\r\n    super.changeLanguage(locale);\r\n  };\r\n\r\n  changeMessage = (messages: AllMessages) => {\r\n    super.changeMessage(messages);\r\n  };\r\n\r\n  $t = (msgKey: string, values?: any) => {\r\n    const { messages } = this;\r\n    const pathRet = this.path!.getPathValue(messages, msgKey);\r\n    const msgId = pathRet !== null ? dealMsgArgs(pathRet, messages, msgKey) : msgKey;\r\n    return super.formatMessage(msgId, values);\r\n  };\r\n\r\n  $n = (value: number, ...args: any) => {\r\n    const { dealLocale, key, options } = dealNumberOrTimesArgs(args, numberFormatKeys);\r\n    // 如果自己传入新的语言，则更新\r\n    super.changeLanguage(dealLocale ? dealLocale : 'en');\r\n\r\n    if (key) {\r\n      const formatOptions = this.numberFormats![dealLocale][key]!;\r\n      return super.formatNumber(value, formatOptions);\r\n    }\r\n\r\n    return super.formatNumber(value, options);\r\n  };\r\n\r\n  $d = (value: DatePool, ...args: any) => {\r\n    const { dealLocale, key, options } = dealNumberOrTimesArgs(args, dateTimeFormatKeys);\r\n    super.changeLanguage(dealLocale ? dealLocale : 'en');\r\n\r\n    if (key) {\r\n      const formatOptions = this.dateTimeFormats![dealLocale][key];\r\n      return super.formatDate(value, formatOptions);\r\n    }\r\n    return super.formatDate(value, options);\r\n  };\r\n}\r\n\r\nexport function createVueI18nInstance(i18nProps: I18nOptions = {}): VueI18n {\r\n  return new VueI18n(i18nProps);\r\n}\r\nexport default VueI18n;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { UseI18nOptions } from '../type/types';\r\nimport VueI18n from '../VueI18n';\r\nimport { useContext, useEffect } from '@cloudsop/horizon';\r\nimport { I18nContext } from '../../intl/core/components/InjectI18n';\r\n\r\nexport const useI18n = (options?: UseI18nOptions): any => {\r\n  const contextI18n = useContext<VueI18n | null>(I18nContext);\r\n\r\n  if (contextI18n && !options) {\r\n    return i18nInstance(contextI18n);\r\n  }\r\n\r\n  if (!options) {\r\n    throw new Error('I18nProvider is not used and options are not provided');\r\n  }\r\n\r\n  if (options.messages) {\r\n    Object.entries(options.messages).forEach(([locale, messages]) => {\r\n      contextI18n?.i18nInstance?.loadMessage({\r\n        [locale]: {\r\n          ...contextI18n.messages[locale],\r\n          ...messages,\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (options?.locale) {\r\n      contextI18n?.changeLanguage(options.locale);\r\n    }\r\n    if (options?.messages) {\r\n      contextI18n?.loadMessage(options.messages);\r\n    }\r\n  }, [options?.locale, options?.messages]);\r\n\r\n  return i18nInstance(contextI18n);\r\n};\r\n\r\nfunction i18nInstance(i18nContext: any): any {\r\n  const i18nInstance = i18nContext.i18nInstance ? i18nContext.i18nInstance : i18nContext;\r\n  return {\r\n    ...i18nInstance,\r\n    on: i18nInstance.on.bind(i18nInstance),\r\n    n: i18nInstance.$n.bind(i18nInstance),\r\n    d: i18nInstance.$d.bind(i18nInstance),\r\n    t: i18nInstance.$t.bind(i18nInstance),\r\n  };\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n// type for $api\r\nimport VueI18n from './VueI18n';\r\nimport { createI18n } from './hooks/createI18n';\r\nimport { useI18n } from './hooks/useI18n';\r\nimport { useLocalMessage } from './hooks/useLocalMessage';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    $i18n: VueI18n;\r\n  }\r\n}\r\n\r\nexport default {\r\n  VueI18n,\r\n};\r\n\r\nexport { createI18n, useI18n, useLocalMessage };\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport I18nProvider from '../../intl/core/components/I18nProvider';\r\nimport { I18nOptions, App } from '../type/types';\r\nimport { createVueI18nInstance } from '../VueI18n';\r\nimport { createElement } from '@cloudsop/horizon';\r\n\r\nexport function createI18n(options: I18nOptions): any {\r\n  const { locale, messages } = options;\r\n  const i18nInstance = createVueI18nInstance({\r\n    locale: locale || 'en',\r\n    messages: messages,\r\n  });\r\n  return {\r\n    global: {\r\n      ...i18nInstance,\r\n\r\n      // 这里需要手动把on属性带上，因为on来自i18nInstance的原型链上，...展开会丢失\r\n      on: i18nInstance.on.bind(i18nInstance),\r\n      t: i18nInstance.$t.bind(i18nInstance),\r\n      messages: i18nInstance.allMessages,\r\n    },\r\n\r\n    // 用于注册到全局国际化插件\r\n    install: (app: App) => {\r\n      // 将 vueIi18n 实例提供给I18nProvider\r\n      app.rootComponent = createElement(I18nProvider, { i18n: i18nInstance }, app.rootComponent);\r\n    },\r\n  };\r\n}\r\n","import { useMemo, useRef } from '@cloudsop/horizon';\r\nimport { AllMessages } from '../../intl/types/types';\r\nimport { useI18n } from './useI18n';\r\nimport { dealMsgArgs } from '../utils/utils';\r\n\r\nexport const useLocalMessage = (messages: AllMessages): any => {\r\n  const instance = useI18n();\r\n  const { t, formatMessage, path, on, locale } = instance;\r\n  const currentLocale = useRef(locale);\r\n  useMemo(() => {\r\n    on('change', ({ locale }) => {\r\n      currentLocale.current = locale;\r\n    });\r\n  }, []);\r\n  const $t = (msgKey: string, values?: any) => {\r\n    const currentMessages = messages[currentLocale.current] || {};\r\n    const pathRet = path.getPathValue(currentMessages, msgKey);\r\n    if (pathRet || currentMessages[msgKey]) {\r\n      const msgId = pathRet !== null ? dealMsgArgs(pathRet, currentMessages, msgKey) : currentMessages[msgKey];\r\n      return formatMessage(msgId, values);\r\n    }\r\n    return t(msgKey, values);\r\n  };\r\n  return { $t, t: $t };\r\n};\r\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","String","Number","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","value","_getPrototypeOf","getPrototypeOf","_get","Reflect","get","property","receiver","base","object","hasOwnProperty","superPropBase","desc","getOwnPropertyDescriptor","arguments","apply","this","_defineProperty","obj","pathStateMachine","ws","ident","eof","number","else","numberFormatKeys","dateTimeFormatKeys","_extends","assign","source","dealNumberOrTimesArgs","args","numericOrTimeConstansArr","locale","options","keys","reduce","acc","item","indexOf","dealLocale","substring","toString","isPlainObject","isString","val","isArray","Array","isFunction","dealMsgArgs","pathRet","message","ret","process","env","NODE_ENV","console","warn","type","checkObject","input","checkRegExp","slice","toLowerCase","getType","transferReg","str","replace","getRulesByObject","getOwnPropertyNames","result","_loop","thing","rules","concat","j","push","include","match","forEach","rule","getRuleOptions","getRulesByArray","array","Error","defaultType","lineBreaks","error","fallback","pop","next","shouldThrow","sort","str1","str2","ruleUtils","checkSticky","_RegExp","RegExp","sticky","getRegGroups","_regExp$exec","exec","getRegCapture","getRegUnion","regexps","map","join","getReg","ignoreCase","global","multiline","getRules","spec","Lexer","unionReg","startState","buffer","stack","index","line","col","queuedText","state","groups","regexp","fast","queuedGroup","reset","data","setState","info","groupCount","undefined","token","getToken","fastGroup","charCodeAt","charAt","lastIndex","getMatch","group","getGroup","text","offset","lineNum","last","matchNL","tokenToString","size","popState","pushState","_this","done","mappingRule","body","doubleapos","quoted","src","argument","trim","octothorpe","end","content","arg","select","split","case","INULA_FORWARD_REF_STATICS","vtype","render","defaultProps","$$typeof","displayName","propTypes","DEFAULT_PLURAL_KEYS","voidElementTags","defaultErrorRule","checkStateGroup","name","mappingRules","processFast","shift","checkUnicode","unicodeFlag","unicode","checkStateOptions","hasStates","isOptionsErrorOrFallback","errorRule","handleErrorRule","lexer","ruleMap","included","_loop2","_j","splice","newRules","newRule","includes","mappingAllRules","enableFast","parts","isExistsFallback","pat","test","fallbackRule","flags","suffix","parseRules","fastKey","parseMappingRule","Parser","cardinalKeys","ordinalKeys","values","_ref","isPlural","context","cases","ctx","_step","_iterator","_createForOfIteratorHelper","s","n","isSelectKeyValid","tokens","parse","getContext","err","f","nextToken","checkSelectType","param","processSelect","isRoot","_step2","_iterator2","parseToken","Token","TokenType","getTokenAST","_param","filter","Boolean","parseInt","tempFormatProps","mergedProps","processToken","utils","isVariantI18n","i18n","generateKey","locales","valueKey","JSON","stringify","compile","DateTimeFormatter","formatOptions","cache","dateTimeFormat","numberFormat","plurals","_this$cache","formatter","Intl","DateTimeFormat","Date","cacheKey","format","NumberFormatter","formatOption","NumberFormat","EventDispatcher","_events","Map","event","listener","has","set","Set","add","removeListener","listeners","delete","_len","_key","_objectWithoutPropertiesLoose","excluded","sourceKeys","PluralFormatter","msg","messages","valueStr","SelectFormatter","other","Translation","compiledMessage","localeConfig","textFormatter","formatters","getStyleOption","option","plural","_ref$offset","_excluded","pluralFormatter","replaceSymbol","selectordinal","_ref2","_ref2$offset","_excluded2","formatRules","getRule","generateFormatters","createTextFormatter","formatMessage","_this2","replaceValueFormat","tagReg","nlReg","formatElements","elements","elementKeyID","count","prefix","getElementIndex","arrays","before","getElements","_step$value","children","after","element","errorMessage","createElement","Fragment","formattedChildren","clonedElement","cloneElement","_arrays$splice","pairedIndex","unpairedIndex","textAfter","currentElement","remainingElements","I18n","_EventDispatcher","_props$cache","defaultLocale","timeZone","allMessages","_localeConfig","onError","$t","loadMessage","loadLocaleConfig","changeMessage","changeLanguage","formatDate","formatNumber","_this$allMessages$thi","_this$allMessages","_this$_localeConfig$t","localeData","localeOrAllData","setLocaleConfig","emit","localeOrMessages","_this3","setMessage","id","components","tempValues","isValidElement","_i18n$cache","defaultValues","defaultMessage","compliedMessage","isMissingMessage","messageUnavailable","messageError","translate","getFormatMessage","ForwardRef","I18nContext","createContext","Consumer","InjectProvider","Provider","I18nProvider","i18nInstance","useMemo","createI18nInstance","_useI18nSync","useI18nSync","currentLocale","currentMessages","contextValue","_jsx","_useState","useState","setCurrentLocale","_useState2","setCurrentMessages","handleChange","useCallback","useEffect","on","I18nPath","_cache","path","hit","c","newChar","transition","action","typeMap","mode","subPathDepth","actions","maybeUnescapeQuote","nextChar","trimmed","isNaN","exp","literalValueRE","a","b","formatSubPath","getPathCharType","isObject","paths","parsePath","ch","VueI18n","_I18n","localMessages","dateTimeFormats","datetimeFormats","numberFormats","vueMessages","_superPropGet","msgKey","getPathValue","msgId","$n","_dealNumberOrTimesArg","$d","_len2","_key2","_dealNumberOrTimesArg2","_this$vueMessages$thi","_this$vueMessages","useI18n","contextI18n","useContext","entries","_contextI18n$i18nInst","i18nContext","d","createVueI18nInstance","install","app","rootComponent","useRef","current"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,28]}