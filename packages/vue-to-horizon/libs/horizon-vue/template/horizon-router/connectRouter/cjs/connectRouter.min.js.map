{"version":3,"file":"connectRouter.min.js","sources":["../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../src/connect-router/actions.ts","../../src/connect-router/reducer.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/history/dom.ts","../../src/history/types.ts","../../src/history/utils.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/history/transitionManager.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../src/history/waring.ts","../../src/history/baseHistory.ts","../../src/history/browerHistory.ts","../../src/history/hashHistory.ts","../../src/router/context.tsx","../../src/matcher/types.ts","../../src/matcher/utils.ts","../../src/matcher/lexer.ts","../../src/matcher/parser.ts","../../src/router/hooks.ts","../../src/router/Router.tsx","../../src/router/lifeCycleHook.ts","../../src/router/Link.tsx","../../src/connect-router/reduxUtils.ts","../../src/connect-router/connectedRouter.tsx","../../src/connect-router/index.ts","../../src/router/index2.ts","../../src/router/BrowserRouter.tsx","../../src/router/HashRouter.tsx","../../src/router/NavLink.tsx","../../src/router/Prompt.tsx","../../src/router/Redirect.tsx","../../src/router/Route.tsx","../../src/router/Switch.tsx","../../src/connect-router/dispatch.ts","../../src/router/withRouter.tsx"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { Action, Path } from '../history/types';\r\n\r\ntype Location = Partial<Path>\r\n\r\n// 定义位置变化和history方法调用的Action type\r\nexport enum ActionName {\r\n  LOCATION_CHANGE = '$inula-router/LOCATION_CHANGE',\r\n  CALL_HISTORY_METHOD = '$inula-router/CALL_HISTORY_METHOD'\r\n}\r\n\r\n// 定义Action的两种数据类型\r\nexport type ActionMessage = {\r\n  type: ActionName.LOCATION_CHANGE\r\n  payload: {\r\n    location: Location,\r\n    action: Action\r\n    isFirstRendering: boolean\r\n  }\r\n} | {\r\n  type: ActionName.CALL_HISTORY_METHOD\r\n  payload: {\r\n    method: string,\r\n    args: any\r\n  }\r\n}\r\n\r\n\r\nexport const onLocationChanged = (location: Location, action: Action, isFirstRendering = false): ActionMessage => {\r\n  return {\r\n    type: ActionName.LOCATION_CHANGE,\r\n    payload: {\r\n      location,\r\n      action,\r\n      isFirstRendering,\r\n    },\r\n  };\r\n};\r\n\r\nconst updateLocation = (method: string): (...args: any) => ActionMessage => {\r\n  return (...args: any) => ({\r\n    type: ActionName.CALL_HISTORY_METHOD,\r\n    payload: {\r\n      method,\r\n      args,\r\n    },\r\n  });\r\n};\r\n\r\nexport const push = updateLocation('push');\r\nexport const replace = updateLocation('replace');\r\nexport const go = updateLocation('go');","import { ActionName } from './actions';\r\nimport { Action, History } from '../history/types';\r\nimport { Location } from '../router';\r\n\r\ntype LocationWithQuery = Partial<Location> & { query?: Record<string, any> };\r\n\r\n// 解析location对象，将其中的query参数解析并注入\r\nfunction injectQueryParams(location?: LocationWithQuery): LocationWithQuery {\r\n  if (location && location.query) {\r\n    return location;\r\n  }\r\n\r\n  const queryString = location && location.search;\r\n\r\n  if (!queryString) {\r\n    return {\r\n      ...location,\r\n      query: {},\r\n    };\r\n  }\r\n  const queryObject: Record<string, any> = {};\r\n\r\n  const params = new URLSearchParams(queryString);\r\n  params.forEach((value, key) => (queryObject[key] = value));\r\n\r\n  return {\r\n    ...location,\r\n    query: queryObject,\r\n  };\r\n}\r\n\r\ntype InitRouterState = {\r\n  location: LocationWithQuery;\r\n  action: Action;\r\n};\r\n\r\ntype Payload = {\r\n  type?: ActionName;\r\n  payload?: any;\r\n};\r\n\r\nexport function createConnectRouter() {\r\n  // 初始化redux State\r\n  return (history: History) => {\r\n    const initRouterState = {\r\n      location: injectQueryParams(history.location),\r\n      action: history.action,\r\n    };\r\n\r\n    // 定义connect-router对应的redux reducer函数\r\n    return (state: InitRouterState = initRouterState, { type, payload }: Payload = {}): any => {\r\n      if (type === ActionName.LOCATION_CHANGE) {\r\n        const { location, action, isFirstRendering } = payload;\r\n        if (isFirstRendering) {\r\n          return state;\r\n        }\r\n        return { ...state, location: injectQueryParams(location), action: action };\r\n      }\r\n      return state;\r\n    };\r\n  };\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export function isBrowser(): boolean {\r\n  return typeof window !== 'undefined' && window.document && typeof window.document.createElement === 'function';\r\n}\r\n\r\nexport function getDefaultConfirmation(message: string, callBack: (result: boolean) => void) {\r\n  callBack(window.confirm(message));\r\n}\r\n\r\n// 判断浏览器是否支持pushState方法，pushState是browserHistory实现的基础\r\nexport function isSupportHistory(): boolean {\r\n  return isBrowser() && window.history && 'pushState' in window.history;\r\n}\r\n\r\n// 判断浏览器是否支持PopState事件\r\nexport function isSupportsPopState(): boolean {\r\n  return window.navigator.userAgent.indexOf('Trident') === -1;\r\n}\r\n","export type BaseOption = {\r\n  basename?: string;\r\n  getUserConfirmation?: ConfirmationFunc;\r\n};\r\n\r\nexport interface HistoryProps<T = unknown> {\r\n  readonly action: Action;\r\n\r\n  readonly location: Location<T>;\r\n\r\n  length: number;\r\n}\r\n\r\nexport interface AgnosticHistory<T = unknown> extends HistoryProps<T> {\r\n  createHref(path: Partial<Path>): string;\r\n\r\n  push(to: To, state?: T): void;\r\n\r\n  replace(to: To, state?: T): void;\r\n\r\n  listen(listener: CommonListener<T>): () => void;\r\n\r\n  // add listener for listen pop action\r\n  addListener(listener: Listener<T>): () => void;\r\n\r\n  // cancel all pop listeners\r\n  destroy(): void;\r\n\r\n  block(prompt: Prompt<T>): () => void;\r\n\r\n  go(index: number): void;\r\n\r\n  goBack(): void;\r\n\r\n  goForward(): void;\r\n}\r\n\r\nexport type History<T = unknown> = Omit<AgnosticHistory<T>, 'addListener' | 'destroy'>;\r\n\r\nexport interface LocationHandler<T> {\r\n  locationHandler?: ((state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: (() => string) | null;\r\n}\r\n\r\nexport interface CreateLocationHandler<T> {\r\n  locationHandler?: ((basename: string) => (state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: ((basename: string) => () => string) | null;\r\n}\r\n\r\nexport enum Action {\r\n  pop = 'POP',\r\n  push = 'PUSH',\r\n  replace = 'REPLACE',\r\n}\r\n\r\nexport enum EventType {\r\n  PopState = 'popstate',\r\n  HashChange = 'hashchange',\r\n}\r\n\r\nexport enum PopDirection {\r\n  back = 'back',\r\n  forward = 'forward',\r\n  unknown = '',\r\n}\r\n\r\nexport type Path = {\r\n  pathname: string;\r\n\r\n  search: string;\r\n\r\n  hash: string;\r\n};\r\n\r\nexport type HistoryState<T> = {\r\n  state?: T;\r\n\r\n  key: string;\r\n};\r\n\r\nexport type DefaultStateType = unknown;\r\n\r\nexport type Location<T = unknown> = Path & HistoryState<T>;\r\n\r\nexport type To = string | Partial<Path>;\r\n\r\nexport interface CommonListener<T = unknown> {\r\n  (navigation: Navigation<T>): void;\r\n}\r\n\r\nexport interface ActionInfo {\r\n  type: Action;\r\n  direction: PopDirection;\r\n  delta: number;\r\n}\r\n\r\nexport interface PopListener {\r\n  (to: string, from: string, information: ActionInfo): void;\r\n}\r\n\r\nexport interface PopNavigation {\r\n  to: string;\r\n  from: string;\r\n  information: ActionInfo;\r\n}\r\n\r\nexport type Listener<S> =\r\n  | {\r\n      type: 'common';\r\n      listener: CommonListener<S>;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      listener: PopListener;\r\n    };\r\n\r\nexport interface Navigation<T = unknown> {\r\n  action: Action;\r\n\r\n  location: Location<T>;\r\n}\r\n\r\nexport type Prompt<S> = string | boolean | null | ((location: Location<S>, action: Action) => void);\r\n\r\nexport type CallBackFunc = (isJump: boolean) => void;\r\n\r\nexport type ConfirmationFunc = (message: string, callBack: CallBackFunc) => void;\r\n\r\nexport interface TManager<S> {\r\n  setPrompt(next: Prompt<S>): () => void;\r\n\r\n  confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ): void;\r\n}\r\n","import { Action, Location, Path, To } from './types';\r\n\r\nexport function createPath(path: Partial<Path>): string {\r\n  const { search, hash } = path;\r\n  let pathname = path.pathname || '/';\r\n  if (search && search !== '?') {\r\n    pathname += search.startsWith('?') ? search : '?' + search;\r\n  }\r\n  if (hash && hash !== '#') {\r\n    pathname += hash.startsWith('#') ? hash : '#' + hash;\r\n  }\r\n  return pathname;\r\n}\r\n\r\nexport function parsePath(url: string): Partial<Path> {\r\n  let pathname = url || '/';\r\n  const parsedPath: Partial<Path> = {\r\n    search: '',\r\n    hash: '',\r\n  };\r\n\r\n  const hashIdx = url.indexOf('#');\r\n  if (hashIdx > -1) {\r\n    const hash = url.substring(hashIdx);\r\n    parsedPath.hash = hash === '#' ? '' : hash;\r\n    pathname = pathname.substring(0, hashIdx);\r\n  }\r\n\r\n  const searchIdx = url.indexOf('?');\r\n  if (searchIdx > -1) {\r\n    const search = url.substring(searchIdx);\r\n    parsedPath.search = search === '?' ? '' : search;\r\n    pathname = pathname.substring(0, searchIdx);\r\n  }\r\n  parsedPath.pathname = pathname;\r\n  return parsedPath;\r\n}\r\n\r\nexport function createLocation<S>(current: string | Location, to: To, state?: S, key?: string): Readonly<Location<S>> {\r\n  const pathname = typeof current === 'string' ? current : current.pathname;\r\n  const urlObj = typeof to === 'string' ? parsePath(to) : to;\r\n  // 随机key长度取6\r\n  const getRandKey = genRandomKey(6);\r\n  const location = {\r\n    pathname: pathname,\r\n    search: '',\r\n    hash: '',\r\n    state: state,\r\n    key: typeof key === 'string' ? key : getRandKey(),\r\n    ...urlObj,\r\n  };\r\n  if (!location.pathname) {\r\n    location.pathname = pathname ? pathname : '/';\r\n  } else if (!location.pathname.startsWith('/')) {\r\n    location.pathname = parseRelativePath(location.pathname, pathname);\r\n  }\r\n  if (location.search && location.search[0] !== '?') {\r\n    location.search = '?' + location.search;\r\n  }\r\n  if (location.hash && location.hash[0] !== '#') {\r\n    location.hash = '#' + location.hash;\r\n  }\r\n  return location;\r\n}\r\n\r\nexport function isLocationEqual(p1: Partial<Path>, p2: Partial<Path>) {\r\n  return p1.pathname === p2.pathname && p1.search === p2.search && p1.hash === p2.hash;\r\n}\r\n\r\nexport function addHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path;\r\n  }\r\n  return '/' + path;\r\n}\r\n\r\nexport function stripHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path.substring(1);\r\n  }\r\n  return path;\r\n}\r\n\r\nexport function normalizeSlash(path: string): string {\r\n  const tempPath = addHeadSlash(path);\r\n  if (tempPath[tempPath.length - 1] === '/') {\r\n    return tempPath.substring(0, tempPath.length - 1);\r\n  }\r\n  return tempPath;\r\n}\r\n\r\nexport function hasBasename(path: string, prefix: string): boolean {\r\n  return (\r\n    path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && ['/', '?', '#', ''].includes(path.charAt(prefix.length))\r\n  );\r\n}\r\n\r\nexport function stripBasename(path: string, prefix: string): string {\r\n  return hasBasename(path, prefix) ? path.substring(prefix.length) : path;\r\n}\r\n\r\n// 使用随机生成的Key记录被访问过的URL，当Block被被触发时利用delta值跳转到之前的页面\r\nexport function createMemoryRecord<T, S>(initVal: S, fn: (arg: S) => T) {\r\n  let visitedRecord: T[] = [fn(initVal)];\r\n\r\n  function getDelta(to: S, from: S): number {\r\n    let toIdx = visitedRecord.lastIndexOf(fn(to));\r\n    if (toIdx === -1) {\r\n      toIdx = 0;\r\n    }\r\n    let fromIdx = visitedRecord.lastIndexOf(fn(from));\r\n    if (fromIdx === -1) {\r\n      fromIdx = 0;\r\n    }\r\n    return toIdx - fromIdx;\r\n  }\r\n\r\n  function addRecord(current: S, newRecord: S, action: Action) {\r\n    const curVal = fn(current);\r\n    const NewVal = fn(newRecord);\r\n    if (action === Action.push) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      const newVisitedRecord = visitedRecord.slice(0, prevIdx + 1);\r\n      newVisitedRecord.push(NewVal);\r\n      visitedRecord = newVisitedRecord;\r\n    }\r\n    if (action === Action.replace) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      if (prevIdx !== -1) {\r\n        visitedRecord[prevIdx] = NewVal;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { getDelta, addRecord };\r\n}\r\n\r\nfunction genRandomKey(length: number): () => string {\r\n  const end = length + 2;\r\n  return () => {\r\n    return Math.random().toString(18).substring(2, end);\r\n  };\r\n}\r\n\r\nexport function parseRelativePath(to: string, from: string) {\r\n  if (to.startsWith('/')) {\r\n    return to;\r\n  }\r\n  const fromParts = from.split('/');\r\n  const toParts = to.split('/');\r\n  const lastToPart = toParts[toParts.length - 1];\r\n  if (lastToPart === '..' || lastToPart === '.') {\r\n    toParts.push('');\r\n  }\r\n  let index = fromParts.length - 1;\r\n  let toIndex = 0;\r\n  let urlPart: string;\r\n\r\n  while (toIndex < toParts.length) {\r\n    urlPart = toParts[toIndex];\r\n    if (urlPart === '.') {\r\n      continue;\r\n    }\r\n    if (urlPart === '..') {\r\n      if (index > 1) {\r\n        index--;\r\n      }\r\n      toIndex++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return fromParts.slice(0, index).join('/') + '/' + toParts.slice(toIndex).join('/');\r\n}\r\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import type { Action, CallBackFunc, ConfirmationFunc, Location, Prompt, TManager } from './types';\r\n\r\nclass TransitionManager<S> implements TManager<S> {\r\n  private prompt: Prompt<S>;\r\n\r\n  constructor() {\r\n    this.prompt = null;\r\n  }\r\n\r\n  public setPrompt(prompt: Prompt<S>): () => void {\r\n    this.prompt = prompt;\r\n\r\n    // 清除Prompt\r\n    return () => {\r\n      if (this.prompt === prompt) {\r\n        this.prompt = null;\r\n      }\r\n    };\r\n  }\r\n\r\n  public confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ) {\r\n    if (this.prompt !== null) {\r\n      const result = typeof this.prompt === 'function' ? this.prompt(location, action) : this.prompt;\r\n      if (typeof result === 'string') {\r\n        typeof userConfirmationFunc === 'function' ? userConfirmationFunc(result, callBack) : callBack(true);\r\n      } else {\r\n        callBack(result !== false);\r\n      }\r\n    } else {\r\n      callBack(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TransitionManager;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function warning(condition: any, message: string) {\r\n  if (condition) {\r\n    if (console && typeof console.warn === 'function') {\r\n      console.warn(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default warning;","import { Action, EventType, HistoryProps, Listener, Navigation, PopDirection, PopNavigation, Prompt } from './types';\r\nimport transitionManager from './transitionManager';\r\nimport { isSupportsPopState } from './dom';\r\nimport { createPath } from './utils';\r\n\r\ntype Trigger<S> =\r\n  | {\r\n      type: 'common';\r\n      trigger: (arg: Navigation<S>) => void;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      trigger: (arg: PopNavigation) => void;\r\n    };\r\n\r\n// 抽取BrowserHistory和HashHistory中相同的方法\r\nexport function getBaseHistory<S>(\r\n  type: 'browser' | 'hash' = 'browser',\r\n  transitionManager: transitionManager<S>,\r\n  popActionListener: (event: PopStateEvent | HashChangeEvent) => void\r\n) {\r\n  let listenerCount = 0;\r\n  const supportPopState = isSupportsPopState();\r\n  let listeners: Trigger<S>[] = [];\r\n  const unListeners: (() => void)[] = [];\r\n  const browserHistory = window.history;\r\n\r\n  // 标记是否暂停触发type为pop类型的listener\r\n  let pauseTrigger = false;\r\n\r\n  function go(step: number, triggerListener = true) {\r\n    if (triggerListener) {\r\n      pauseTrigger = true;\r\n    }\r\n    browserHistory.go(step);\r\n  }\r\n\r\n  function setupListener(count: number | null) {\r\n    if (count === null) {\r\n      listenerCount = 0;\r\n    } else {\r\n      listenerCount += count;\r\n    }\r\n    if (listenerCount === 1 && count === 1) {\r\n      if (type === 'browser' && supportPopState) {\r\n        addEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        addEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    } else if (listenerCount === 0) {\r\n      if (type === 'browser' && supportPopState) {\r\n        removeEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        removeEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    }\r\n  }\r\n\r\n  function addListener(listener: Listener<S>): () => void {\r\n    let isActive = true;\r\n    const wrapper = (args: Navigation<S> | PopNavigation) => {\r\n      if (isActive) {\r\n        if (listener.type === 'common' && 'action' in args) {\r\n          listener.listener(args);\r\n        } else if (listener.type === 'pop' && 'to' in args) {\r\n          listener.listener(args.to, args.from, args.information);\r\n        }\r\n      }\r\n    };\r\n    const trigger: Trigger<S> = { type: listener.type, trigger: wrapper };\r\n    listeners.push(trigger);\r\n    setupListener(1);\r\n\r\n    const cancelListener = () => {\r\n      isActive = false;\r\n      setupListener(-1);\r\n      listeners = listeners.filter(listener => listener !== trigger);\r\n    };\r\n\r\n    unListeners.push(cancelListener);\r\n    return cancelListener;\r\n  }\r\n\r\n  function destroy() {\r\n    for (const unListen of unListeners) {\r\n      unListen();\r\n    }\r\n    unListeners.length = 0;\r\n    setupListener(null);\r\n  }\r\n\r\n  let isBlocked = false;\r\n\r\n  function block(prompt: Prompt<S> = false): () => void {\r\n    const unblock = transitionManager.setPrompt(prompt);\r\n    if (!isBlocked) {\r\n      setupListener(1);\r\n      isBlocked = true;\r\n    }\r\n    return () => {\r\n      if (isBlocked) {\r\n        isBlocked = false;\r\n        setupListener(-1);\r\n      }\r\n      unblock();\r\n    };\r\n  }\r\n\r\n  function getUpdateStateFunc(historyProps: HistoryProps<S>) {\r\n    return function (nextState: Navigation<S> | undefined) {\r\n      const originPath = createPath(historyProps.location);\r\n      if (nextState) {\r\n        Object.assign(historyProps, nextState);\r\n      }\r\n      const delta = browserHistory.length - historyProps.length;\r\n      historyProps.length = browserHistory.length;\r\n      // 避免location引用相同时setState不触发\r\n      const location = Object.assign({}, historyProps.location);\r\n      const commonArgs = { location: location, action: historyProps.action };\r\n      const popArgs: PopNavigation = {\r\n        to: createPath(location),\r\n        from: originPath,\r\n        information: {\r\n          delta: delta,\r\n          direction: delta > 0 ? PopDirection.forward : PopDirection.back,\r\n          type: Action.pop,\r\n        },\r\n      };\r\n      for (let i = 0; i < listeners.length && !pauseTrigger; i++) {\r\n        const listener = listeners[i];\r\n        if (listener.type === 'common') {\r\n          listener.trigger(commonArgs);\r\n        } else if (listener.type === 'pop' && historyProps.action === Action.pop) {\r\n          // vue history listener only trigger when action is pop\r\n          listener.trigger(popArgs);\r\n        }\r\n      }\r\n      pauseTrigger = false;\r\n    };\r\n  }\r\n\r\n  return { go, addListener, block, destroy, getUpdateStateFunc };\r\n}\r\n","import { getDefaultConfirmation, isSupportHistory, isSupportsPopState } from './dom';\r\nimport {\r\n  Action,\r\n  AgnosticHistory,\r\n  BaseOption,\r\n  CommonListener,\r\n  DefaultStateType,\r\n  EventType,\r\n  History,\r\n  HistoryState,\r\n  Listener,\r\n  Location,\r\n  LocationHandler,\r\n  Path,\r\n  To,\r\n} from './types';\r\nimport { createLocation, createMemoryRecord, createPath, normalizeSlash, stripBasename } from './utils';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type BrowserHistoryOption = {\r\n  /**\r\n   * forceRefresh为True时跳转时会强制刷新页面\r\n   */\r\n  forceRefresh?: boolean;\r\n} & BaseOption;\r\n\r\nexport function createBrowserHistory<S = DefaultStateType>(options: BrowserHistoryOption): History<S>;\r\n/**\r\n * @internal\r\n * @desc this override signature only for internal usage\r\n */\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption\r\n): AgnosticHistory<S>;\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption = {}\r\n): AgnosticHistory<S> {\r\n  const supportHistory = isSupportHistory();\r\n  const isSupportPopState = isSupportsPopState();\r\n  const browserHistory = window.history;\r\n  const { forceRefresh = false, getUserConfirmation = getDefaultConfirmation } = options;\r\n\r\n  const basename = options.basename ? normalizeSlash(options.basename) : '';\r\n\r\n  const initLocation = getLocation(getHistoryState());\r\n\r\n  const recordOperator = createMemoryRecord<string, Location<S>>(initLocation, l => l.key);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory<S>(\r\n    'browser',\r\n    transitionManager,\r\n    handlePop\r\n  );\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(-1),\r\n    listen,\r\n    addListener,\r\n    block,\r\n    push,\r\n    replace,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function getHistoryState() {\r\n    return supportHistory ? window.history.state : {};\r\n  }\r\n\r\n  function getLocation(historyState: Partial<HistoryState<S>>) {\r\n    const { search, hash } = window.location;\r\n    const { key, state } = historyState || {};\r\n    let pathname = window.location.pathname;\r\n    pathname = basename ? stripBasename(pathname, basename) : pathname;\r\n\r\n    return createLocation<S>('', { pathname, search, hash }, state, key);\r\n  }\r\n\r\n  // 拦截页面POP事件后，防止返回到的页面被重复拦截\r\n  let forceJump = false;\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceJump) {\r\n      forceJump = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          // 执行跳转行为\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location, history.location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  const isEventPopState = (event: Event): event is PopStateEvent => {\r\n    return event.type === EventType.PopState;\r\n  };\r\n\r\n  function handlePop(event: PopStateEvent | HashChangeEvent) {\r\n    const historyState = isSupportPopState && isEventPopState(event) ? event.state : getHistoryState();\r\n    const handler = options.locationHandler ? options.locationHandler : getLocation;\r\n    handlePopState(handler(historyState));\r\n  }\r\n\r\n  // 取消页面跳转并恢复到跳转前的页面\r\n  function revertPopState(from: Location<S>, to: Location<S>) {\r\n    const delta = recordOperator.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceJump = true;\r\n    }\r\n  }\r\n\r\n  function createHref(path: Partial<Path>) {\r\n    return (options.baseHandler ? options.baseHandler() : basename) + createPath(path);\r\n  }\r\n\r\n  function push(to: To, state?: S) {\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.href = href;\r\n        } else {\r\n          browserHistory.pushState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.href = href;\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.replace(href);\r\n        } else {\r\n          browserHistory.replaceState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.replace(href);\r\n      }\r\n    });\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { Action, AgnosticHistory, BaseOption, CommonListener, DefaultStateType, Listener, Location, To } from './types';\r\nimport {\r\n  addHeadSlash,\r\n  createLocation,\r\n  createMemoryRecord,\r\n  createPath,\r\n  isLocationEqual,\r\n  normalizeSlash,\r\n  stripBasename,\r\n  stripHeadSlash,\r\n} from './utils';\r\nimport { getDefaultConfirmation } from './dom';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type urlHashType = 'slash' | 'noslash';\r\n\r\ntype HashHistoryOption = {\r\n  hashType?: urlHashType;\r\n} & BaseOption;\r\n\r\n// 获取#前的内容\r\nfunction stripHash(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? path : path.substring(0, idx);\r\n}\r\n\r\n// 获取#后的内容\r\nexport function getHashContent(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? '' : path.substring(idx + 1);\r\n}\r\n\r\nexport function createHashHistory<S = DefaultStateType>(option: HashHistoryOption = {}): AgnosticHistory<S> {\r\n  const browserHistory = window.history;\r\n  const { hashType = 'slash', getUserConfirmation = getDefaultConfirmation } = option;\r\n\r\n  const basename = option.basename ? normalizeSlash(option.basename) : '';\r\n\r\n  const pathDecoder = addHeadSlash;\r\n  const pathEncoder = hashType === 'slash' ? addHeadSlash : stripHeadSlash;\r\n\r\n  const startLocation = getHashContent(window.location.href);\r\n  const encodedLocation = pathEncoder(startLocation);\r\n  // 初始化hash格式不合法时会重定向\r\n  if (startLocation !== encodedLocation) {\r\n    window.location.replace(stripHash(window.location.href) + '#' + encodedLocation);\r\n  }\r\n\r\n  function getLocation() {\r\n    let hashPath = pathDecoder(getHashContent(window.location.hash));\r\n    if (basename) {\r\n      hashPath = stripBasename(hashPath, basename);\r\n    }\r\n\r\n    return createLocation<S>('', hashPath, undefined, 'default');\r\n  }\r\n\r\n  const initLocation = getLocation();\r\n\r\n  const memRecords = createMemoryRecord<string, Location<S>>(initLocation, createPath);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  function createHref(location: Location<S>) {\r\n    const tag = document.querySelector('base');\r\n    const base = tag && tag.getAttribute('href') ? stripHash(window.location.href) : '';\r\n    return base + '#' + pathEncoder(basename + createPath(location));\r\n  }\r\n\r\n  let forceNextPop = false;\r\n  let ignorePath: null | string = null;\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory(\r\n    'hash',\r\n    transitionManager,\r\n    handleHashChange\r\n  );\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(1),\r\n    push,\r\n    replace,\r\n    listen,\r\n    addListener,\r\n    block,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function push(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      // 前后hash不一样才进行跳转\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = encodedPath;\r\n        window.location.hash = encodedPath;\r\n\r\n        memRecords.addRecord(history.location, location, action);\r\n\r\n        updateState({ action, location });\r\n      } else {\r\n        updateState(undefined);\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = path;\r\n        window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n      }\r\n      memRecords.addRecord(history.location, location, action);\r\n      updateState({ action, location });\r\n    });\r\n  }\r\n\r\n  function handleHashChange() {\r\n    const hashPath = getHashContent(window.location.href);\r\n    const encodedPath = pathEncoder(hashPath);\r\n    if (hashPath !== encodedPath) {\r\n      window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n    } else {\r\n      const location = getLocation();\r\n      const prevLocation = history.location;\r\n      if (!forceNextPop && isLocationEqual(location, prevLocation)) {\r\n        return;\r\n      }\r\n      if (ignorePath === createPath(location)) {\r\n        return;\r\n      }\r\n      ignorePath = null;\r\n      handlePopState(location);\r\n    }\r\n  }\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceNextPop) {\r\n      forceNextPop = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  // 在跳转行为被Block后，用History.go()跳转回之前的页面\r\n  function revertPopState(from: Location<S>) {\r\n    const to = history.location;\r\n    const delta = memRecords.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceNextPop = true;\r\n    }\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { createContext } from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { Matched } from '../matcher/parser';\r\n\r\nfunction createNamedContext<T>(name: string, defaultValue: T) {\r\n  const context = createContext<T>(defaultValue);\r\n  context.displayName = name;\r\n  return context;\r\n}\r\n\r\nexport type RouterContextValue = {\r\n  history: History;\r\n  location: Location;\r\n  match: Matched | null;\r\n};\r\n\r\nconst RouterContext = createNamedContext<RouterContextValue>('Router', {} as any);\r\n\r\nexport default RouterContext;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { Matched, Params } from './parser';\r\n\r\nexport type Token = {\r\n  type: TokenType;\r\n  value: string;\r\n};\r\n\r\nexport enum TokenType {\r\n  Delimiter = 'delimiter',\r\n  Static = 'static',\r\n  Param = 'param',\r\n  WildCard = 'wildcard',\r\n  LBracket = '(',\r\n  RBracket = ')',\r\n  Pattern = 'pattern',\r\n}\r\n\r\nexport interface Parser<P> {\r\n  regexp: RegExp;\r\n\r\n  keys: string[];\r\n\r\n  score: number[];\r\n\r\n  parse(url: string): Matched<P> | null;\r\n\r\n  compile(params: Params<P>): string;\r\n}\r\n\r\nexport type ParserOption = {\r\n  // 是否大小写敏感\r\n  caseSensitive?: boolean;\r\n  // 是否启用严格模式\r\n  strictMode?: boolean;\r\n  // 精准匹配 兼容 React-RouterV5\r\n  exact?: boolean;\r\n};\r\n\r\ntype ClearLeading<U extends string> = U extends `/${infer R}` ? ClearLeading<R> : U;\r\ntype ClearTailing<U extends string> = U extends `${infer L}/` ? ClearTailing<L> : U;\r\n\r\ntype ParseParam<Param extends string> = Param extends `:${infer R}`\r\n  ? {\r\n      [K in R]: string;\r\n    }\r\n  : {};\r\n\r\ntype MergeParams<OneParam extends Record<string, any>, OtherParam extends Record<string, any>> = {\r\n  readonly [Key in keyof OneParam | keyof OtherParam]?: string;\r\n};\r\n\r\ntype ParseURLString<Str extends string> = Str extends `${infer Param}/${infer Rest}`\r\n  ? MergeParams<ParseParam<Param>, ParseURLString<ClearLeading<Rest>>>\r\n  : ParseParam<Str>;\r\n\r\n// 解析URL中的动态参数，以实现TypeScript提示功能\r\nexport type GetURLParams<U extends string> = ParseURLString<ClearLeading<ClearTailing<U>>>;\r\n","/**\r\n * @description 将url中的//转换为/\r\n */\r\nexport function cleanPath(path: string): string {\r\n  return path.replace(/\\/+/g, '/');\r\n}\r\n\r\nexport function scoreCompare(score1: number[], score2: number[]): number {\r\n  const score1Length = score1.length;\r\n  const score2Length = score2.length;\r\n  const end = Math.min(score1Length, score2Length);\r\n  for (let i = 0; i < end; i++) {\r\n    const delta = score2[i] - score1[i];\r\n    if (delta !== 0) {\r\n      return delta;\r\n    }\r\n  }\r\n  if (score1Length === score2Length) {\r\n    return 0;\r\n  }\r\n  return score1Length > score2Length ? -1 : 1;\r\n}\r\n\r\n// 把正则表达式的特殊符号加两个反斜杠进行转义\r\nexport function escapeStr(str: string) {\r\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\r\n}\r\n","import { Token, TokenType } from './types';\r\nimport { cleanPath } from './utils';\r\n\r\nconst validChar = /[^/:()*?$^+]/;\r\n\r\n// 对Url模板进行词法解析，解析结果为Tokens\r\nexport function lexer(path: string): Token[] {\r\n  const tokens: Token[] = [];\r\n\r\n  if (!path) {\r\n    return tokens;\r\n  }\r\n\r\n  let urlPath = cleanPath(path);\r\n  if (urlPath !== '*' && !urlPath.startsWith('/')) {\r\n    throw new Error(`Url must start with \"/\".`);\r\n  }\r\n\r\n  const getLiteral = () => {\r\n    let name = '';\r\n    while (i < urlPath.length && validChar.test(urlPath[i])) {\r\n      name += urlPath[i];\r\n      skipChar(1);\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const skipChar = (step: number) => {\r\n    i += step;\r\n  };\r\n\r\n  let i = 0;\r\n  while (i < urlPath.length) {\r\n    const curChar = urlPath[i];\r\n    const prevChar = urlPath[i - 1];\r\n\r\n    if (curChar === '/') {\r\n      tokens.push({ type: TokenType.Delimiter, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // dynamic params (/:a)\r\n    if (prevChar === '/' && curChar === ':') {\r\n      skipChar(1);\r\n      tokens.push({ type: TokenType.Param, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // wildCard params (/:*)\r\n    if ((prevChar === '/' || prevChar === undefined) && curChar === '*') {\r\n      tokens.push({ type: TokenType.WildCard, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // static params\r\n    if (prevChar === '/' && validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Static, value: getLiteral() });\r\n      continue;\r\n    }\r\n    if (curChar === '(') {\r\n      tokens.push({ type: TokenType.LBracket, value: '(' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (curChar === ')') {\r\n      tokens.push({ type: TokenType.RBracket, value: ')' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (['*', '?', '$', '^', '+'].includes(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: curChar });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // 跳过非法字符\r\n    skipChar(1);\r\n  }\r\n\r\n  return tokens;\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { GetURLParams, Parser, ParserOption, TokenType } from './types';\r\nimport { lexer } from './lexer';\r\nimport { escapeStr, scoreCompare } from './utils';\r\n\r\n// 不同类型参数的匹配得分\r\nenum MatchScore {\r\n  // 固定参数\r\n  static = 10,\r\n  // 动态参数\r\n  param = 6,\r\n  // 通配符参数\r\n  wildcard = 3,\r\n  placeholder = -1,\r\n}\r\n\r\nexport type Params<P> = { [K in keyof P]?: P[K] };\r\n\r\n// 兼容 react v5 matched类型\r\nexport type Matched<P = any> = {\r\n  score: number[];\r\n  params: Params<P>;\r\n  path: string;\r\n  url: string;\r\n  isExact: boolean;\r\n};\r\n\r\nconst defaultOption: Required<ParserOption> = {\r\n  // url匹配时是否大小写敏感\r\n  caseSensitive: false,\r\n  // 是否严格匹配url结尾的/\r\n  strictMode: false,\r\n  // 是否完全精确匹配\r\n  exact: false,\r\n};\r\n// 正则表达式中需要转义的字符\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n// 用于匹配两个//中的的值\r\nconst BASE_PARAM_PATTERN = '[^/]+';\r\n\r\nconst DefaultDelimiter = '/#?';\r\n\r\n/**\r\n * URL匹配整体流程\r\n * 1.词法解析，将URL模板解析为Token\r\n * 2.使用Token生成正则表达式\r\n * 3.利用正则表达式解析URL中参数或填充URL模板\r\n */\r\nexport function createPathParser<Str extends string>(pathname: Str, option?: ParserOption): Parser<GetURLParams<Str>>;\r\nexport function createPathParser<P = unknown>(pathname: string, option?: ParserOption): Parser<P>;\r\nexport function createPathParser<P = unknown>(pathname: string, option: ParserOption = defaultOption): Parser<P> {\r\n  const {\r\n    caseSensitive = defaultOption.caseSensitive,\r\n    strictMode = defaultOption.strictMode,\r\n    exact = defaultOption.exact,\r\n  } = option;\r\n\r\n  let pattern = '^';\r\n  const keys: string[] = [];\r\n  const scores: number[] = [];\r\n\r\n  const tokens = lexer(pathname);\r\n  const onlyHasWildCard = tokens.length === 1 && tokens[0].type === TokenType.WildCard;\r\n  const tokenCount = tokens.length;\r\n  const lastToken = tokens[tokenCount - 1];\r\n  let asteriskCount = 0;\r\n\r\n  /**\r\n   * 用于支持URL中的可选参数/:parma?\r\n   * @description 向前扫描到下一个分隔符/，检查其中是否有?\r\n   * @param currentIdx\r\n   */\r\n  const lookToNextDelimiter = (currentIdx: number): boolean => {\r\n    let hasOptionalParam = false;\r\n    while (currentIdx < tokens.length && tokens[currentIdx].type !== TokenType.Delimiter) {\r\n      if (tokens[currentIdx].value === '?' || tokens[currentIdx].value === '*') {\r\n        hasOptionalParam = true;\r\n      }\r\n      currentIdx++;\r\n    }\r\n    return hasOptionalParam;\r\n  };\r\n  for (let tokenIdx = 0; tokenIdx < tokenCount; tokenIdx++) {\r\n    const token = tokens[tokenIdx];\r\n    const nextToken = tokens[tokenIdx + 1];\r\n    switch (token.type) {\r\n      case TokenType.Delimiter: {\r\n        // 该分隔符后有可选参数则该分割符在匹配时是可选的\r\n        const hasOptional = lookToNextDelimiter(tokenIdx + 1);\r\n        // 该分隔符为最后一个且strictMode===false时，该分割符在匹配时是可选的\r\n        const isSlashOptional = nextToken === undefined && !strictMode;\r\n        pattern += `/${hasOptional || isSlashOptional ? '?' : ''}`;\r\n        break;\r\n      }\r\n      case TokenType.Static:\r\n        pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n        if (nextToken && nextToken.type === TokenType.Pattern) {\r\n          pattern += `(.${nextToken.value})`;\r\n          keys.push(String(asteriskCount));\r\n          asteriskCount++;\r\n        }\r\n        scores.push(MatchScore.static);\r\n        break;\r\n      case TokenType.Param: {\r\n        // 动态参数支持形如/:param、/:param*、/:param?、/:param(\\\\d+)的形式\r\n        let paramRegexp = '';\r\n        if (nextToken) {\r\n          switch (nextToken.type) {\r\n            case TokenType.LBracket:\r\n              // 跳过当前Token和左括号\r\n              tokenIdx += 2;\r\n              while (tokens[tokenIdx].type !== TokenType.RBracket) {\r\n                paramRegexp += tokens[tokenIdx].value;\r\n                tokenIdx++;\r\n              }\r\n              paramRegexp = `(${paramRegexp})`;\r\n              break;\r\n            case TokenType.Pattern:\r\n              tokenIdx++;\r\n              paramRegexp += `(${nextToken.value === '*' ? '.*' : BASE_PARAM_PATTERN})${nextToken.value}`;\r\n              break;\r\n          }\r\n        }\r\n        pattern += paramRegexp ? `(?:${paramRegexp})` : `(${BASE_PARAM_PATTERN})`;\r\n        keys.push(token.value);\r\n        scores.push(MatchScore.param);\r\n        break;\r\n      }\r\n      case TokenType.WildCard:\r\n        keys.push(token.value);\r\n        pattern += `((?:${BASE_PARAM_PATTERN})${onlyHasWildCard ? '?' : ''}(?:/(?:${BASE_PARAM_PATTERN}))*)`;\r\n        scores.push(onlyHasWildCard ? MatchScore.wildcard : MatchScore.placeholder);\r\n        break;\r\n    }\r\n  }\r\n  const isWildCard = lastToken.type === TokenType.WildCard;\r\n\r\n  if (!isWildCard && !exact) {\r\n    if (!strictMode) {\r\n      pattern += `(?:[${escapeStr(DefaultDelimiter)}](?=$))?`;\r\n    }\r\n    if (lastToken.type !== TokenType.Delimiter) {\r\n      pattern += `(?=[${escapeStr(DefaultDelimiter)}]|$)`;\r\n    }\r\n  } else {\r\n    pattern += strictMode ? '$' : `[${escapeStr(DefaultDelimiter)}]?$`;\r\n  }\r\n\r\n  const flag = caseSensitive ? '' : 'i';\r\n  const regexp = new RegExp(pattern, flag);\r\n\r\n  /**\r\n   * @description 根据给定Pattern解析path\r\n   */\r\n  function parse(path: string): Matched<P> | null {\r\n    const reMatch = path.match(regexp);\r\n\r\n    if (!reMatch) {\r\n      return null;\r\n    }\r\n    const matchedPath = reMatch[0];\r\n    const params: Params<P> = {};\r\n    const parseScore: number[] = Array.from(scores);\r\n    for (let i = 1; i < reMatch.length; i++) {\r\n      const param = reMatch[i];\r\n      const key = keys[i - 1];\r\n      if (key === '*' && param) {\r\n        const value = param.split('/');\r\n        if (!Array.isArray(params['*'])) {\r\n          params['*'] = value;\r\n        } else {\r\n          params['*'].push(...value);\r\n        }\r\n        // 完成通配符参数解析后将placeholder替换为wildcard参数的分值\r\n        parseScore.splice(\r\n          scores.indexOf(MatchScore.placeholder),\r\n          1,\r\n          ...new Array(value.length).fill(MatchScore.wildcard)\r\n        );\r\n      } else {\r\n        params[key] = param ? param : undefined;\r\n      }\r\n    }\r\n\r\n    const isExact = path === matchedPath;\r\n    const url = path === '/' && matchedPath === '' ? '/' : matchedPath;\r\n    return { isExact: isExact, path: pathname, url: url, score: parseScore, params: params };\r\n  }\r\n\r\n  /**\r\n   * @description 使用给定参数填充pattern，得到目标URL\r\n   */\r\n  function compile(params: Params<P>): string {\r\n    let path = '';\r\n    for (const token of tokens) {\r\n      switch (token.type) {\r\n        case TokenType.Static:\r\n          path += token.value;\r\n          break;\r\n        case TokenType.Param:\r\n          if (!params[token.value]) {\r\n            throw new Error('Param is invalid.');\r\n          }\r\n          path += params[token.value];\r\n          break;\r\n        case TokenType.WildCard: {\r\n          const wildCard = params['*'];\r\n          if (wildCard instanceof Array) {\r\n            path += wildCard.join('/');\r\n          } else {\r\n            path += wildCard;\r\n          }\r\n          break;\r\n        }\r\n        case TokenType.Delimiter:\r\n          path += token.value;\r\n          break;\r\n      }\r\n    }\r\n    return path;\r\n  }\r\n\r\n  return {\r\n    regexp: regexp,\r\n    keys: keys,\r\n    score: scores,\r\n    compile,\r\n    parse,\r\n  };\r\n}\r\n\r\n/**\r\n * @description 依次使用pathname与pattern进行匹配，根据匹配分数取得分数最高结果\r\n */\r\nexport function matchPath<P = any>(\r\n  pathname: string,\r\n  pattern: string | string[],\r\n  option?: ParserOption\r\n): Matched<P> | null {\r\n  const patterns = Array.isArray(pattern) ? [...pattern] : [pattern];\r\n  const matchedResults: Matched<P>[] = [];\r\n  for (const item of patterns) {\r\n    const parser = createPathParser(item, option);\r\n    const matched = parser.parse(pathname);\r\n    if (matched) {\r\n      matchedResults.push(matched);\r\n    }\r\n  }\r\n  return !matchedResults.length ? null : matchedResults.sort((a, b) => scoreCompare(a.score, b.score))[0];\r\n}\r\n\r\nexport function generatePath<P = any>(path: string, params: Params<P>) {\r\n  const parser = createPathParser(path);\r\n  return parser.compile(params);\r\n}\r\n","import { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath, Params } from '../matcher/parser';\r\nimport { History } from '../history/types';\r\nimport { Location } from './index';\r\n\r\nfunction useHistory<S>(): History<S>;\r\nfunction useHistory() {\r\n  return useContext(RouterContext).history;\r\n}\r\n\r\nfunction useLocation<S>(): Location<S>;\r\nfunction useLocation() {\r\n  return useContext(RouterContext).location;\r\n}\r\n\r\nfunction useParams<P>(): Params<P> | {};\r\nfunction useParams() {\r\n  const match = useContext(RouterContext).match;\r\n  return match ? match.params : {};\r\n}\r\n\r\nfunction useRouteMatch<P>(path?: string): Matched<P> | null;\r\nfunction useRouteMatch(path?: string) {\r\n  const pathname = useLocation().pathname;\r\n  const match = useContext(RouterContext).match;\r\n  if (path) {\r\n    return matchPath(pathname, path);\r\n  }\r\n  return match;\r\n}\r\n\r\nexport { useHistory, useLocation, useParams, useRouteMatch };\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useLayoutEffect, useMemo, useRef, useState, InulaNode } from '@cloudsop/horizon';\r\n\r\nimport { History, Location } from '../history/types';\r\n\r\nimport RouterContext, { RouterContextValue } from './context';\r\n\r\nexport type RouterProps = {\r\n  history: History;\r\n  children?: InulaNode;\r\n};\r\n\r\nfunction Router<P extends RouterProps>(props: P) {\r\n  const { history, children = null } = props;\r\n  const [location, setLocation] = useState(props.history.location);\r\n  const pendingLocation = useRef<Location | null>(null);\r\n  const unListen = useRef<null | (() => void)>(null);\r\n  const isMount = useRef<boolean>(false);\r\n\r\n  // 在Router加载时就监听history地址变化，以保证在始渲染时重定向能正确触发\r\n  if (unListen.current === null)\r\n    unListen.current = history.listen(arg => {\r\n      pendingLocation.current = arg.location;\r\n    });\r\n\r\n  // 模拟componentDidMount和componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    isMount.current = true;\r\n    if (unListen.current) {\r\n      unListen.current();\r\n    }\r\n    // 监听history中的位置变化\r\n    unListen.current = history.listen(arg => {\r\n      if (isMount.current) {\r\n        setLocation(arg.location);\r\n      }\r\n    });\r\n\r\n    if (pendingLocation.current) {\r\n      setLocation(pendingLocation.current);\r\n    }\r\n\r\n    return () => {\r\n      if (unListen.current) {\r\n        isMount.current = false;\r\n        unListen.current();\r\n        unListen.current = null;\r\n        pendingLocation.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const initContextValue: RouterContextValue = useMemo(\r\n    () => ({\r\n      history: history,\r\n      location: location,\r\n      match: { isExact: location.pathname === '/', params: {}, path: '/', score: [], url: '/' },\r\n    }),\r\n    [location],\r\n  );\r\n\r\n  return <RouterContext.Provider value={initContextValue} children={children} />;\r\n}\r\n\r\nexport default Router;\r\n","import { useLayoutEffect, useRef } from '@cloudsop/horizon';\r\n\r\nexport type LifeCycleProps = {\r\n  onMount?: () => void;\r\n  onUpdate?: (prevProps?: LifeCycleProps) => void;\r\n  onUnmount?: () => void;\r\n  data?: any;\r\n};\r\n\r\nexport function LifeCycle(props: LifeCycleProps) {\r\n  // 使用ref保存上一次的props，防止重新渲染\r\n  const prevProps = useRef<LifeCycleProps | null>(null);\r\n  const isMount = useRef(false);\r\n\r\n  const { onMount, onUpdate, onUnmount } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    // 首次挂载 模拟componentDidMount\r\n    if (!isMount.current) {\r\n      isMount.current = true;\r\n      if (onMount) {\r\n        onMount();\r\n      }\r\n    } else {\r\n      // 不是首次渲染 模拟componentDidUpdate\r\n      if (onUpdate) {\r\n        prevProps.current ? onUpdate(prevProps.current) : onUpdate();\r\n      }\r\n    }\r\n    prevProps.current = props;\r\n  });\r\n\r\n  // 模拟componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      if (onUnmount) {\r\n        onUnmount();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, MouseEvent, ComponentType, Ref } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Location } from './index';\r\nimport { createPath, parsePath } from '../history/utils';\r\nimport { Path } from '../history/types';\r\n\r\nexport type LinkProps = {\r\n  component?: ComponentType<any>;\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  replace?: boolean;\r\n  tag?: string;\r\n  /**\r\n   * @deprecated\r\n   * React16以后不再需要该属性\r\n   **/\r\n  innerRef?: Ref<HTMLAnchorElement>;\r\n} & { [key: string]: any };\r\n\r\nconst isModifiedEvent = (event: MouseEvent) => {\r\n  return event.metaKey || event.altKey || event.ctrlKey || event.shiftKey;\r\n};\r\n\r\nconst checkTarget = (target?: any) => {\r\n  return !target || target === '_self';\r\n};\r\n\r\n\r\nfunction Link<P extends LinkProps>(props: P) {\r\n  const { to, replace, component, onClick, target, ...other } = props;\r\n\r\n  const tag = props.tag || 'a';\r\n\r\n  const context = useContext(RouterContext);\r\n  const history = context.history;\r\n\r\n  let location = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  let state: any;\r\n  let path: Partial<Path>;\r\n  if (typeof location === 'string') {\r\n    path = parsePath(location);\r\n  } else {\r\n    const { pathname, hash, search } = location;\r\n    path = { pathname, hash, search };\r\n    state = location.state;\r\n  }\r\n  const href = history.createHref(path);\r\n\r\n  const linkClickEvent = (event: MouseEvent<HTMLAnchorElement>) => {\r\n    try {\r\n      if (onClick) {\r\n        onClick(event);\r\n      }\r\n    } catch (e) {\r\n      event.preventDefault();\r\n      throw e;\r\n    }\r\n\r\n    if (!event.defaultPrevented && event.button === 0 && checkTarget(target) && !isModifiedEvent(event)) {\r\n      // 不是相同的路径执行push操作，是相同的路径执行replace\r\n      const isSamePath = createPath(context.location) === createPath(path);\r\n      const navigate = replace || isSamePath ? history.replace : history.push;\r\n      event.preventDefault();\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  const linkProps = { href: href, onClick: linkClickEvent, ...other };\r\n  return Inula.createElement(tag, linkProps);\r\n}\r\n\r\nexport default Link;","import { Location } from '../router';\r\nimport { Action } from '../history/types';\r\n\r\n// 获取redux state中的值\r\nexport function getIn(state: Record<string, any>, path: string[]): any {\r\n  if (!state) {\r\n    return state;\r\n  }\r\n  const length = path.length;\r\n  if (!length) {\r\n    return undefined;\r\n  }\r\n  let res = state;\r\n  for (let i = 0; i < length && !!res; ++i) {\r\n    res = res[path[i]];\r\n  }\r\n  return res;\r\n}\r\n\r\n// 从store的state中获取Router、Location、Action、Hash等信息\r\nconst stateReader = (storeType: string) => {\r\n  const isRouter = (value: unknown) => {\r\n    return value !== null && typeof value === 'object' && !!getIn(value, ['location']) && !!getIn(value, ['action']);\r\n  };\r\n\r\n  const getRouter = (state: any) => {\r\n    const router = getIn(state, ['router']);\r\n    if (!isRouter(router)) {\r\n      throw new Error(`Could not find router reducer in ${storeType} store, it must be mounted under \"router\"`);\r\n    }\r\n    return router!;\r\n  };\r\n\r\n  const getLocation = <S>(state: any): Partial<Location<S>> => getIn(getRouter(state), ['location']);\r\n  const getAction = (state: any): Action => getIn(getRouter(state), ['action']);\r\n  const getSearch = (state: any): string => getIn(getRouter(state), ['location', 'search']);\r\n  const getHash = (state: any): string => getIn(getRouter(state), ['location', 'hash']);\r\n\r\n  return {\r\n    getHash,\r\n    getAction,\r\n    getSearch,\r\n    getRouter,\r\n    getLocation,\r\n  };\r\n};\r\n\r\nexport default stateReader","import Inula from '@cloudsop/horizon';\r\nimport { useLayoutEffect, useRef, reduxAdapter, InulaNode } from '@cloudsop/horizon';\r\nimport { connect, ReactReduxContext } from 'react-redux';\r\nimport type { Store } from 'redux';\r\nimport { History, Location, Router } from '../router';\r\nimport { Action, DefaultStateType, Navigation } from '../history/types';\r\nimport { ActionMessage, onLocationChanged } from './actions';\r\nimport stateReader from './reduxUtils';\r\n\r\ntype StoreType = 'InulaXCompat' | 'Redux';\r\n\r\ntype ConnectedRouter<S> = {\r\n  store: Store;\r\n  history: History<S>;\r\n  basename: string;\r\n  children?: (() => InulaNode) | InulaNode;\r\n  onLocationChanged: (location: Location<S>, action: Action, isFirstRendering: boolean) => ActionMessage;\r\n  noInitialPop: boolean;\r\n  omitRouter: boolean;\r\n  storeType: StoreType;\r\n};\r\n\r\nconst { connect: hConnect } = reduxAdapter;\r\n\r\nfunction ConnectedRouterWithoutMemo<S>(props: ConnectedRouter<S>) {\r\n  const { store, history, onLocationChanged, omitRouter, children, storeType } = props;\r\n  const { getLocation } = stateReader(storeType);\r\n\r\n  // 监听store变化\r\n  const unsubscribe = useRef<null | (() => void)>(\r\n    store.subscribe(() => {\r\n      // 获取redux State中的location信息\r\n      const {\r\n        pathname: pathnameInStore,\r\n        search: searchInStore,\r\n        hash: hashInStore,\r\n        state: stateInStore,\r\n      } = getLocation<S>(store.getState());\r\n\r\n      // 获取当前history对象中的location信息\r\n      const {\r\n        pathname: pathnameInHistory,\r\n        search: searchInHistory,\r\n        hash: hashInHistory,\r\n        state: stateInHistory,\r\n      } = history.location;\r\n\r\n      // 两个location不一致 执行跳转\r\n      if (\r\n        history.action === 'PUSH' &&\r\n        (pathnameInHistory !== pathnameInStore ||\r\n          searchInHistory !== searchInStore ||\r\n          hashInHistory !== hashInStore ||\r\n          stateInHistory !== stateInStore)\r\n      ) {\r\n        history.push(\r\n          {\r\n            pathname: pathnameInStore,\r\n            search: searchInStore,\r\n            hash: hashInStore,\r\n          },\r\n          stateInStore,\r\n        );\r\n      }\r\n    }),\r\n  );\r\n\r\n  const handleLocationChange = (args: Navigation<S>, isFirstRendering: boolean = false) => {\r\n    const { location, action } = args;\r\n    onLocationChanged(location, action, isFirstRendering);\r\n  };\r\n\r\n  // 监听history更新\r\n  const unListen = useRef<null | (() => void)>(history.listen(handleLocationChange));\r\n\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      unListen.current && unListen.current();\r\n      unsubscribe.current && unsubscribe.current();\r\n    };\r\n  }, []);\r\n\r\n  if (!props.noInitialPop) {\r\n    // 传递初始时位置信息，isFirstRendering设为true防止重复渲染\r\n    handleLocationChange({ location: history.location, action: history.action }, true);\r\n  }\r\n\r\n  if (omitRouter) {\r\n    return <>{children}</>;\r\n  }\r\n  let childrenNode: InulaNode;\r\n  if (typeof children === 'function') {\r\n    childrenNode = children();\r\n  } else {\r\n    childrenNode = children;\r\n  }\r\n\r\n  return <Router history={history}>{childrenNode}</Router>;\r\n}\r\n\r\nfunction getConnectedRouter<S = DefaultStateType>(type: StoreType) {\r\n  const mapDispatchToProps = (dispatch: any) => ({\r\n    onLocationChanged: (location: Location, action: Action, isFirstRendering: boolean) =>\r\n      dispatch(onLocationChanged(location, action, isFirstRendering)),\r\n  });\r\n  const ConnectedRouter = Inula.memo(ConnectedRouterWithoutMemo<S>);\r\n\r\n  const ConnectedRouterWithContext = (props: any) => {\r\n    const Context = props.context || ReactReduxContext;\r\n\r\n    return (\r\n      <Context.Consumer>\r\n        {({ store }: any) => <ConnectedRouter store={store} storeType={type} {...props} />}\r\n      </Context.Consumer>\r\n    );\r\n  };\r\n\r\n  const ConnectedHRouterWithContext = (props: any) => {\r\n    const { store, ...rest } = props;\r\n    return <ConnectedRouter store={store} storeType={type} {...rest} />;\r\n  };\r\n\r\n  // 针对不同的Store类型，使用对应的connect函数\r\n  if (type === 'InulaXCompat') {\r\n    return hConnect(null as any, mapDispatchToProps)(ConnectedHRouterWithContext as any);\r\n  }\r\n  if (type === 'Redux') {\r\n    return connect(null, mapDispatchToProps)(ConnectedRouterWithContext);\r\n  } else {\r\n    throw new Error('Invalid store type');\r\n  }\r\n}\r\n\r\nexport { getConnectedRouter };\r\n","import { createConnectRouter } from './reducer';\r\n\r\nexport { getConnectedRouter } from './connectedRouter';\r\nexport const connectRouter = createConnectRouter();\r\nexport { routerMiddleware } from './dispatch';\r\nexport { push, go, replace } from './actions';","import { Location as HLocation } from '../history/types';\r\nimport { getConnectedRouter } from '../connect-router';\r\n\r\ntype Location<S = unknown> = Omit<HLocation<S>, 'key'>;\r\n\r\n// ============================ history ============================\r\n\r\nexport type { Location };\r\nexport type { History } from '../history/types';\r\n\r\nexport { createBrowserHistory } from '../history/browerHistory';\r\nexport { createHashHistory } from '../history/hashHistory';\r\n\r\nexport { default as __RouterContext } from './context';\r\n\r\n// ============================ URL parser ============================\r\n\r\nexport { matchPath, generatePath } from '../matcher/parser';\r\n\r\n// ============================ Router Hooks ============================\r\n\r\nexport { useHistory, useLocation, useParams, useRouteMatch } from './hooks';\r\n\r\n// ============================ Router function component ============================\r\n\r\nexport { default as Route } from './Route';\r\nexport { default as Router } from './Router';\r\nexport { default as Switch } from './Switch';\r\nexport { default as Redirect } from './Redirect';\r\nexport { default as Prompt } from './Prompt';\r\nexport { default as withRouter } from './withRouter';\r\nexport { default as HashRouter } from './HashRouter';\r\nexport { default as BrowserRouter } from './BrowserRouter';\r\nexport { default as Link } from './Link';\r\nexport { default as NavLink } from './NavLink';\r\n\r\n// ============================ Router Types ============================\r\n\r\nexport type { RouteComponentProps, RouteChildrenProps, RouteProps } from './Route';\r\n\r\n// ============================ Connect-router ============================\r\n\r\nexport { connectRouter, routerMiddleware, push, go, replace } from '../connect-router';\r\nexport const ConnectedRouter = getConnectedRouter('Redux');\r\nexport const ConnectedHRouter = getConnectedRouter('InulaXCompat');\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useRef, InulaNode } from '@cloudsop/horizon';\r\nimport Router from './Router';\r\nimport { createBrowserHistory } from '../history/browerHistory';\r\nimport { ConfirmationFunc, History } from '../history/types';\r\n\r\nexport type BaseRouterProps = {\r\n  basename: string;\r\n  getUserConfirmation: ConfirmationFunc;\r\n  children?: InulaNode;\r\n};\r\n\r\nexport type BrowserRouterProps = BaseRouterProps & {\r\n  forceRefresh: boolean;\r\n};\r\n\r\nfunction BrowserRouter<P extends Partial<BrowserRouterProps>>(props: P) {\r\n  // 使用Ref持有History对象，防止重复渲染\r\n  let historyRef = useRef<History>();\r\n\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createBrowserHistory({\r\n      basename: props.basename,\r\n      forceRefresh: props.forceRefresh,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default BrowserRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useRef } from '@cloudsop/horizon';\r\nimport { History } from '../history/types';\r\nimport { BaseRouterProps } from './BrowserRouter';\r\nimport { createHashHistory, urlHashType } from '../history/hashHistory';\r\nimport Router from './Router';\r\n\r\nexport type HashRouterProps = BaseRouterProps & {\r\n  hashType: urlHashType;\r\n};\r\n\r\nfunction HashRouter<P extends Partial<HashRouterProps>>(props: P) {\r\n  let historyRef = useRef<History>();\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createHashHistory({\r\n      basename: props.basename,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n      hashType: props.hashType,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default HashRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport type { LinkProps } from './Link';\r\nimport Link from './Link';\r\nimport { Location, matchPath } from './index';\r\nimport { Matched } from '../matcher/parser';\r\nimport Context from './context';\r\nimport { parsePath } from '../history/utils';\r\n\r\ntype NavLinkProps = {\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  isActive?<P extends { [K in keyof P]?: string }>(match: Matched<P> | null, location: Location): boolean;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n  sensitive?: boolean;\r\n  className?: string | ((isActive: boolean) => string);\r\n  activeClassName?: string;\r\n  // compat react-router NavLink props type\r\n  [key: string]: any;\r\n} & Omit<LinkProps, 'className'>;\r\n\r\ntype Page = 'page';\r\n\r\nfunction NavLink<P extends NavLinkProps>(props: P) {\r\n  const { to, isActive, exact, strict, sensitive, className, activeClassName, ...rest } = props;\r\n  const context = useContext(Context);\r\n\r\n  const toLocation = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  const { pathname } = typeof toLocation === 'string' ? parsePath(toLocation) : toLocation;\r\n\r\n  const match = pathname\r\n    ? matchPath(context.location.pathname, pathname, {\r\n        exact: exact,\r\n        strictMode: strict,\r\n        caseSensitive: sensitive,\r\n      })\r\n    : null;\r\n\r\n  const isLinkActive = !!(isActive ? isActive(match, context.location) : match);\r\n\r\n  let classNames = typeof className === 'function' ? className(isLinkActive) : className;\r\n  if (isLinkActive) {\r\n    classNames = [activeClassName, classNames].filter(Boolean).join(' ');\r\n  }\r\n\r\n  const page: Page = 'page';\r\n  const otherProps = {\r\n    className: classNames,\r\n    'aria-current': isLinkActive ? page : undefined,\r\n    ...rest,\r\n  };\r\n\r\n  return <Link to={to} {...otherProps} />;\r\n}\r\n\r\nexport default NavLink;\r\n","import Inula, { useRef } from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Location } from './index';\r\nimport { Action } from '../history/types';\r\nimport RouterContext from './context';\r\n\r\ntype PromptProps = {\r\n  message?: string | ((location: Partial<Location>, action: Action) => string | boolean);\r\n  when?: boolean | ((location: Partial<Location>) => boolean);\r\n};\r\n\r\nfunction Prompt<P extends PromptProps>(props: P) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { message, when = true } = props;\r\n\r\n  if ((typeof when === 'function' && when(context.location) === false) || !when) {\r\n    return null;\r\n  }\r\n\r\n  const navigate = context.history.block;\r\n\r\n  const release = useRef<(() => void) | null>(null);\r\n\r\n  const onMountFunc = () => {\r\n    release.current = message ? navigate(message) : null;\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    if (prevProps && prevProps.data !== message) {\r\n      if (release.current) {\r\n        release.current();\r\n      }\r\n      release.current = message ? navigate(message) : null;\r\n    }\r\n  };\r\n\r\n  const onUnmountFunc = () => {\r\n    if (release.current) {\r\n      release.current();\r\n    }\r\n    release.current = null;\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} onUnmount={onUnmountFunc} data={message} />;\r\n}\r\n\r\nexport default Prompt;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Matched, createPathParser } from '../matcher/parser';\r\nimport { addHeadSlash, isLocationEqual, parsePath } from '../history/utils';\r\nimport { Location } from './index';\r\n\r\nexport type RedirectProps = {\r\n  to: string | Partial<Location>;\r\n  push?: boolean;\r\n  path?: string;\r\n  from?: string;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n\r\n  // 由Switch计算得到\r\n  readonly computed?: Matched | null;\r\n};\r\n\r\nfunction Redirect<P extends RedirectProps>(props: P) {\r\n  const { to, push = false, computed } = props;\r\n\r\n  const context = useContext(RouterContext);\r\n  const { history } = context;\r\n\r\n  const calcLocation = (): Partial<Location> => {\r\n    if (computed) {\r\n      if (typeof to === 'string') {\r\n        const parser = createPathParser(to);\r\n        const target = parser.compile(computed.params);\r\n        return parsePath(target);\r\n      } else {\r\n        const pathname = to.pathname ? addHeadSlash(to.pathname) : '/';\r\n        const parser = createPathParser(pathname);\r\n        const target = parser.compile(computed.params);\r\n        return { ...to, pathname: target };\r\n      }\r\n    }\r\n    return typeof to === 'string' ? parsePath(to) : to;\r\n  };\r\n\r\n  const navigate = push ? history.push : history.replace;\r\n  const { state, ...path } = calcLocation();\r\n\r\n  const onMountFunc = () => {\r\n    navigate(path, state);\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    // 如果当前页面与重定向前页面不一致，执行跳转\r\n    const prevPath = prevProps?.data as Location;\r\n    if (!isLocationEqual(prevPath, path)) {\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} data={path} />;\r\n}\r\n\r\nexport default Redirect;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { type Matched, matchPath } from '../matcher/parser';\r\nimport { useContext, Children, createElement, InulaNode, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport type { GetURLParams } from '../matcher/types';\r\n\r\nexport type RouteComponentProps<P extends Record<string, any> = {}, S = unknown> = RouteChildrenProps<P, S>;\r\n\r\nexport type RouteChildrenProps<P extends Record<string, any> = {}, S = unknown> = {\r\n  history: History<S>;\r\n  location: Location<S>;\r\n  match: Matched<P> | null;\r\n};\r\n\r\nexport type RouteProps<P extends Record<string, any> = {}, Path extends string = string> = {\r\n  location?: Location;\r\n  component?: ComponentType<RouteComponentProps<P>> | ComponentType<any> | undefined;\r\n  children?: ((props: RouteChildrenProps<P>) => InulaNode) | InulaNode;\r\n  render?: (props: RouteComponentProps<P>) => InulaNode;\r\n  path?: Path | Path[];\r\n  exact?: boolean;\r\n  sensitive?: boolean;\r\n  strict?: boolean;\r\n  computed?: Matched<P>;\r\n};\r\n\r\nfunction Route<Path extends string, P extends Record<string, any> = GetURLParams<Path>>(props: RouteProps<P, Path>) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { computed, location, path, component, render, strict, sensitive, exact } = props;\r\n  let { children } = props;\r\n  let match: Matched<P> | null;\r\n\r\n  const routeLocation = location || context.location;\r\n  if (computed) {\r\n    match = computed;\r\n  } else if (path) {\r\n    match = matchPath<P>(routeLocation.pathname, path, {\r\n      strictMode: strict,\r\n      caseSensitive: sensitive,\r\n      exact: exact,\r\n    });\r\n  } else {\r\n    match = context.match;\r\n  }\r\n  const newProps = { ...context, location: routeLocation, match: match };\r\n\r\n  if (Array.isArray(children) && Children.count(children) === 0) {\r\n    children = null;\r\n  }\r\n\r\n  /**\r\n   * 按顺序获取需要渲染的组件\r\n   * 1.children\r\n   * 2.component\r\n   * 3.render\r\n   * 都没有匹配到返回Null\r\n   */\r\n  const getChildren = (): InulaNode | null => {\r\n    // 如果 match 存在\r\n    if (newProps.match) {\r\n      if (children) {\r\n        if (typeof children === 'function') {\r\n          return children(newProps);\r\n        }\r\n        return children;\r\n      }\r\n\r\n      if (component) {\r\n        return createElement(component, newProps);\r\n      } else if (render) {\r\n        return render(newProps);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      // match为null\r\n      if (typeof children === 'function') {\r\n        return children(newProps);\r\n      }\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return <RouterContext.Provider value={newProps}>{getChildren()}</RouterContext.Provider>;\r\n}\r\n\r\nexport default Route;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, Children, isValidElement, cloneElement, InulaNode, InulaElement } from '@cloudsop/horizon';\r\n\r\nimport { Location } from './index';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath } from '../matcher/parser';\r\nimport type { RouteProps } from './Route';\r\nimport type { RedirectProps } from './Redirect';\r\n\r\nexport type SwitchProps = {\r\n  location?: Location;\r\n  children?: InulaNode;\r\n};\r\n\r\ntype MergeType<T1, T2> = { [K in keyof (T1 & T2)]: K extends keyof T1 ? T1[K] : K extends keyof T2 ? T2[K] : never };\r\n\r\nfunction Switch<P extends SwitchProps>(props: P): InulaElement | null {\r\n  const context = useContext(RouterContext);\r\n  const location = props.location || context.location;\r\n\r\n  let element: InulaElement | null = null;\r\n  let match: Matched | null = null;\r\n\r\n  // 使用forEach不会给React.ReactNode增加key属性,防止重新渲染\r\n  Children.forEach(props.children, node => {\r\n    if (match === null && isValidElement(node)) {\r\n      element = node;\r\n\r\n      const elementProps: MergeType<RouteProps, RedirectProps> = node.props;\r\n      const target = elementProps.path || elementProps.from;\r\n\r\n      // 更新匹配状态，一旦匹配到停止遍历\r\n      if (target) {\r\n        match = matchPath(location.pathname, target, {\r\n          strictMode: elementProps.strict,\r\n          caseSensitive: elementProps.sensitive,\r\n          exact: elementProps.exact,\r\n        });\r\n      } else {\r\n        match = context.match;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (match && element) {\r\n    // 使用cloneElement复制已有组件并更新其Props\r\n    return cloneElement(element, { location: location, computed: match });\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Switch;\r\n","import { ActionMessage, ActionName } from './actions';\r\nimport { History } from '../history/types';\r\n\r\n// 定义connect-router对应的redux dispatch函数\r\nexport function routerMiddleware(history: History) {\r\n  return function(_: any) {\r\n    return function(next: any) {\r\n      return function(action: ActionMessage) {\r\n        if (action.type !== ActionName.CALL_HISTORY_METHOD) {\r\n          return next(action);\r\n        }\r\n        const { payload: { method, args } } = action;\r\n        if (method in history) {\r\n          (history as any)[method](...args);\r\n        }\r\n      };\r\n    };\r\n  };\r\n}\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\n\r\nfunction withRouter<C extends ComponentType>(Component: C) {\r\n  return function (props: any) {\r\n    const { wrappedComponentRef, ...rest } = props;\r\n    const context = useContext(RouterContext);\r\n\r\n    return <Component {...rest} {...context} ref={wrappedComponentRef} />;\r\n  };\r\n}\r\n\r\nexport default withRouter;\r\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ActionName","updateLocation","method","_len","args","Array","_key","type","CALL_HISTORY_METHOD","payload","push","replace","go","injectQueryParams","location","query","queryString","search","queryObject","URLSearchParams","forEach","value","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","getDefaultConfirmation","message","callBack","window","confirm","isSupportHistory","document","createElement","history","isSupportsPopState","navigator","userAgent","Action","EventType","PopDirection","createPath","path","hash","pathname","startsWith","parsePath","url","parsedPath","hashIdx","substring","searchIdx","createLocation","current","to","state","end","urlObj","getRandKey","Math","random","toString","from","fromParts","split","toParts","lastToPart","urlPart","index","toIndex","slice","join","parseRelativePath","isLocationEqual","p1","p2","addHeadSlash","stripHeadSlash","normalizeSlash","tempPath","stripBasename","prefix","toLowerCase","includes","charAt","hasBasename","createMemoryRecord","initVal","fn","visitedRecord","getDelta","toIdx","lastIndexOf","fromIdx","addRecord","newRecord","action","curVal","NewVal","prevIdx","newVisitedRecord","_typeof","o","Symbol","iterator","constructor","toPropertyKey","t","r","e","toPrimitive","TypeError","String","Number","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","TransitionManager","instance","Constructor","_classCallCheck","prompt","protoProps","staticProps","_this","userConfirmationFunc","result","warning","condition","console","warn","getBaseHistory","undefined","transitionManager","popActionListener","listenerCount","supportPopState","listeners","unListeners","browserHistory","pauseTrigger","setupListener","count","addEventListener","PopState","HashChange","removeEventListener","isBlocked","step","addListener","listener","isActive","trigger","information","cancelListener","filter","block","unblock","setPrompt","destroy","_step","_iterator","_createForOfIteratorHelper","s","n","done","unListen","err","f","getUpdateStateFunc","historyProps","nextState","originPath","delta","commonArgs","popArgs","direction","forward","back","pop","createBrowserHistory","options","supportHistory","isSupportPopState","_options$forceRefresh","forceRefresh","_options$getUserConfi","getUserConfirmation","basename","initLocation","getLocation","getHistoryState","recordOperator","l","_getBaseHistory","event","historyState","isEventPopState","forceJump","updateState","callback","isJump","confirmJumpTo","handlePopState","locationHandler","goBack","goForward","listen","href","createHref","pushState","replaceState","_window$location","_ref","baseHandler","stripHash","idx","getHashContent","createHashHistory","option","_option$hashType","hashType","_option$getUserConfir","pathDecoder","pathEncoder","startLocation","encodedLocation","hashPath","memRecords","forceNextPop","ignorePath","encodedPath","prevLocation","tag","querySelector","getAttribute","RouterContext","name","defaultValue","context","createContext","displayName","TokenType","escapeStr","str","validChar","MatchScore","defaultOption","caseSensitive","strictMode","exact","REGEX_CHARS_RE","BASE_PARAM_PATTERN","DefaultDelimiter","createPathParser","_option$caseSensitive","_option$strictMode","_option$exact","pattern","scores","tokens","urlPath","cleanPath","Error","getLiteral","test","skipChar","curChar","prevChar","Static","Pattern","RBracket","LBracket","WildCard","Param","Delimiter","lexer","onlyHasWildCard","tokenCount","lastToken","asteriskCount","lookToNextDelimiter","currentIdx","hasOptionalParam","tokenIdx","token","nextToken","static","paramRegexp","param","wildcard","placeholder","regexp","RegExp","score","compile","params","wildCard","parse","reMatch","match","matchedPath","parseScore","_params$","isArray","splice","concat","fill","isExact","matchPath","_step2","matchedResults","_iterator2","matched","sort","a","b","score1","score2","score1Length","score2Length","min","scoreCompare","useLocation","useContext","Router","_props$children","children","_useState","useState","setLocation","pendingLocation","useRef","isMount","arg","useLayoutEffect","initContextValue","useMemo","_jsx","jsx","Provider","LifeCycle","prevProps","onMount","onUpdate","onUnmount","Link","component","onClick","other","_excluded","linkProps","preventDefault","defaultPrevented","button","checkTarget","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","isSamePath","navigate","Inula","getIn","res","stateReader","storeType","getRouter","router","getHash","getAction","getSearch","hConnect","reduxAdapter","connect","ConnectedRouterWithoutMemo","childrenNode","store","onLocationChanged","omitRouter","unsubscribe","subscribe","_getLocation","getState","pathnameInStore","searchInStore","hashInStore","stateInStore","_history$location","pathnameInHistory","searchInHistory","hashInHistory","stateInHistory","handleLocationChange","isFirstRendering","noInitialPop","_Fragment","getConnectedRouter","mapDispatchToProps","dispatch","LOCATION_CHANGE","ConnectedRouter","memo","rest","Context","ReactReduxContext","Consumer","connectRouter","initRouterState","ConnectedHRouter","historyRef","strict","sensitive","className","activeClassName","toLocation","isLinkActive","classNames","Boolean","otherProps","_props$when","when","release","data","_props$push","computed","_calcLocation","calcLocation","render","routeLocation","newProps","Children","element","node","isValidElement","elementProps","cloneElement","_","next","_action$payload","Component","wrappedComponentRef","ref"],"mappings":"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"}