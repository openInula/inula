{"version":3,"file":"router.min.js","sources":["../../src/history/dom.ts","../../src/history/types.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../src/history/utils.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/history/transitionManager.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../src/history/waring.ts","../../src/history/baseHistory.ts","../../src/history/browerHistory.ts","../../src/history/hashHistory.ts","../../src/router/context.tsx","../../src/matcher/types.ts","../../src/matcher/utils.ts","../../src/matcher/lexer.ts","../../src/matcher/parser.ts","../../src/router/hooks.ts","../../src/router/Router.tsx","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/router/lifeCycleHook.ts","../../src/router/Link.tsx","../../src/router/BrowserRouter.tsx","../../src/router/HashRouter.tsx","../../src/router/NavLink.tsx","../../src/router/Prompt.tsx","../../src/router/Redirect.tsx","../../src/router/Route.tsx","../../src/router/Switch.tsx","../../src/router/withRouter.tsx"],"sourcesContent":["export function isBrowser(): boolean {\r\n  return typeof window !== 'undefined' && window.document && typeof window.document.createElement === 'function';\r\n}\r\n\r\nexport function getDefaultConfirmation(message: string, callBack: (result: boolean) => void) {\r\n  callBack(window.confirm(message));\r\n}\r\n\r\n// 判断浏览器是否支持pushState方法，pushState是browserHistory实现的基础\r\nexport function isSupportHistory(): boolean {\r\n  return isBrowser() && window.history && 'pushState' in window.history;\r\n}\r\n\r\n// 判断浏览器是否支持PopState事件\r\nexport function isSupportsPopState(): boolean {\r\n  return window.navigator.userAgent.indexOf('Trident') === -1;\r\n}\r\n","export type BaseOption = {\r\n  basename?: string;\r\n  getUserConfirmation?: ConfirmationFunc;\r\n};\r\n\r\nexport interface HistoryProps<T = unknown> {\r\n  readonly action: Action;\r\n\r\n  readonly location: Location<T>;\r\n\r\n  length: number;\r\n}\r\n\r\nexport interface AgnosticHistory<T = unknown> extends HistoryProps<T> {\r\n  createHref(path: Partial<Path>): string;\r\n\r\n  push(to: To, state?: T): void;\r\n\r\n  replace(to: To, state?: T): void;\r\n\r\n  listen(listener: CommonListener<T>): () => void;\r\n\r\n  // add listener for listen pop action\r\n  addListener(listener: Listener<T>): () => void;\r\n\r\n  // cancel all pop listeners\r\n  destroy(): void;\r\n\r\n  block(prompt: Prompt<T>): () => void;\r\n\r\n  go(index: number): void;\r\n\r\n  goBack(): void;\r\n\r\n  goForward(): void;\r\n}\r\n\r\nexport type History<T = unknown> = Omit<AgnosticHistory<T>, 'addListener' | 'destroy'>;\r\n\r\nexport interface LocationHandler<T> {\r\n  locationHandler?: ((state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: (() => string) | null;\r\n}\r\n\r\nexport interface CreateLocationHandler<T> {\r\n  locationHandler?: ((basename: string) => (state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: ((basename: string) => () => string) | null;\r\n}\r\n\r\nexport enum Action {\r\n  pop = 'POP',\r\n  push = 'PUSH',\r\n  replace = 'REPLACE',\r\n}\r\n\r\nexport enum EventType {\r\n  PopState = 'popstate',\r\n  HashChange = 'hashchange',\r\n}\r\n\r\nexport enum PopDirection {\r\n  back = 'back',\r\n  forward = 'forward',\r\n  unknown = '',\r\n}\r\n\r\nexport type Path = {\r\n  pathname: string;\r\n\r\n  search: string;\r\n\r\n  hash: string;\r\n};\r\n\r\nexport type HistoryState<T> = {\r\n  state?: T;\r\n\r\n  key: string;\r\n};\r\n\r\nexport type DefaultStateType = unknown;\r\n\r\nexport type Location<T = unknown> = Path & HistoryState<T>;\r\n\r\nexport type To = string | Partial<Path>;\r\n\r\nexport interface CommonListener<T = unknown> {\r\n  (navigation: Navigation<T>): void;\r\n}\r\n\r\nexport interface ActionInfo {\r\n  type: Action;\r\n  direction: PopDirection;\r\n  delta: number;\r\n}\r\n\r\nexport interface PopListener {\r\n  (to: string, from: string, information: ActionInfo): void;\r\n}\r\n\r\nexport interface PopNavigation {\r\n  to: string;\r\n  from: string;\r\n  information: ActionInfo;\r\n}\r\n\r\nexport type Listener<S> =\r\n  | {\r\n      type: 'common';\r\n      listener: CommonListener<S>;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      listener: PopListener;\r\n    };\r\n\r\nexport interface Navigation<T = unknown> {\r\n  action: Action;\r\n\r\n  location: Location<T>;\r\n}\r\n\r\nexport type Prompt<S> = string | boolean | null | ((location: Location<S>, action: Action) => void);\r\n\r\nexport type CallBackFunc = (isJump: boolean) => void;\r\n\r\nexport type ConfirmationFunc = (message: string, callBack: CallBackFunc) => void;\r\n\r\nexport interface TManager<S> {\r\n  setPrompt(next: Prompt<S>): () => void;\r\n\r\n  confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ): void;\r\n}\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { Action, Location, Path, To } from './types';\r\n\r\nexport function createPath(path: Partial<Path>): string {\r\n  const { search, hash } = path;\r\n  let pathname = path.pathname || '/';\r\n  if (search && search !== '?') {\r\n    pathname += search.startsWith('?') ? search : '?' + search;\r\n  }\r\n  if (hash && hash !== '#') {\r\n    pathname += hash.startsWith('#') ? hash : '#' + hash;\r\n  }\r\n  return pathname;\r\n}\r\n\r\nexport function parsePath(url: string): Partial<Path> {\r\n  let pathname = url || '/';\r\n  const parsedPath: Partial<Path> = {\r\n    search: '',\r\n    hash: '',\r\n  };\r\n\r\n  const hashIdx = url.indexOf('#');\r\n  if (hashIdx > -1) {\r\n    const hash = url.substring(hashIdx);\r\n    parsedPath.hash = hash === '#' ? '' : hash;\r\n    pathname = pathname.substring(0, hashIdx);\r\n  }\r\n\r\n  const searchIdx = url.indexOf('?');\r\n  if (searchIdx > -1) {\r\n    const search = url.substring(searchIdx);\r\n    parsedPath.search = search === '?' ? '' : search;\r\n    pathname = pathname.substring(0, searchIdx);\r\n  }\r\n  parsedPath.pathname = pathname;\r\n  return parsedPath;\r\n}\r\n\r\nexport function createLocation<S>(current: string | Location, to: To, state?: S, key?: string): Readonly<Location<S>> {\r\n  const pathname = typeof current === 'string' ? current : current.pathname;\r\n  const urlObj = typeof to === 'string' ? parsePath(to) : to;\r\n  // 随机key长度取6\r\n  const getRandKey = genRandomKey(6);\r\n  const location = {\r\n    pathname: pathname,\r\n    search: '',\r\n    hash: '',\r\n    state: state,\r\n    key: typeof key === 'string' ? key : getRandKey(),\r\n    ...urlObj,\r\n  };\r\n  if (!location.pathname) {\r\n    location.pathname = pathname ? pathname : '/';\r\n  } else if (!location.pathname.startsWith('/')) {\r\n    location.pathname = parseRelativePath(location.pathname, pathname);\r\n  }\r\n  if (location.search && location.search[0] !== '?') {\r\n    location.search = '?' + location.search;\r\n  }\r\n  if (location.hash && location.hash[0] !== '#') {\r\n    location.hash = '#' + location.hash;\r\n  }\r\n  return location;\r\n}\r\n\r\nexport function isLocationEqual(p1: Partial<Path>, p2: Partial<Path>) {\r\n  return p1.pathname === p2.pathname && p1.search === p2.search && p1.hash === p2.hash;\r\n}\r\n\r\nexport function addHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path;\r\n  }\r\n  return '/' + path;\r\n}\r\n\r\nexport function stripHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path.substring(1);\r\n  }\r\n  return path;\r\n}\r\n\r\nexport function normalizeSlash(path: string): string {\r\n  const tempPath = addHeadSlash(path);\r\n  if (tempPath[tempPath.length - 1] === '/') {\r\n    return tempPath.substring(0, tempPath.length - 1);\r\n  }\r\n  return tempPath;\r\n}\r\n\r\nexport function hasBasename(path: string, prefix: string): boolean {\r\n  return (\r\n    path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && ['/', '?', '#', ''].includes(path.charAt(prefix.length))\r\n  );\r\n}\r\n\r\nexport function stripBasename(path: string, prefix: string): string {\r\n  return hasBasename(path, prefix) ? path.substring(prefix.length) : path;\r\n}\r\n\r\n// 使用随机生成的Key记录被访问过的URL，当Block被被触发时利用delta值跳转到之前的页面\r\nexport function createMemoryRecord<T, S>(initVal: S, fn: (arg: S) => T) {\r\n  let visitedRecord: T[] = [fn(initVal)];\r\n\r\n  function getDelta(to: S, from: S): number {\r\n    let toIdx = visitedRecord.lastIndexOf(fn(to));\r\n    if (toIdx === -1) {\r\n      toIdx = 0;\r\n    }\r\n    let fromIdx = visitedRecord.lastIndexOf(fn(from));\r\n    if (fromIdx === -1) {\r\n      fromIdx = 0;\r\n    }\r\n    return toIdx - fromIdx;\r\n  }\r\n\r\n  function addRecord(current: S, newRecord: S, action: Action) {\r\n    const curVal = fn(current);\r\n    const NewVal = fn(newRecord);\r\n    if (action === Action.push) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      const newVisitedRecord = visitedRecord.slice(0, prevIdx + 1);\r\n      newVisitedRecord.push(NewVal);\r\n      visitedRecord = newVisitedRecord;\r\n    }\r\n    if (action === Action.replace) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      if (prevIdx !== -1) {\r\n        visitedRecord[prevIdx] = NewVal;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { getDelta, addRecord };\r\n}\r\n\r\nfunction genRandomKey(length: number): () => string {\r\n  const end = length + 2;\r\n  return () => {\r\n    return Math.random().toString(18).substring(2, end);\r\n  };\r\n}\r\n\r\nexport function parseRelativePath(to: string, from: string) {\r\n  if (to.startsWith('/')) {\r\n    return to;\r\n  }\r\n  const fromParts = from.split('/');\r\n  const toParts = to.split('/');\r\n  const lastToPart = toParts[toParts.length - 1];\r\n  if (lastToPart === '..' || lastToPart === '.') {\r\n    toParts.push('');\r\n  }\r\n  let index = fromParts.length - 1;\r\n  let toIndex = 0;\r\n  let urlPart: string;\r\n\r\n  while (toIndex < toParts.length) {\r\n    urlPart = toParts[toIndex];\r\n    if (urlPart === '.') {\r\n      continue;\r\n    }\r\n    if (urlPart === '..') {\r\n      if (index > 1) {\r\n        index--;\r\n      }\r\n      toIndex++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return fromParts.slice(0, index).join('/') + '/' + toParts.slice(toIndex).join('/');\r\n}\r\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import type { Action, CallBackFunc, ConfirmationFunc, Location, Prompt, TManager } from './types';\r\n\r\nclass TransitionManager<S> implements TManager<S> {\r\n  private prompt: Prompt<S>;\r\n\r\n  constructor() {\r\n    this.prompt = null;\r\n  }\r\n\r\n  public setPrompt(prompt: Prompt<S>): () => void {\r\n    this.prompt = prompt;\r\n\r\n    // 清除Prompt\r\n    return () => {\r\n      if (this.prompt === prompt) {\r\n        this.prompt = null;\r\n      }\r\n    };\r\n  }\r\n\r\n  public confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ) {\r\n    if (this.prompt !== null) {\r\n      const result = typeof this.prompt === 'function' ? this.prompt(location, action) : this.prompt;\r\n      if (typeof result === 'string') {\r\n        typeof userConfirmationFunc === 'function' ? userConfirmationFunc(result, callBack) : callBack(true);\r\n      } else {\r\n        callBack(result !== false);\r\n      }\r\n    } else {\r\n      callBack(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TransitionManager;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function warning(condition: any, message: string) {\r\n  if (condition) {\r\n    if (console && typeof console.warn === 'function') {\r\n      console.warn(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default warning;","import { Action, EventType, HistoryProps, Listener, Navigation, PopDirection, PopNavigation, Prompt } from './types';\r\nimport transitionManager from './transitionManager';\r\nimport { isSupportsPopState } from './dom';\r\nimport { createPath } from './utils';\r\n\r\ntype Trigger<S> =\r\n  | {\r\n      type: 'common';\r\n      trigger: (arg: Navigation<S>) => void;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      trigger: (arg: PopNavigation) => void;\r\n    };\r\n\r\n// 抽取BrowserHistory和HashHistory中相同的方法\r\nexport function getBaseHistory<S>(\r\n  type: 'browser' | 'hash' = 'browser',\r\n  transitionManager: transitionManager<S>,\r\n  popActionListener: (event: PopStateEvent | HashChangeEvent) => void\r\n) {\r\n  let listenerCount = 0;\r\n  const supportPopState = isSupportsPopState();\r\n  let listeners: Trigger<S>[] = [];\r\n  const unListeners: (() => void)[] = [];\r\n  const browserHistory = window.history;\r\n\r\n  // 标记是否暂停触发type为pop类型的listener\r\n  let pauseTrigger = false;\r\n\r\n  function go(step: number, triggerListener = true) {\r\n    if (triggerListener) {\r\n      pauseTrigger = true;\r\n    }\r\n    browserHistory.go(step);\r\n  }\r\n\r\n  function setupListener(count: number | null) {\r\n    if (count === null) {\r\n      listenerCount = 0;\r\n    } else {\r\n      listenerCount += count;\r\n    }\r\n    if (listenerCount === 1 && count === 1) {\r\n      if (type === 'browser' && supportPopState) {\r\n        addEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        addEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    } else if (listenerCount === 0) {\r\n      if (type === 'browser' && supportPopState) {\r\n        removeEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        removeEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    }\r\n  }\r\n\r\n  function addListener(listener: Listener<S>): () => void {\r\n    let isActive = true;\r\n    const wrapper = (args: Navigation<S> | PopNavigation) => {\r\n      if (isActive) {\r\n        if (listener.type === 'common' && 'action' in args) {\r\n          listener.listener(args);\r\n        } else if (listener.type === 'pop' && 'to' in args) {\r\n          listener.listener(args.to, args.from, args.information);\r\n        }\r\n      }\r\n    };\r\n    const trigger: Trigger<S> = { type: listener.type, trigger: wrapper };\r\n    listeners.push(trigger);\r\n    setupListener(1);\r\n\r\n    const cancelListener = () => {\r\n      isActive = false;\r\n      setupListener(-1);\r\n      listeners = listeners.filter(listener => listener !== trigger);\r\n    };\r\n\r\n    unListeners.push(cancelListener);\r\n    return cancelListener;\r\n  }\r\n\r\n  function destroy() {\r\n    for (const unListen of unListeners) {\r\n      unListen();\r\n    }\r\n    unListeners.length = 0;\r\n    setupListener(null);\r\n  }\r\n\r\n  let isBlocked = false;\r\n\r\n  function block(prompt: Prompt<S> = false): () => void {\r\n    const unblock = transitionManager.setPrompt(prompt);\r\n    if (!isBlocked) {\r\n      setupListener(1);\r\n      isBlocked = true;\r\n    }\r\n    return () => {\r\n      if (isBlocked) {\r\n        isBlocked = false;\r\n        setupListener(-1);\r\n      }\r\n      unblock();\r\n    };\r\n  }\r\n\r\n  function getUpdateStateFunc(historyProps: HistoryProps<S>) {\r\n    return function (nextState: Navigation<S> | undefined) {\r\n      const originPath = createPath(historyProps.location);\r\n      if (nextState) {\r\n        Object.assign(historyProps, nextState);\r\n      }\r\n      const delta = browserHistory.length - historyProps.length;\r\n      historyProps.length = browserHistory.length;\r\n      // 避免location引用相同时setState不触发\r\n      const location = Object.assign({}, historyProps.location);\r\n      const commonArgs = { location: location, action: historyProps.action };\r\n      const popArgs: PopNavigation = {\r\n        to: createPath(location),\r\n        from: originPath,\r\n        information: {\r\n          delta: delta,\r\n          direction: delta > 0 ? PopDirection.forward : PopDirection.back,\r\n          type: Action.pop,\r\n        },\r\n      };\r\n      for (let i = 0; i < listeners.length && !pauseTrigger; i++) {\r\n        const listener = listeners[i];\r\n        if (listener.type === 'common') {\r\n          listener.trigger(commonArgs);\r\n        } else if (listener.type === 'pop' && historyProps.action === Action.pop) {\r\n          // vue history listener only trigger when action is pop\r\n          listener.trigger(popArgs);\r\n        }\r\n      }\r\n      pauseTrigger = false;\r\n    };\r\n  }\r\n\r\n  return { go, addListener, block, destroy, getUpdateStateFunc };\r\n}\r\n","import { getDefaultConfirmation, isSupportHistory, isSupportsPopState } from './dom';\r\nimport {\r\n  Action,\r\n  AgnosticHistory,\r\n  BaseOption,\r\n  CommonListener,\r\n  DefaultStateType,\r\n  EventType,\r\n  History,\r\n  HistoryState,\r\n  Listener,\r\n  Location,\r\n  LocationHandler,\r\n  Path,\r\n  To,\r\n} from './types';\r\nimport { createLocation, createMemoryRecord, createPath, normalizeSlash, stripBasename } from './utils';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type BrowserHistoryOption = {\r\n  /**\r\n   * forceRefresh为True时跳转时会强制刷新页面\r\n   */\r\n  forceRefresh?: boolean;\r\n} & BaseOption;\r\n\r\nexport function createBrowserHistory<S = DefaultStateType>(options: BrowserHistoryOption): History<S>;\r\n/**\r\n * @internal\r\n * @desc this override signature only for internal usage\r\n */\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption\r\n): AgnosticHistory<S>;\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption = {}\r\n): AgnosticHistory<S> {\r\n  const supportHistory = isSupportHistory();\r\n  const isSupportPopState = isSupportsPopState();\r\n  const browserHistory = window.history;\r\n  const { forceRefresh = false, getUserConfirmation = getDefaultConfirmation } = options;\r\n\r\n  const basename = options.basename ? normalizeSlash(options.basename) : '';\r\n\r\n  const initLocation = getLocation(getHistoryState());\r\n\r\n  const recordOperator = createMemoryRecord<string, Location<S>>(initLocation, l => l.key);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory<S>(\r\n    'browser',\r\n    transitionManager,\r\n    handlePop\r\n  );\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(-1),\r\n    listen,\r\n    addListener,\r\n    block,\r\n    push,\r\n    replace,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function getHistoryState() {\r\n    return supportHistory ? window.history.state : {};\r\n  }\r\n\r\n  function getLocation(historyState: Partial<HistoryState<S>>) {\r\n    const { search, hash } = window.location;\r\n    const { key, state } = historyState || {};\r\n    let pathname = window.location.pathname;\r\n    pathname = basename ? stripBasename(pathname, basename) : pathname;\r\n\r\n    return createLocation<S>('', { pathname, search, hash }, state, key);\r\n  }\r\n\r\n  // 拦截页面POP事件后，防止返回到的页面被重复拦截\r\n  let forceJump = false;\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceJump) {\r\n      forceJump = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          // 执行跳转行为\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location, history.location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  const isEventPopState = (event: Event): event is PopStateEvent => {\r\n    return event.type === EventType.PopState;\r\n  };\r\n\r\n  function handlePop(event: PopStateEvent | HashChangeEvent) {\r\n    const historyState = isSupportPopState && isEventPopState(event) ? event.state : getHistoryState();\r\n    const handler = options.locationHandler ? options.locationHandler : getLocation;\r\n    handlePopState(handler(historyState));\r\n  }\r\n\r\n  // 取消页面跳转并恢复到跳转前的页面\r\n  function revertPopState(from: Location<S>, to: Location<S>) {\r\n    const delta = recordOperator.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceJump = true;\r\n    }\r\n  }\r\n\r\n  function createHref(path: Partial<Path>) {\r\n    return (options.baseHandler ? options.baseHandler() : basename) + createPath(path);\r\n  }\r\n\r\n  function push(to: To, state?: S) {\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.href = href;\r\n        } else {\r\n          browserHistory.pushState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.href = href;\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.replace(href);\r\n        } else {\r\n          browserHistory.replaceState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.replace(href);\r\n      }\r\n    });\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { Action, AgnosticHistory, BaseOption, CommonListener, DefaultStateType, Listener, Location, To } from './types';\r\nimport {\r\n  addHeadSlash,\r\n  createLocation,\r\n  createMemoryRecord,\r\n  createPath,\r\n  isLocationEqual,\r\n  normalizeSlash,\r\n  stripBasename,\r\n  stripHeadSlash,\r\n} from './utils';\r\nimport { getDefaultConfirmation } from './dom';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type urlHashType = 'slash' | 'noslash';\r\n\r\ntype HashHistoryOption = {\r\n  hashType?: urlHashType;\r\n} & BaseOption;\r\n\r\n// 获取#前的内容\r\nfunction stripHash(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? path : path.substring(0, idx);\r\n}\r\n\r\n// 获取#后的内容\r\nexport function getHashContent(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? '' : path.substring(idx + 1);\r\n}\r\n\r\nexport function createHashHistory<S = DefaultStateType>(option: HashHistoryOption = {}): AgnosticHistory<S> {\r\n  const browserHistory = window.history;\r\n  const { hashType = 'slash', getUserConfirmation = getDefaultConfirmation } = option;\r\n\r\n  const basename = option.basename ? normalizeSlash(option.basename) : '';\r\n\r\n  const pathDecoder = addHeadSlash;\r\n  const pathEncoder = hashType === 'slash' ? addHeadSlash : stripHeadSlash;\r\n\r\n  const startLocation = getHashContent(window.location.href);\r\n  const encodedLocation = pathEncoder(startLocation);\r\n  // 初始化hash格式不合法时会重定向\r\n  if (startLocation !== encodedLocation) {\r\n    window.location.replace(stripHash(window.location.href) + '#' + encodedLocation);\r\n  }\r\n\r\n  function getLocation() {\r\n    let hashPath = pathDecoder(getHashContent(window.location.hash));\r\n    if (basename) {\r\n      hashPath = stripBasename(hashPath, basename);\r\n    }\r\n\r\n    return createLocation<S>('', hashPath, undefined, 'default');\r\n  }\r\n\r\n  const initLocation = getLocation();\r\n\r\n  const memRecords = createMemoryRecord<string, Location<S>>(initLocation, createPath);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  function createHref(location: Location<S>) {\r\n    const tag = document.querySelector('base');\r\n    const base = tag && tag.getAttribute('href') ? stripHash(window.location.href) : '';\r\n    return base + '#' + pathEncoder(basename + createPath(location));\r\n  }\r\n\r\n  let forceNextPop = false;\r\n  let ignorePath: null | string = null;\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory(\r\n    'hash',\r\n    transitionManager,\r\n    handleHashChange\r\n  );\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(1),\r\n    push,\r\n    replace,\r\n    listen,\r\n    addListener,\r\n    block,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function push(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      // 前后hash不一样才进行跳转\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = encodedPath;\r\n        window.location.hash = encodedPath;\r\n\r\n        memRecords.addRecord(history.location, location, action);\r\n\r\n        updateState({ action, location });\r\n      } else {\r\n        updateState(undefined);\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = path;\r\n        window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n      }\r\n      memRecords.addRecord(history.location, location, action);\r\n      updateState({ action, location });\r\n    });\r\n  }\r\n\r\n  function handleHashChange() {\r\n    const hashPath = getHashContent(window.location.href);\r\n    const encodedPath = pathEncoder(hashPath);\r\n    if (hashPath !== encodedPath) {\r\n      window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n    } else {\r\n      const location = getLocation();\r\n      const prevLocation = history.location;\r\n      if (!forceNextPop && isLocationEqual(location, prevLocation)) {\r\n        return;\r\n      }\r\n      if (ignorePath === createPath(location)) {\r\n        return;\r\n      }\r\n      ignorePath = null;\r\n      handlePopState(location);\r\n    }\r\n  }\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceNextPop) {\r\n      forceNextPop = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  // 在跳转行为被Block后，用History.go()跳转回之前的页面\r\n  function revertPopState(from: Location<S>) {\r\n    const to = history.location;\r\n    const delta = memRecords.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceNextPop = true;\r\n    }\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { createContext } from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { Matched } from '../matcher/parser';\r\n\r\nfunction createNamedContext<T>(name: string, defaultValue: T) {\r\n  const context = createContext<T>(defaultValue);\r\n  context.displayName = name;\r\n  return context;\r\n}\r\n\r\nexport type RouterContextValue = {\r\n  history: History;\r\n  location: Location;\r\n  match: Matched | null;\r\n};\r\n\r\nconst RouterContext = createNamedContext<RouterContextValue>('Router', {} as any);\r\n\r\nexport default RouterContext;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { Matched, Params } from './parser';\r\n\r\nexport type Token = {\r\n  type: TokenType;\r\n  value: string;\r\n};\r\n\r\nexport enum TokenType {\r\n  Delimiter = 'delimiter',\r\n  Static = 'static',\r\n  Param = 'param',\r\n  WildCard = 'wildcard',\r\n  LBracket = '(',\r\n  RBracket = ')',\r\n  Pattern = 'pattern',\r\n}\r\n\r\nexport interface Parser<P> {\r\n  regexp: RegExp;\r\n\r\n  keys: string[];\r\n\r\n  score: number[];\r\n\r\n  parse(url: string): Matched<P> | null;\r\n\r\n  compile(params: Params<P>): string;\r\n}\r\n\r\nexport type ParserOption = {\r\n  // 是否大小写敏感\r\n  caseSensitive?: boolean;\r\n  // 是否启用严格模式\r\n  strictMode?: boolean;\r\n  // 精准匹配 兼容 React-RouterV5\r\n  exact?: boolean;\r\n};\r\n\r\ntype ClearLeading<U extends string> = U extends `/${infer R}` ? ClearLeading<R> : U;\r\ntype ClearTailing<U extends string> = U extends `${infer L}/` ? ClearTailing<L> : U;\r\n\r\ntype ParseParam<Param extends string> = Param extends `:${infer R}`\r\n  ? {\r\n      [K in R]: string;\r\n    }\r\n  : {};\r\n\r\ntype MergeParams<OneParam extends Record<string, any>, OtherParam extends Record<string, any>> = {\r\n  readonly [Key in keyof OneParam | keyof OtherParam]?: string;\r\n};\r\n\r\ntype ParseURLString<Str extends string> = Str extends `${infer Param}/${infer Rest}`\r\n  ? MergeParams<ParseParam<Param>, ParseURLString<ClearLeading<Rest>>>\r\n  : ParseParam<Str>;\r\n\r\n// 解析URL中的动态参数，以实现TypeScript提示功能\r\nexport type GetURLParams<U extends string> = ParseURLString<ClearLeading<ClearTailing<U>>>;\r\n","/**\r\n * @description 将url中的//转换为/\r\n */\r\nexport function cleanPath(path: string): string {\r\n  return path.replace(/\\/+/g, '/');\r\n}\r\n\r\nexport function scoreCompare(score1: number[], score2: number[]): number {\r\n  const score1Length = score1.length;\r\n  const score2Length = score2.length;\r\n  const end = Math.min(score1Length, score2Length);\r\n  for (let i = 0; i < end; i++) {\r\n    const delta = score2[i] - score1[i];\r\n    if (delta !== 0) {\r\n      return delta;\r\n    }\r\n  }\r\n  if (score1Length === score2Length) {\r\n    return 0;\r\n  }\r\n  return score1Length > score2Length ? -1 : 1;\r\n}\r\n\r\n// 把正则表达式的特殊符号加两个反斜杠进行转义\r\nexport function escapeStr(str: string) {\r\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\r\n}\r\n","import { Token, TokenType } from './types';\r\nimport { cleanPath } from './utils';\r\n\r\nconst validChar = /[^/:()*?$^+]/;\r\n\r\n// 对Url模板进行词法解析，解析结果为Tokens\r\nexport function lexer(path: string): Token[] {\r\n  const tokens: Token[] = [];\r\n\r\n  if (!path) {\r\n    return tokens;\r\n  }\r\n\r\n  let urlPath = cleanPath(path);\r\n  if (urlPath !== '*' && !urlPath.startsWith('/')) {\r\n    throw new Error(`Url must start with \"/\".`);\r\n  }\r\n\r\n  const getLiteral = () => {\r\n    let name = '';\r\n    while (i < urlPath.length && validChar.test(urlPath[i])) {\r\n      name += urlPath[i];\r\n      skipChar(1);\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const skipChar = (step: number) => {\r\n    i += step;\r\n  };\r\n\r\n  let i = 0;\r\n  while (i < urlPath.length) {\r\n    const curChar = urlPath[i];\r\n    const prevChar = urlPath[i - 1];\r\n\r\n    if (curChar === '/') {\r\n      tokens.push({ type: TokenType.Delimiter, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // dynamic params (/:a)\r\n    if (prevChar === '/' && curChar === ':') {\r\n      skipChar(1);\r\n      tokens.push({ type: TokenType.Param, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // wildCard params (/:*)\r\n    if ((prevChar === '/' || prevChar === undefined) && curChar === '*') {\r\n      tokens.push({ type: TokenType.WildCard, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // static params\r\n    if (prevChar === '/' && validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Static, value: getLiteral() });\r\n      continue;\r\n    }\r\n    if (curChar === '(') {\r\n      tokens.push({ type: TokenType.LBracket, value: '(' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (curChar === ')') {\r\n      tokens.push({ type: TokenType.RBracket, value: ')' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (['*', '?', '$', '^', '+'].includes(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: curChar });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // 跳过非法字符\r\n    skipChar(1);\r\n  }\r\n\r\n  return tokens;\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { GetURLParams, Parser, ParserOption, TokenType } from './types';\r\nimport { lexer } from './lexer';\r\nimport { escapeStr, scoreCompare } from './utils';\r\n\r\n// 不同类型参数的匹配得分\r\nenum MatchScore {\r\n  // 固定参数\r\n  static = 10,\r\n  // 动态参数\r\n  param = 6,\r\n  // 通配符参数\r\n  wildcard = 3,\r\n  placeholder = -1,\r\n}\r\n\r\nexport type Params<P> = { [K in keyof P]?: P[K] };\r\n\r\n// 兼容 react v5 matched类型\r\nexport type Matched<P = any> = {\r\n  score: number[];\r\n  params: Params<P>;\r\n  path: string;\r\n  url: string;\r\n  isExact: boolean;\r\n};\r\n\r\nconst defaultOption: Required<ParserOption> = {\r\n  // url匹配时是否大小写敏感\r\n  caseSensitive: false,\r\n  // 是否严格匹配url结尾的/\r\n  strictMode: false,\r\n  // 是否完全精确匹配\r\n  exact: false,\r\n};\r\n// 正则表达式中需要转义的字符\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n// 用于匹配两个//中的的值\r\nconst BASE_PARAM_PATTERN = '[^/]+';\r\n\r\nconst DefaultDelimiter = '/#?';\r\n\r\n/**\r\n * URL匹配整体流程\r\n * 1.词法解析，将URL模板解析为Token\r\n * 2.使用Token生成正则表达式\r\n * 3.利用正则表达式解析URL中参数或填充URL模板\r\n */\r\nexport function createPathParser<Str extends string>(pathname: Str, option?: ParserOption): Parser<GetURLParams<Str>>;\r\nexport function createPathParser<P = unknown>(pathname: string, option?: ParserOption): Parser<P>;\r\nexport function createPathParser<P = unknown>(pathname: string, option: ParserOption = defaultOption): Parser<P> {\r\n  const {\r\n    caseSensitive = defaultOption.caseSensitive,\r\n    strictMode = defaultOption.strictMode,\r\n    exact = defaultOption.exact,\r\n  } = option;\r\n\r\n  let pattern = '^';\r\n  const keys: string[] = [];\r\n  const scores: number[] = [];\r\n\r\n  const tokens = lexer(pathname);\r\n  const onlyHasWildCard = tokens.length === 1 && tokens[0].type === TokenType.WildCard;\r\n  const tokenCount = tokens.length;\r\n  const lastToken = tokens[tokenCount - 1];\r\n  let asteriskCount = 0;\r\n\r\n  /**\r\n   * 用于支持URL中的可选参数/:parma?\r\n   * @description 向前扫描到下一个分隔符/，检查其中是否有?\r\n   * @param currentIdx\r\n   */\r\n  const lookToNextDelimiter = (currentIdx: number): boolean => {\r\n    let hasOptionalParam = false;\r\n    while (currentIdx < tokens.length && tokens[currentIdx].type !== TokenType.Delimiter) {\r\n      if (tokens[currentIdx].value === '?' || tokens[currentIdx].value === '*') {\r\n        hasOptionalParam = true;\r\n      }\r\n      currentIdx++;\r\n    }\r\n    return hasOptionalParam;\r\n  };\r\n  for (let tokenIdx = 0; tokenIdx < tokenCount; tokenIdx++) {\r\n    const token = tokens[tokenIdx];\r\n    const nextToken = tokens[tokenIdx + 1];\r\n    switch (token.type) {\r\n      case TokenType.Delimiter: {\r\n        // 该分隔符后有可选参数则该分割符在匹配时是可选的\r\n        const hasOptional = lookToNextDelimiter(tokenIdx + 1);\r\n        // 该分隔符为最后一个且strictMode===false时，该分割符在匹配时是可选的\r\n        const isSlashOptional = nextToken === undefined && !strictMode;\r\n        pattern += `/${hasOptional || isSlashOptional ? '?' : ''}`;\r\n        break;\r\n      }\r\n      case TokenType.Static:\r\n        pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n        if (nextToken && nextToken.type === TokenType.Pattern) {\r\n          pattern += `(.${nextToken.value})`;\r\n          keys.push(String(asteriskCount));\r\n          asteriskCount++;\r\n        }\r\n        scores.push(MatchScore.static);\r\n        break;\r\n      case TokenType.Param: {\r\n        // 动态参数支持形如/:param、/:param*、/:param?、/:param(\\\\d+)的形式\r\n        let paramRegexp = '';\r\n        if (nextToken) {\r\n          switch (nextToken.type) {\r\n            case TokenType.LBracket:\r\n              // 跳过当前Token和左括号\r\n              tokenIdx += 2;\r\n              while (tokens[tokenIdx].type !== TokenType.RBracket) {\r\n                paramRegexp += tokens[tokenIdx].value;\r\n                tokenIdx++;\r\n              }\r\n              paramRegexp = `(${paramRegexp})`;\r\n              break;\r\n            case TokenType.Pattern:\r\n              tokenIdx++;\r\n              paramRegexp += `(${nextToken.value === '*' ? '.*' : BASE_PARAM_PATTERN})${nextToken.value}`;\r\n              break;\r\n          }\r\n        }\r\n        pattern += paramRegexp ? `(?:${paramRegexp})` : `(${BASE_PARAM_PATTERN})`;\r\n        keys.push(token.value);\r\n        scores.push(MatchScore.param);\r\n        break;\r\n      }\r\n      case TokenType.WildCard:\r\n        keys.push(token.value);\r\n        pattern += `((?:${BASE_PARAM_PATTERN})${onlyHasWildCard ? '?' : ''}(?:/(?:${BASE_PARAM_PATTERN}))*)`;\r\n        scores.push(onlyHasWildCard ? MatchScore.wildcard : MatchScore.placeholder);\r\n        break;\r\n    }\r\n  }\r\n  const isWildCard = lastToken.type === TokenType.WildCard;\r\n\r\n  if (!isWildCard && !exact) {\r\n    if (!strictMode) {\r\n      pattern += `(?:[${escapeStr(DefaultDelimiter)}](?=$))?`;\r\n    }\r\n    if (lastToken.type !== TokenType.Delimiter) {\r\n      pattern += `(?=[${escapeStr(DefaultDelimiter)}]|$)`;\r\n    }\r\n  } else {\r\n    pattern += strictMode ? '$' : `[${escapeStr(DefaultDelimiter)}]?$`;\r\n  }\r\n\r\n  const flag = caseSensitive ? '' : 'i';\r\n  const regexp = new RegExp(pattern, flag);\r\n\r\n  /**\r\n   * @description 根据给定Pattern解析path\r\n   */\r\n  function parse(path: string): Matched<P> | null {\r\n    const reMatch = path.match(regexp);\r\n\r\n    if (!reMatch) {\r\n      return null;\r\n    }\r\n    const matchedPath = reMatch[0];\r\n    const params: Params<P> = {};\r\n    const parseScore: number[] = Array.from(scores);\r\n    for (let i = 1; i < reMatch.length; i++) {\r\n      const param = reMatch[i];\r\n      const key = keys[i - 1];\r\n      if (key === '*' && param) {\r\n        const value = param.split('/');\r\n        if (!Array.isArray(params['*'])) {\r\n          params['*'] = value;\r\n        } else {\r\n          params['*'].push(...value);\r\n        }\r\n        // 完成通配符参数解析后将placeholder替换为wildcard参数的分值\r\n        parseScore.splice(\r\n          scores.indexOf(MatchScore.placeholder),\r\n          1,\r\n          ...new Array(value.length).fill(MatchScore.wildcard)\r\n        );\r\n      } else {\r\n        params[key] = param ? param : undefined;\r\n      }\r\n    }\r\n\r\n    const isExact = path === matchedPath;\r\n    const url = path === '/' && matchedPath === '' ? '/' : matchedPath;\r\n    return { isExact: isExact, path: pathname, url: url, score: parseScore, params: params };\r\n  }\r\n\r\n  /**\r\n   * @description 使用给定参数填充pattern，得到目标URL\r\n   */\r\n  function compile(params: Params<P>): string {\r\n    let path = '';\r\n    for (const token of tokens) {\r\n      switch (token.type) {\r\n        case TokenType.Static:\r\n          path += token.value;\r\n          break;\r\n        case TokenType.Param:\r\n          if (!params[token.value]) {\r\n            throw new Error('Param is invalid.');\r\n          }\r\n          path += params[token.value];\r\n          break;\r\n        case TokenType.WildCard: {\r\n          const wildCard = params['*'];\r\n          if (wildCard instanceof Array) {\r\n            path += wildCard.join('/');\r\n          } else {\r\n            path += wildCard;\r\n          }\r\n          break;\r\n        }\r\n        case TokenType.Delimiter:\r\n          path += token.value;\r\n          break;\r\n      }\r\n    }\r\n    return path;\r\n  }\r\n\r\n  return {\r\n    regexp: regexp,\r\n    keys: keys,\r\n    score: scores,\r\n    compile,\r\n    parse,\r\n  };\r\n}\r\n\r\n/**\r\n * @description 依次使用pathname与pattern进行匹配，根据匹配分数取得分数最高结果\r\n */\r\nexport function matchPath<P = any>(\r\n  pathname: string,\r\n  pattern: string | string[],\r\n  option?: ParserOption\r\n): Matched<P> | null {\r\n  const patterns = Array.isArray(pattern) ? [...pattern] : [pattern];\r\n  const matchedResults: Matched<P>[] = [];\r\n  for (const item of patterns) {\r\n    const parser = createPathParser(item, option);\r\n    const matched = parser.parse(pathname);\r\n    if (matched) {\r\n      matchedResults.push(matched);\r\n    }\r\n  }\r\n  return !matchedResults.length ? null : matchedResults.sort((a, b) => scoreCompare(a.score, b.score))[0];\r\n}\r\n\r\nexport function generatePath<P = any>(path: string, params: Params<P>) {\r\n  const parser = createPathParser(path);\r\n  return parser.compile(params);\r\n}\r\n","import { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath, Params } from '../matcher/parser';\r\nimport { History } from '../history/types';\r\nimport { Location } from './index';\r\n\r\nfunction useHistory<S>(): History<S>;\r\nfunction useHistory() {\r\n  return useContext(RouterContext).history;\r\n}\r\n\r\nfunction useLocation<S>(): Location<S>;\r\nfunction useLocation() {\r\n  return useContext(RouterContext).location;\r\n}\r\n\r\nfunction useParams<P>(): Params<P> | {};\r\nfunction useParams() {\r\n  const match = useContext(RouterContext).match;\r\n  return match ? match.params : {};\r\n}\r\n\r\nfunction useRouteMatch<P>(path?: string): Matched<P> | null;\r\nfunction useRouteMatch(path?: string) {\r\n  const pathname = useLocation().pathname;\r\n  const match = useContext(RouterContext).match;\r\n  if (path) {\r\n    return matchPath(pathname, path);\r\n  }\r\n  return match;\r\n}\r\n\r\nexport { useHistory, useLocation, useParams, useRouteMatch };\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useLayoutEffect, useMemo, useRef, useState, InulaNode } from '@cloudsop/horizon';\r\n\r\nimport { History, Location } from '../history/types';\r\n\r\nimport RouterContext, { RouterContextValue } from './context';\r\n\r\nexport type RouterProps = {\r\n  history: History;\r\n  children?: InulaNode;\r\n};\r\n\r\nfunction Router<P extends RouterProps>(props: P) {\r\n  const { history, children = null } = props;\r\n  const [location, setLocation] = useState(props.history.location);\r\n  const pendingLocation = useRef<Location | null>(null);\r\n  const unListen = useRef<null | (() => void)>(null);\r\n  const isMount = useRef<boolean>(false);\r\n\r\n  // 在Router加载时就监听history地址变化，以保证在始渲染时重定向能正确触发\r\n  if (unListen.current === null)\r\n    unListen.current = history.listen(arg => {\r\n      pendingLocation.current = arg.location;\r\n    });\r\n\r\n  // 模拟componentDidMount和componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    isMount.current = true;\r\n    if (unListen.current) {\r\n      unListen.current();\r\n    }\r\n    // 监听history中的位置变化\r\n    unListen.current = history.listen(arg => {\r\n      if (isMount.current) {\r\n        setLocation(arg.location);\r\n      }\r\n    });\r\n\r\n    if (pendingLocation.current) {\r\n      setLocation(pendingLocation.current);\r\n    }\r\n\r\n    return () => {\r\n      if (unListen.current) {\r\n        isMount.current = false;\r\n        unListen.current();\r\n        unListen.current = null;\r\n        pendingLocation.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const initContextValue: RouterContextValue = useMemo(\r\n    () => ({\r\n      history: history,\r\n      location: location,\r\n      match: { isExact: location.pathname === '/', params: {}, path: '/', score: [], url: '/' },\r\n    }),\r\n    [location],\r\n  );\r\n\r\n  return <RouterContext.Provider value={initContextValue} children={children} />;\r\n}\r\n\r\nexport default Router;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useLayoutEffect, useRef } from '@cloudsop/horizon';\r\n\r\nexport type LifeCycleProps = {\r\n  onMount?: () => void;\r\n  onUpdate?: (prevProps?: LifeCycleProps) => void;\r\n  onUnmount?: () => void;\r\n  data?: any;\r\n};\r\n\r\nexport function LifeCycle(props: LifeCycleProps) {\r\n  // 使用ref保存上一次的props，防止重新渲染\r\n  const prevProps = useRef<LifeCycleProps | null>(null);\r\n  const isMount = useRef(false);\r\n\r\n  const { onMount, onUpdate, onUnmount } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    // 首次挂载 模拟componentDidMount\r\n    if (!isMount.current) {\r\n      isMount.current = true;\r\n      if (onMount) {\r\n        onMount();\r\n      }\r\n    } else {\r\n      // 不是首次渲染 模拟componentDidUpdate\r\n      if (onUpdate) {\r\n        prevProps.current ? onUpdate(prevProps.current) : onUpdate();\r\n      }\r\n    }\r\n    prevProps.current = props;\r\n  });\r\n\r\n  // 模拟componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      if (onUnmount) {\r\n        onUnmount();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, MouseEvent, ComponentType, Ref } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Location } from './index';\r\nimport { createPath, parsePath } from '../history/utils';\r\nimport { Path } from '../history/types';\r\n\r\nexport type LinkProps = {\r\n  component?: ComponentType<any>;\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  replace?: boolean;\r\n  tag?: string;\r\n  /**\r\n   * @deprecated\r\n   * React16以后不再需要该属性\r\n   **/\r\n  innerRef?: Ref<HTMLAnchorElement>;\r\n} & { [key: string]: any };\r\n\r\nconst isModifiedEvent = (event: MouseEvent) => {\r\n  return event.metaKey || event.altKey || event.ctrlKey || event.shiftKey;\r\n};\r\n\r\nconst checkTarget = (target?: any) => {\r\n  return !target || target === '_self';\r\n};\r\n\r\n\r\nfunction Link<P extends LinkProps>(props: P) {\r\n  const { to, replace, component, onClick, target, ...other } = props;\r\n\r\n  const tag = props.tag || 'a';\r\n\r\n  const context = useContext(RouterContext);\r\n  const history = context.history;\r\n\r\n  let location = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  let state: any;\r\n  let path: Partial<Path>;\r\n  if (typeof location === 'string') {\r\n    path = parsePath(location);\r\n  } else {\r\n    const { pathname, hash, search } = location;\r\n    path = { pathname, hash, search };\r\n    state = location.state;\r\n  }\r\n  const href = history.createHref(path);\r\n\r\n  const linkClickEvent = (event: MouseEvent<HTMLAnchorElement>) => {\r\n    try {\r\n      if (onClick) {\r\n        onClick(event);\r\n      }\r\n    } catch (e) {\r\n      event.preventDefault();\r\n      throw e;\r\n    }\r\n\r\n    if (!event.defaultPrevented && event.button === 0 && checkTarget(target) && !isModifiedEvent(event)) {\r\n      // 不是相同的路径执行push操作，是相同的路径执行replace\r\n      const isSamePath = createPath(context.location) === createPath(path);\r\n      const navigate = replace || isSamePath ? history.replace : history.push;\r\n      event.preventDefault();\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  const linkProps = { href: href, onClick: linkClickEvent, ...other };\r\n  return Inula.createElement(tag, linkProps);\r\n}\r\n\r\nexport default Link;","import Inula from '@cloudsop/horizon';\r\nimport { useRef, InulaNode } from '@cloudsop/horizon';\r\nimport Router from './Router';\r\nimport { createBrowserHistory } from '../history/browerHistory';\r\nimport { ConfirmationFunc, History } from '../history/types';\r\n\r\nexport type BaseRouterProps = {\r\n  basename: string;\r\n  getUserConfirmation: ConfirmationFunc;\r\n  children?: InulaNode;\r\n};\r\n\r\nexport type BrowserRouterProps = BaseRouterProps & {\r\n  forceRefresh: boolean;\r\n};\r\n\r\nfunction BrowserRouter<P extends Partial<BrowserRouterProps>>(props: P) {\r\n  // 使用Ref持有History对象，防止重复渲染\r\n  let historyRef = useRef<History>();\r\n\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createBrowserHistory({\r\n      basename: props.basename,\r\n      forceRefresh: props.forceRefresh,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default BrowserRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useRef } from '@cloudsop/horizon';\r\nimport { History } from '../history/types';\r\nimport { BaseRouterProps } from './BrowserRouter';\r\nimport { createHashHistory, urlHashType } from '../history/hashHistory';\r\nimport Router from './Router';\r\n\r\nexport type HashRouterProps = BaseRouterProps & {\r\n  hashType: urlHashType;\r\n};\r\n\r\nfunction HashRouter<P extends Partial<HashRouterProps>>(props: P) {\r\n  let historyRef = useRef<History>();\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createHashHistory({\r\n      basename: props.basename,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n      hashType: props.hashType,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default HashRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport type { LinkProps } from './Link';\r\nimport Link from './Link';\r\nimport { Location, matchPath } from './index';\r\nimport { Matched } from '../matcher/parser';\r\nimport Context from './context';\r\nimport { parsePath } from '../history/utils';\r\n\r\ntype NavLinkProps = {\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  isActive?<P extends { [K in keyof P]?: string }>(match: Matched<P> | null, location: Location): boolean;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n  sensitive?: boolean;\r\n  className?: string | ((isActive: boolean) => string);\r\n  activeClassName?: string;\r\n  // compat react-router NavLink props type\r\n  [key: string]: any;\r\n} & Omit<LinkProps, 'className'>;\r\n\r\ntype Page = 'page';\r\n\r\nfunction NavLink<P extends NavLinkProps>(props: P) {\r\n  const { to, isActive, exact, strict, sensitive, className, activeClassName, ...rest } = props;\r\n  const context = useContext(Context);\r\n\r\n  const toLocation = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  const { pathname } = typeof toLocation === 'string' ? parsePath(toLocation) : toLocation;\r\n\r\n  const match = pathname\r\n    ? matchPath(context.location.pathname, pathname, {\r\n        exact: exact,\r\n        strictMode: strict,\r\n        caseSensitive: sensitive,\r\n      })\r\n    : null;\r\n\r\n  const isLinkActive = !!(isActive ? isActive(match, context.location) : match);\r\n\r\n  let classNames = typeof className === 'function' ? className(isLinkActive) : className;\r\n  if (isLinkActive) {\r\n    classNames = [activeClassName, classNames].filter(Boolean).join(' ');\r\n  }\r\n\r\n  const page: Page = 'page';\r\n  const otherProps = {\r\n    className: classNames,\r\n    'aria-current': isLinkActive ? page : undefined,\r\n    ...rest,\r\n  };\r\n\r\n  return <Link to={to} {...otherProps} />;\r\n}\r\n\r\nexport default NavLink;\r\n","import Inula, { useRef } from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Location } from './index';\r\nimport { Action } from '../history/types';\r\nimport RouterContext from './context';\r\n\r\ntype PromptProps = {\r\n  message?: string | ((location: Partial<Location>, action: Action) => string | boolean);\r\n  when?: boolean | ((location: Partial<Location>) => boolean);\r\n};\r\n\r\nfunction Prompt<P extends PromptProps>(props: P) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { message, when = true } = props;\r\n\r\n  if ((typeof when === 'function' && when(context.location) === false) || !when) {\r\n    return null;\r\n  }\r\n\r\n  const navigate = context.history.block;\r\n\r\n  const release = useRef<(() => void) | null>(null);\r\n\r\n  const onMountFunc = () => {\r\n    release.current = message ? navigate(message) : null;\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    if (prevProps && prevProps.data !== message) {\r\n      if (release.current) {\r\n        release.current();\r\n      }\r\n      release.current = message ? navigate(message) : null;\r\n    }\r\n  };\r\n\r\n  const onUnmountFunc = () => {\r\n    if (release.current) {\r\n      release.current();\r\n    }\r\n    release.current = null;\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} onUnmount={onUnmountFunc} data={message} />;\r\n}\r\n\r\nexport default Prompt;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Matched, createPathParser } from '../matcher/parser';\r\nimport { addHeadSlash, isLocationEqual, parsePath } from '../history/utils';\r\nimport { Location } from './index';\r\n\r\nexport type RedirectProps = {\r\n  to: string | Partial<Location>;\r\n  push?: boolean;\r\n  path?: string;\r\n  from?: string;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n\r\n  // 由Switch计算得到\r\n  readonly computed?: Matched | null;\r\n};\r\n\r\nfunction Redirect<P extends RedirectProps>(props: P) {\r\n  const { to, push = false, computed } = props;\r\n\r\n  const context = useContext(RouterContext);\r\n  const { history } = context;\r\n\r\n  const calcLocation = (): Partial<Location> => {\r\n    if (computed) {\r\n      if (typeof to === 'string') {\r\n        const parser = createPathParser(to);\r\n        const target = parser.compile(computed.params);\r\n        return parsePath(target);\r\n      } else {\r\n        const pathname = to.pathname ? addHeadSlash(to.pathname) : '/';\r\n        const parser = createPathParser(pathname);\r\n        const target = parser.compile(computed.params);\r\n        return { ...to, pathname: target };\r\n      }\r\n    }\r\n    return typeof to === 'string' ? parsePath(to) : to;\r\n  };\r\n\r\n  const navigate = push ? history.push : history.replace;\r\n  const { state, ...path } = calcLocation();\r\n\r\n  const onMountFunc = () => {\r\n    navigate(path, state);\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    // 如果当前页面与重定向前页面不一致，执行跳转\r\n    const prevPath = prevProps?.data as Location;\r\n    if (!isLocationEqual(prevPath, path)) {\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} data={path} />;\r\n}\r\n\r\nexport default Redirect;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { type Matched, matchPath } from '../matcher/parser';\r\nimport { useContext, Children, createElement, InulaNode, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport type { GetURLParams } from '../matcher/types';\r\n\r\nexport type RouteComponentProps<P extends Record<string, any> = {}, S = unknown> = RouteChildrenProps<P, S>;\r\n\r\nexport type RouteChildrenProps<P extends Record<string, any> = {}, S = unknown> = {\r\n  history: History<S>;\r\n  location: Location<S>;\r\n  match: Matched<P> | null;\r\n};\r\n\r\nexport type RouteProps<P extends Record<string, any> = {}, Path extends string = string> = {\r\n  location?: Location;\r\n  component?: ComponentType<RouteComponentProps<P>> | ComponentType<any> | undefined;\r\n  children?: ((props: RouteChildrenProps<P>) => InulaNode) | InulaNode;\r\n  render?: (props: RouteComponentProps<P>) => InulaNode;\r\n  path?: Path | Path[];\r\n  exact?: boolean;\r\n  sensitive?: boolean;\r\n  strict?: boolean;\r\n  computed?: Matched<P>;\r\n};\r\n\r\nfunction Route<Path extends string, P extends Record<string, any> = GetURLParams<Path>>(props: RouteProps<P, Path>) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { computed, location, path, component, render, strict, sensitive, exact } = props;\r\n  let { children } = props;\r\n  let match: Matched<P> | null;\r\n\r\n  const routeLocation = location || context.location;\r\n  if (computed) {\r\n    match = computed;\r\n  } else if (path) {\r\n    match = matchPath<P>(routeLocation.pathname, path, {\r\n      strictMode: strict,\r\n      caseSensitive: sensitive,\r\n      exact: exact,\r\n    });\r\n  } else {\r\n    match = context.match;\r\n  }\r\n  const newProps = { ...context, location: routeLocation, match: match };\r\n\r\n  if (Array.isArray(children) && Children.count(children) === 0) {\r\n    children = null;\r\n  }\r\n\r\n  /**\r\n   * 按顺序获取需要渲染的组件\r\n   * 1.children\r\n   * 2.component\r\n   * 3.render\r\n   * 都没有匹配到返回Null\r\n   */\r\n  const getChildren = (): InulaNode | null => {\r\n    // 如果 match 存在\r\n    if (newProps.match) {\r\n      if (children) {\r\n        if (typeof children === 'function') {\r\n          return children(newProps);\r\n        }\r\n        return children;\r\n      }\r\n\r\n      if (component) {\r\n        return createElement(component, newProps);\r\n      } else if (render) {\r\n        return render(newProps);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      // match为null\r\n      if (typeof children === 'function') {\r\n        return children(newProps);\r\n      }\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return <RouterContext.Provider value={newProps}>{getChildren()}</RouterContext.Provider>;\r\n}\r\n\r\nexport default Route;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, Children, isValidElement, cloneElement, InulaNode, InulaElement } from '@cloudsop/horizon';\r\n\r\nimport { Location } from './index';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath } from '../matcher/parser';\r\nimport type { RouteProps } from './Route';\r\nimport type { RedirectProps } from './Redirect';\r\n\r\nexport type SwitchProps = {\r\n  location?: Location;\r\n  children?: InulaNode;\r\n};\r\n\r\ntype MergeType<T1, T2> = { [K in keyof (T1 & T2)]: K extends keyof T1 ? T1[K] : K extends keyof T2 ? T2[K] : never };\r\n\r\nfunction Switch<P extends SwitchProps>(props: P): InulaElement | null {\r\n  const context = useContext(RouterContext);\r\n  const location = props.location || context.location;\r\n\r\n  let element: InulaElement | null = null;\r\n  let match: Matched | null = null;\r\n\r\n  // 使用forEach不会给React.ReactNode增加key属性,防止重新渲染\r\n  Children.forEach(props.children, node => {\r\n    if (match === null && isValidElement(node)) {\r\n      element = node;\r\n\r\n      const elementProps: MergeType<RouteProps, RedirectProps> = node.props;\r\n      const target = elementProps.path || elementProps.from;\r\n\r\n      // 更新匹配状态，一旦匹配到停止遍历\r\n      if (target) {\r\n        match = matchPath(location.pathname, target, {\r\n          strictMode: elementProps.strict,\r\n          caseSensitive: elementProps.sensitive,\r\n          exact: elementProps.exact,\r\n        });\r\n      } else {\r\n        match = context.match;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (match && element) {\r\n    // 使用cloneElement复制已有组件并更新其Props\r\n    return cloneElement(element, { location: location, computed: match });\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Switch;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\n\r\nfunction withRouter<C extends ComponentType>(Component: C) {\r\n  return function (props: any) {\r\n    const { wrappedComponentRef, ...rest } = props;\r\n    const context = useContext(RouterContext);\r\n\r\n    return <Component {...rest} {...context} ref={wrappedComponentRef} />;\r\n  };\r\n}\r\n\r\nexport default withRouter;\r\n"],"names":["getDefaultConfirmation","message","callBack","window","confirm","isSupportHistory","document","createElement","history","isSupportsPopState","navigator","userAgent","indexOf","Action","EventType","PopDirection","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","createPath","path","search","hash","pathname","startsWith","parsePath","url","parsedPath","hashIdx","substring","searchIdx","createLocation","current","to","state","end","urlObj","getRandKey","Math","random","toString","location","from","fromParts","split","toParts","lastToPart","push","urlPart","index","toIndex","slice","join","parseRelativePath","isLocationEqual","p1","p2","addHeadSlash","stripHeadSlash","normalizeSlash","tempPath","stripBasename","prefix","toLowerCase","includes","charAt","hasBasename","createMemoryRecord","initVal","fn","visitedRecord","getDelta","toIdx","lastIndexOf","fromIdx","addRecord","newRecord","action","curVal","NewVal","prevIdx","newVisitedRecord","replace","_typeof","o","Symbol","iterator","constructor","toPropertyKey","t","r","e","toPrimitive","TypeError","String","Number","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","TransitionManager","instance","Constructor","_classCallCheck","prompt","protoProps","staticProps","value","_this","userConfirmationFunc","result","warning","condition","console","warn","getBaseHistory","type","undefined","transitionManager","popActionListener","listenerCount","supportPopState","listeners","unListeners","browserHistory","pauseTrigger","setupListener","count","addEventListener","PopState","HashChange","removeEventListener","isBlocked","go","step","addListener","listener","isActive","trigger","args","information","cancelListener","filter","block","unblock","setPrompt","destroy","_step","_iterator","_createForOfIteratorHelper","s","n","done","unListen","err","f","getUpdateStateFunc","historyProps","nextState","originPath","delta","commonArgs","popArgs","direction","forward","back","pop","createBrowserHistory","options","supportHistory","isSupportPopState","_options$forceRefresh","forceRefresh","_options$getUserConfi","getUserConfirmation","basename","initLocation","getLocation","getHistoryState","recordOperator","l","_getBaseHistory","event","historyState","isEventPopState","forceJump","updateState","callback","isJump","confirmJumpTo","handlePopState","locationHandler","goBack","goForward","listen","href","createHref","pushState","replaceState","_window$location","_ref","baseHandler","stripHash","idx","getHashContent","createHashHistory","option","_option$hashType","hashType","_option$getUserConfir","pathDecoder","pathEncoder","startLocation","encodedLocation","hashPath","memRecords","forceNextPop","ignorePath","encodedPath","prevLocation","tag","querySelector","getAttribute","RouterContext","name","defaultValue","context","createContext","displayName","TokenType","escapeStr","str","validChar","MatchScore","defaultOption","caseSensitive","strictMode","exact","REGEX_CHARS_RE","BASE_PARAM_PATTERN","DefaultDelimiter","createPathParser","_option$caseSensitive","_option$strictMode","_option$exact","pattern","keys","scores","tokens","urlPath","cleanPath","Error","getLiteral","test","skipChar","curChar","prevChar","Static","Pattern","RBracket","LBracket","WildCard","Param","Delimiter","lexer","onlyHasWildCard","tokenCount","lastToken","asteriskCount","lookToNextDelimiter","currentIdx","hasOptionalParam","tokenIdx","token","nextToken","static","paramRegexp","param","wildcard","placeholder","regexp","RegExp","score","compile","params","wildCard","Array","parse","reMatch","match","matchedPath","parseScore","_params$","isArray","splice","concat","fill","isExact","matchPath","_step2","matchedResults","_iterator2","matched","sort","a","b","score1","score2","score1Length","score2Length","min","scoreCompare","useLocation","useContext","Router","_props$children","children","_useState","useState","setLocation","pendingLocation","useRef","isMount","arg","useLayoutEffect","initContextValue","useMemo","_jsx","jsx","Provider","_objectWithoutPropertiesLoose","excluded","sourceKeys","LifeCycle","prevProps","onMount","onUpdate","onUnmount","Link","component","onClick","other","_excluded","linkProps","preventDefault","defaultPrevented","button","checkTarget","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","isSamePath","navigate","Inula","historyRef","strict","sensitive","className","activeClassName","rest","Context","toLocation","isLinkActive","classNames","Boolean","otherProps","_props$when","when","release","data","_props$push","computed","_calcLocation","calcLocation","render","routeLocation","newProps","Children","element","forEach","node","isValidElement","elementProps","cloneElement","Component","wrappedComponentRef","ref"],"mappings":"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"}