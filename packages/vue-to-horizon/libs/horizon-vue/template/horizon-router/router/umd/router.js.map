{"version":3,"file":"router.js","sources":["../../src/history/dom.ts","../../src/history/types.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js","../../src/history/utils.ts","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/history/transitionManager.ts","../../src/history/waring.ts","../../src/history/baseHistory.ts","../../src/history/browerHistory.ts","../../src/history/hashHistory.ts","../../src/router/context.tsx","../../src/matcher/types.ts","../../src/matcher/utils.ts","../../src/matcher/lexer.ts","../../src/matcher/parser.ts","../../src/router/hooks.ts","../../src/router/Route.tsx","../../src/router/Router.tsx","../../src/router/Switch.tsx","../../../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../src/router/lifeCycleHook.ts","../../src/router/Redirect.tsx","../../src/router/Prompt.tsx","../../src/router/withRouter.tsx","../../src/router/HashRouter.tsx","../../src/router/BrowserRouter.tsx","../../src/router/Link.tsx","../../src/router/NavLink.tsx"],"sourcesContent":["export function isBrowser(): boolean {\r\n  return typeof window !== 'undefined' && window.document && typeof window.document.createElement === 'function';\r\n}\r\n\r\nexport function getDefaultConfirmation(message: string, callBack: (result: boolean) => void) {\r\n  callBack(window.confirm(message));\r\n}\r\n\r\n// 判断浏览器是否支持pushState方法，pushState是browserHistory实现的基础\r\nexport function isSupportHistory(): boolean {\r\n  return isBrowser() && window.history && 'pushState' in window.history;\r\n}\r\n\r\n// 判断浏览器是否支持PopState事件\r\nexport function isSupportsPopState(): boolean {\r\n  return window.navigator.userAgent.indexOf('Trident') === -1;\r\n}\r\n","export type BaseOption = {\r\n  basename?: string;\r\n  getUserConfirmation?: ConfirmationFunc;\r\n};\r\n\r\nexport interface HistoryProps<T = unknown> {\r\n  readonly action: Action;\r\n\r\n  readonly location: Location<T>;\r\n\r\n  length: number;\r\n}\r\n\r\nexport interface AgnosticHistory<T = unknown> extends HistoryProps<T> {\r\n  createHref(path: Partial<Path>): string;\r\n\r\n  push(to: To, state?: T): void;\r\n\r\n  replace(to: To, state?: T): void;\r\n\r\n  listen(listener: CommonListener<T>): () => void;\r\n\r\n  // add listener for listen pop action\r\n  addListener(listener: Listener<T>): () => void;\r\n\r\n  // cancel all pop listeners\r\n  destroy(): void;\r\n\r\n  block(prompt: Prompt<T>): () => void;\r\n\r\n  go(index: number): void;\r\n\r\n  goBack(): void;\r\n\r\n  goForward(): void;\r\n}\r\n\r\nexport type History<T = unknown> = Omit<AgnosticHistory<T>, 'addListener' | 'destroy'>;\r\n\r\nexport interface LocationHandler<T> {\r\n  locationHandler?: ((state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: (() => string) | null;\r\n}\r\n\r\nexport interface CreateLocationHandler<T> {\r\n  locationHandler?: ((basename: string) => (state?: Partial<HistoryState<T>>) => Location<T>) | null;\r\n  baseHandler?: ((basename: string) => () => string) | null;\r\n}\r\n\r\nexport enum Action {\r\n  pop = 'POP',\r\n  push = 'PUSH',\r\n  replace = 'REPLACE',\r\n}\r\n\r\nexport enum EventType {\r\n  PopState = 'popstate',\r\n  HashChange = 'hashchange',\r\n}\r\n\r\nexport enum PopDirection {\r\n  back = 'back',\r\n  forward = 'forward',\r\n  unknown = '',\r\n}\r\n\r\nexport type Path = {\r\n  pathname: string;\r\n\r\n  search: string;\r\n\r\n  hash: string;\r\n};\r\n\r\nexport type HistoryState<T> = {\r\n  state?: T;\r\n\r\n  key: string;\r\n};\r\n\r\nexport type DefaultStateType = unknown;\r\n\r\nexport type Location<T = unknown> = Path & HistoryState<T>;\r\n\r\nexport type To = string | Partial<Path>;\r\n\r\nexport interface CommonListener<T = unknown> {\r\n  (navigation: Navigation<T>): void;\r\n}\r\n\r\nexport interface ActionInfo {\r\n  type: Action;\r\n  direction: PopDirection;\r\n  delta: number;\r\n}\r\n\r\nexport interface PopListener {\r\n  (to: string, from: string, information: ActionInfo): void;\r\n}\r\n\r\nexport interface PopNavigation {\r\n  to: string;\r\n  from: string;\r\n  information: ActionInfo;\r\n}\r\n\r\nexport type Listener<S> =\r\n  | {\r\n      type: 'common';\r\n      listener: CommonListener<S>;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      listener: PopListener;\r\n    };\r\n\r\nexport interface Navigation<T = unknown> {\r\n  action: Action;\r\n\r\n  location: Location<T>;\r\n}\r\n\r\nexport type Prompt<S> = string | boolean | null | ((location: Location<S>, action: Action) => void);\r\n\r\nexport type CallBackFunc = (isJump: boolean) => void;\r\n\r\nexport type ConfirmationFunc = (message: string, callBack: CallBackFunc) => void;\r\n\r\nexport interface TManager<S> {\r\n  setPrompt(next: Prompt<S>): () => void;\r\n\r\n  confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ): void;\r\n}\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import { Action, Location, Path, To } from './types';\r\n\r\nexport function createPath(path: Partial<Path>): string {\r\n  const { search, hash } = path;\r\n  let pathname = path.pathname || '/';\r\n  if (search && search !== '?') {\r\n    pathname += search.startsWith('?') ? search : '?' + search;\r\n  }\r\n  if (hash && hash !== '#') {\r\n    pathname += hash.startsWith('#') ? hash : '#' + hash;\r\n  }\r\n  return pathname;\r\n}\r\n\r\nexport function parsePath(url: string): Partial<Path> {\r\n  let pathname = url || '/';\r\n  const parsedPath: Partial<Path> = {\r\n    search: '',\r\n    hash: '',\r\n  };\r\n\r\n  const hashIdx = url.indexOf('#');\r\n  if (hashIdx > -1) {\r\n    const hash = url.substring(hashIdx);\r\n    parsedPath.hash = hash === '#' ? '' : hash;\r\n    pathname = pathname.substring(0, hashIdx);\r\n  }\r\n\r\n  const searchIdx = url.indexOf('?');\r\n  if (searchIdx > -1) {\r\n    const search = url.substring(searchIdx);\r\n    parsedPath.search = search === '?' ? '' : search;\r\n    pathname = pathname.substring(0, searchIdx);\r\n  }\r\n  parsedPath.pathname = pathname;\r\n  return parsedPath;\r\n}\r\n\r\nexport function createLocation<S>(current: string | Location, to: To, state?: S, key?: string): Readonly<Location<S>> {\r\n  const pathname = typeof current === 'string' ? current : current.pathname;\r\n  const urlObj = typeof to === 'string' ? parsePath(to) : to;\r\n  // 随机key长度取6\r\n  const getRandKey = genRandomKey(6);\r\n  const location = {\r\n    pathname: pathname,\r\n    search: '',\r\n    hash: '',\r\n    state: state,\r\n    key: typeof key === 'string' ? key : getRandKey(),\r\n    ...urlObj,\r\n  };\r\n  if (!location.pathname) {\r\n    location.pathname = pathname ? pathname : '/';\r\n  } else if (!location.pathname.startsWith('/')) {\r\n    location.pathname = parseRelativePath(location.pathname, pathname);\r\n  }\r\n  if (location.search && location.search[0] !== '?') {\r\n    location.search = '?' + location.search;\r\n  }\r\n  if (location.hash && location.hash[0] !== '#') {\r\n    location.hash = '#' + location.hash;\r\n  }\r\n  return location;\r\n}\r\n\r\nexport function isLocationEqual(p1: Partial<Path>, p2: Partial<Path>) {\r\n  return p1.pathname === p2.pathname && p1.search === p2.search && p1.hash === p2.hash;\r\n}\r\n\r\nexport function addHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path;\r\n  }\r\n  return '/' + path;\r\n}\r\n\r\nexport function stripHeadSlash(path: string): string {\r\n  if (path[0] === '/') {\r\n    return path.substring(1);\r\n  }\r\n  return path;\r\n}\r\n\r\nexport function normalizeSlash(path: string): string {\r\n  const tempPath = addHeadSlash(path);\r\n  if (tempPath[tempPath.length - 1] === '/') {\r\n    return tempPath.substring(0, tempPath.length - 1);\r\n  }\r\n  return tempPath;\r\n}\r\n\r\nexport function hasBasename(path: string, prefix: string): boolean {\r\n  return (\r\n    path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && ['/', '?', '#', ''].includes(path.charAt(prefix.length))\r\n  );\r\n}\r\n\r\nexport function stripBasename(path: string, prefix: string): string {\r\n  return hasBasename(path, prefix) ? path.substring(prefix.length) : path;\r\n}\r\n\r\n// 使用随机生成的Key记录被访问过的URL，当Block被被触发时利用delta值跳转到之前的页面\r\nexport function createMemoryRecord<T, S>(initVal: S, fn: (arg: S) => T) {\r\n  let visitedRecord: T[] = [fn(initVal)];\r\n\r\n  function getDelta(to: S, from: S): number {\r\n    let toIdx = visitedRecord.lastIndexOf(fn(to));\r\n    if (toIdx === -1) {\r\n      toIdx = 0;\r\n    }\r\n    let fromIdx = visitedRecord.lastIndexOf(fn(from));\r\n    if (fromIdx === -1) {\r\n      fromIdx = 0;\r\n    }\r\n    return toIdx - fromIdx;\r\n  }\r\n\r\n  function addRecord(current: S, newRecord: S, action: Action) {\r\n    const curVal = fn(current);\r\n    const NewVal = fn(newRecord);\r\n    if (action === Action.push) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      const newVisitedRecord = visitedRecord.slice(0, prevIdx + 1);\r\n      newVisitedRecord.push(NewVal);\r\n      visitedRecord = newVisitedRecord;\r\n    }\r\n    if (action === Action.replace) {\r\n      const prevIdx = visitedRecord.lastIndexOf(curVal);\r\n      if (prevIdx !== -1) {\r\n        visitedRecord[prevIdx] = NewVal;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { getDelta, addRecord };\r\n}\r\n\r\nfunction genRandomKey(length: number): () => string {\r\n  const end = length + 2;\r\n  return () => {\r\n    return Math.random().toString(18).substring(2, end);\r\n  };\r\n}\r\n\r\nexport function parseRelativePath(to: string, from: string) {\r\n  if (to.startsWith('/')) {\r\n    return to;\r\n  }\r\n  const fromParts = from.split('/');\r\n  const toParts = to.split('/');\r\n  const lastToPart = toParts[toParts.length - 1];\r\n  if (lastToPart === '..' || lastToPart === '.') {\r\n    toParts.push('');\r\n  }\r\n  let index = fromParts.length - 1;\r\n  let toIndex = 0;\r\n  let urlPart: string;\r\n\r\n  while (toIndex < toParts.length) {\r\n    urlPart = toParts[toIndex];\r\n    if (urlPart === '.') {\r\n      continue;\r\n    }\r\n    if (urlPart === '..') {\r\n      if (index > 1) {\r\n        index--;\r\n      }\r\n      toIndex++;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return fromParts.slice(0, index).join('/') + '/' + toParts.slice(toIndex).join('/');\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import type { Action, CallBackFunc, ConfirmationFunc, Location, Prompt, TManager } from './types';\r\n\r\nclass TransitionManager<S> implements TManager<S> {\r\n  private prompt: Prompt<S>;\r\n\r\n  constructor() {\r\n    this.prompt = null;\r\n  }\r\n\r\n  public setPrompt(prompt: Prompt<S>): () => void {\r\n    this.prompt = prompt;\r\n\r\n    // 清除Prompt\r\n    return () => {\r\n      if (this.prompt === prompt) {\r\n        this.prompt = null;\r\n      }\r\n    };\r\n  }\r\n\r\n  public confirmJumpTo(\r\n    location: Location<S>,\r\n    action: Action,\r\n    userConfirmationFunc: ConfirmationFunc,\r\n    callBack: CallBackFunc\r\n  ) {\r\n    if (this.prompt !== null) {\r\n      const result = typeof this.prompt === 'function' ? this.prompt(location, action) : this.prompt;\r\n      if (typeof result === 'string') {\r\n        typeof userConfirmationFunc === 'function' ? userConfirmationFunc(result, callBack) : callBack(true);\r\n      } else {\r\n        callBack(result !== false);\r\n      }\r\n    } else {\r\n      callBack(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TransitionManager;\r\n","function warning(condition: any, message: string) {\r\n  if (condition) {\r\n    if (console && typeof console.warn === 'function') {\r\n      console.warn(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default warning;","import { Action, EventType, HistoryProps, Listener, Navigation, PopDirection, PopNavigation, Prompt } from './types';\r\nimport transitionManager from './transitionManager';\r\nimport { isSupportsPopState } from './dom';\r\nimport { createPath } from './utils';\r\n\r\ntype Trigger<S> =\r\n  | {\r\n      type: 'common';\r\n      trigger: (arg: Navigation<S>) => void;\r\n    }\r\n  | {\r\n      type: 'pop';\r\n      trigger: (arg: PopNavigation) => void;\r\n    };\r\n\r\n// 抽取BrowserHistory和HashHistory中相同的方法\r\nexport function getBaseHistory<S>(\r\n  type: 'browser' | 'hash' = 'browser',\r\n  transitionManager: transitionManager<S>,\r\n  popActionListener: (event: PopStateEvent | HashChangeEvent) => void\r\n) {\r\n  let listenerCount = 0;\r\n  const supportPopState = isSupportsPopState();\r\n  let listeners: Trigger<S>[] = [];\r\n  const unListeners: (() => void)[] = [];\r\n  const browserHistory = window.history;\r\n\r\n  // 标记是否暂停触发type为pop类型的listener\r\n  let pauseTrigger = false;\r\n\r\n  function go(step: number, triggerListener = true) {\r\n    if (triggerListener) {\r\n      pauseTrigger = true;\r\n    }\r\n    browserHistory.go(step);\r\n  }\r\n\r\n  function setupListener(count: number | null) {\r\n    if (count === null) {\r\n      listenerCount = 0;\r\n    } else {\r\n      listenerCount += count;\r\n    }\r\n    if (listenerCount === 1 && count === 1) {\r\n      if (type === 'browser' && supportPopState) {\r\n        addEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        addEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    } else if (listenerCount === 0) {\r\n      if (type === 'browser' && supportPopState) {\r\n        removeEventListener(EventType.PopState, popActionListener);\r\n      } else {\r\n        removeEventListener(EventType.HashChange, popActionListener);\r\n      }\r\n    }\r\n  }\r\n\r\n  function addListener(listener: Listener<S>): () => void {\r\n    let isActive = true;\r\n    const wrapper = (args: Navigation<S> | PopNavigation) => {\r\n      if (isActive) {\r\n        if (listener.type === 'common' && 'action' in args) {\r\n          listener.listener(args);\r\n        } else if (listener.type === 'pop' && 'to' in args) {\r\n          listener.listener(args.to, args.from, args.information);\r\n        }\r\n      }\r\n    };\r\n    const trigger: Trigger<S> = { type: listener.type, trigger: wrapper };\r\n    listeners.push(trigger);\r\n    setupListener(1);\r\n\r\n    const cancelListener = () => {\r\n      isActive = false;\r\n      setupListener(-1);\r\n      listeners = listeners.filter(listener => listener !== trigger);\r\n    };\r\n\r\n    unListeners.push(cancelListener);\r\n    return cancelListener;\r\n  }\r\n\r\n  function destroy() {\r\n    for (const unListen of unListeners) {\r\n      unListen();\r\n    }\r\n    unListeners.length = 0;\r\n    setupListener(null);\r\n  }\r\n\r\n  let isBlocked = false;\r\n\r\n  function block(prompt: Prompt<S> = false): () => void {\r\n    const unblock = transitionManager.setPrompt(prompt);\r\n    if (!isBlocked) {\r\n      setupListener(1);\r\n      isBlocked = true;\r\n    }\r\n    return () => {\r\n      if (isBlocked) {\r\n        isBlocked = false;\r\n        setupListener(-1);\r\n      }\r\n      unblock();\r\n    };\r\n  }\r\n\r\n  function getUpdateStateFunc(historyProps: HistoryProps<S>) {\r\n    return function (nextState: Navigation<S> | undefined) {\r\n      const originPath = createPath(historyProps.location);\r\n      if (nextState) {\r\n        Object.assign(historyProps, nextState);\r\n      }\r\n      const delta = browserHistory.length - historyProps.length;\r\n      historyProps.length = browserHistory.length;\r\n      // 避免location引用相同时setState不触发\r\n      const location = Object.assign({}, historyProps.location);\r\n      const commonArgs = { location: location, action: historyProps.action };\r\n      const popArgs: PopNavigation = {\r\n        to: createPath(location),\r\n        from: originPath,\r\n        information: {\r\n          delta: delta,\r\n          direction: delta > 0 ? PopDirection.forward : PopDirection.back,\r\n          type: Action.pop,\r\n        },\r\n      };\r\n      for (let i = 0; i < listeners.length && !pauseTrigger; i++) {\r\n        const listener = listeners[i];\r\n        if (listener.type === 'common') {\r\n          listener.trigger(commonArgs);\r\n        } else if (listener.type === 'pop' && historyProps.action === Action.pop) {\r\n          // vue history listener only trigger when action is pop\r\n          listener.trigger(popArgs);\r\n        }\r\n      }\r\n      pauseTrigger = false;\r\n    };\r\n  }\r\n\r\n  return { go, addListener, block, destroy, getUpdateStateFunc };\r\n}\r\n","import { getDefaultConfirmation, isSupportHistory, isSupportsPopState } from './dom';\r\nimport {\r\n  Action,\r\n  AgnosticHistory,\r\n  BaseOption,\r\n  CommonListener,\r\n  DefaultStateType,\r\n  EventType,\r\n  History,\r\n  HistoryState,\r\n  Listener,\r\n  Location,\r\n  LocationHandler,\r\n  Path,\r\n  To,\r\n} from './types';\r\nimport { createLocation, createMemoryRecord, createPath, normalizeSlash, stripBasename } from './utils';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type BrowserHistoryOption = {\r\n  /**\r\n   * forceRefresh为True时跳转时会强制刷新页面\r\n   */\r\n  forceRefresh?: boolean;\r\n} & BaseOption;\r\n\r\nexport function createBrowserHistory<S = DefaultStateType>(options: BrowserHistoryOption): History<S>;\r\n/**\r\n * @internal\r\n * @desc this override signature only for internal usage\r\n */\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption\r\n): AgnosticHistory<S>;\r\nexport function createBrowserHistory<S = DefaultStateType>(\r\n  options: LocationHandler<S> & BrowserHistoryOption = {}\r\n): AgnosticHistory<S> {\r\n  const supportHistory = isSupportHistory();\r\n  const isSupportPopState = isSupportsPopState();\r\n  const browserHistory = window.history;\r\n  const { forceRefresh = false, getUserConfirmation = getDefaultConfirmation } = options;\r\n\r\n  const basename = options.basename ? normalizeSlash(options.basename) : '';\r\n\r\n  const initLocation = getLocation(getHistoryState());\r\n\r\n  const recordOperator = createMemoryRecord<string, Location<S>>(initLocation, l => l.key);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory<S>(\r\n    'browser',\r\n    transitionManager,\r\n    handlePop\r\n  );\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(-1),\r\n    listen,\r\n    addListener,\r\n    block,\r\n    push,\r\n    replace,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function getHistoryState() {\r\n    return supportHistory ? window.history.state : {};\r\n  }\r\n\r\n  function getLocation(historyState: Partial<HistoryState<S>>) {\r\n    const { search, hash } = window.location;\r\n    const { key, state } = historyState || {};\r\n    let pathname = window.location.pathname;\r\n    pathname = basename ? stripBasename(pathname, basename) : pathname;\r\n\r\n    return createLocation<S>('', { pathname, search, hash }, state, key);\r\n  }\r\n\r\n  // 拦截页面POP事件后，防止返回到的页面被重复拦截\r\n  let forceJump = false;\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceJump) {\r\n      forceJump = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          // 执行跳转行为\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location, history.location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  const isEventPopState = (event: Event): event is PopStateEvent => {\r\n    return event.type === EventType.PopState;\r\n  };\r\n\r\n  function handlePop(event: PopStateEvent | HashChangeEvent) {\r\n    const historyState = isSupportPopState && isEventPopState(event) ? event.state : getHistoryState();\r\n    const handler = options.locationHandler ? options.locationHandler : getLocation;\r\n    handlePopState(handler(historyState));\r\n  }\r\n\r\n  // 取消页面跳转并恢复到跳转前的页面\r\n  function revertPopState(from: Location<S>, to: Location<S>) {\r\n    const delta = recordOperator.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceJump = true;\r\n    }\r\n  }\r\n\r\n  function createHref(path: Partial<Path>) {\r\n    return (options.baseHandler ? options.baseHandler() : basename) + createPath(path);\r\n  }\r\n\r\n  function push(to: To, state?: S) {\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.href = href;\r\n        } else {\r\n          browserHistory.pushState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.href = href;\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, undefined);\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const href = createHref(location);\r\n      const { key, state } = location;\r\n      if (supportHistory) {\r\n        if (forceRefresh) {\r\n          window.location.replace(href);\r\n        } else {\r\n          browserHistory.replaceState({ key: key, state: state }, '', href);\r\n          recordOperator.addRecord(history.location, location, action);\r\n          updateState({ action, location });\r\n        }\r\n      } else {\r\n        warning(state !== undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\r\n        window.location.replace(href);\r\n      }\r\n    });\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { Action, AgnosticHistory, BaseOption, CommonListener, DefaultStateType, Listener, Location, To } from './types';\r\nimport {\r\n  addHeadSlash,\r\n  createLocation,\r\n  createMemoryRecord,\r\n  createPath,\r\n  isLocationEqual,\r\n  normalizeSlash,\r\n  stripBasename,\r\n  stripHeadSlash,\r\n} from './utils';\r\nimport { getDefaultConfirmation } from './dom';\r\nimport TransitionManager from './transitionManager';\r\n\r\nimport warning from './waring';\r\nimport { getBaseHistory } from './baseHistory';\r\n\r\nexport type urlHashType = 'slash' | 'noslash';\r\n\r\ntype HashHistoryOption = {\r\n  hashType?: urlHashType;\r\n} & BaseOption;\r\n\r\n// 获取#前的内容\r\nfunction stripHash(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? path : path.substring(0, idx);\r\n}\r\n\r\n// 获取#后的内容\r\nexport function getHashContent(path: string): string {\r\n  const idx = path.indexOf('#');\r\n  return idx === -1 ? '' : path.substring(idx + 1);\r\n}\r\n\r\nexport function createHashHistory<S = DefaultStateType>(option: HashHistoryOption = {}): AgnosticHistory<S> {\r\n  const browserHistory = window.history;\r\n  const { hashType = 'slash', getUserConfirmation = getDefaultConfirmation } = option;\r\n\r\n  const basename = option.basename ? normalizeSlash(option.basename) : '';\r\n\r\n  const pathDecoder = addHeadSlash;\r\n  const pathEncoder = hashType === 'slash' ? addHeadSlash : stripHeadSlash;\r\n\r\n  const startLocation = getHashContent(window.location.href);\r\n  const encodedLocation = pathEncoder(startLocation);\r\n  // 初始化hash格式不合法时会重定向\r\n  if (startLocation !== encodedLocation) {\r\n    window.location.replace(stripHash(window.location.href) + '#' + encodedLocation);\r\n  }\r\n\r\n  function getLocation() {\r\n    let hashPath = pathDecoder(getHashContent(window.location.hash));\r\n    if (basename) {\r\n      hashPath = stripBasename(hashPath, basename);\r\n    }\r\n\r\n    return createLocation<S>('', hashPath, undefined, 'default');\r\n  }\r\n\r\n  const initLocation = getLocation();\r\n\r\n  const memRecords = createMemoryRecord<string, Location<S>>(initLocation, createPath);\r\n\r\n  const transitionManager = new TransitionManager<S>();\r\n\r\n  function createHref(location: Location<S>) {\r\n    const tag = document.querySelector('base');\r\n    const base = tag && tag.getAttribute('href') ? stripHash(window.location.href) : '';\r\n    return base + '#' + pathEncoder(basename + createPath(location));\r\n  }\r\n\r\n  let forceNextPop = false;\r\n  let ignorePath: null | string = null;\r\n\r\n  const listen = (listener: CommonListener<S>) => {\r\n    const trigger: Listener<S> = { type: 'common', listener: listener };\r\n    return addListener(trigger);\r\n  };\r\n\r\n  const { go, addListener, block, destroy, getUpdateStateFunc } = getBaseHistory(\r\n    'hash',\r\n    transitionManager,\r\n    handleHashChange\r\n  );\r\n\r\n  const history: AgnosticHistory<S> = {\r\n    action: Action.pop,\r\n    length: browserHistory.length,\r\n    location: initLocation,\r\n    go,\r\n    goBack: () => go(-1),\r\n    goForward: () => go(1),\r\n    push,\r\n    replace,\r\n    listen,\r\n    addListener,\r\n    block,\r\n    destroy,\r\n    createHref,\r\n  };\r\n\r\n  const updateState = getUpdateStateFunc(history);\r\n\r\n  function push(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n\r\n    const action = Action.push;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      // 前后hash不一样才进行跳转\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = encodedPath;\r\n        window.location.hash = encodedPath;\r\n\r\n        memRecords.addRecord(history.location, location, action);\r\n\r\n        updateState({ action, location });\r\n      } else {\r\n        updateState(undefined);\r\n      }\r\n    });\r\n  }\r\n\r\n  function replace(to: To, state?: S) {\r\n    warning(state !== undefined, 'Hash history does not support state, it will be ignored');\r\n    const action = Action.replace;\r\n    const location = createLocation<S>(history.location, to, state, '');\r\n\r\n    transitionManager.confirmJumpTo(location, action, getUserConfirmation, isJump => {\r\n      if (!isJump) {\r\n        return;\r\n      }\r\n      const path = createPath(location);\r\n      const encodedPath = pathEncoder(basename + path);\r\n      if (getHashContent(window.location.href) !== encodedPath) {\r\n        ignorePath = path;\r\n        window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n      }\r\n      memRecords.addRecord(history.location, location, action);\r\n      updateState({ action, location });\r\n    });\r\n  }\r\n\r\n  function handleHashChange() {\r\n    const hashPath = getHashContent(window.location.href);\r\n    const encodedPath = pathEncoder(hashPath);\r\n    if (hashPath !== encodedPath) {\r\n      window.location.replace(stripHash(window.location.href) + '#' + encodedPath);\r\n    } else {\r\n      const location = getLocation();\r\n      const prevLocation = history.location;\r\n      if (!forceNextPop && isLocationEqual(location, prevLocation)) {\r\n        return;\r\n      }\r\n      if (ignorePath === createPath(location)) {\r\n        return;\r\n      }\r\n      ignorePath = null;\r\n      handlePopState(location);\r\n    }\r\n  }\r\n\r\n  function handlePopState(location: Location<S>) {\r\n    if (forceNextPop) {\r\n      forceNextPop = false;\r\n      updateState(undefined);\r\n    } else {\r\n      const action = Action.pop;\r\n\r\n      const callback = (isJump: boolean) => {\r\n        if (isJump) {\r\n          updateState({ action: action, location: location });\r\n        } else {\r\n          revertPopState(location);\r\n        }\r\n      };\r\n\r\n      transitionManager.confirmJumpTo(location, action, getUserConfirmation, callback);\r\n    }\r\n  }\r\n\r\n  // 在跳转行为被Block后，用History.go()跳转回之前的页面\r\n  function revertPopState(from: Location<S>) {\r\n    const to = history.location;\r\n    const delta = memRecords.getDelta(to, from);\r\n    if (delta !== 0) {\r\n      go(delta);\r\n      forceNextPop = true;\r\n    }\r\n  }\r\n\r\n  return history;\r\n}\r\n","import { createContext } from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { Matched } from '../matcher/parser';\r\n\r\nfunction createNamedContext<T>(name: string, defaultValue: T) {\r\n  const context = createContext<T>(defaultValue);\r\n  context.displayName = name;\r\n  return context;\r\n}\r\n\r\nexport type RouterContextValue = {\r\n  history: History;\r\n  location: Location;\r\n  match: Matched | null;\r\n};\r\n\r\nconst RouterContext = createNamedContext<RouterContextValue>('Router', {} as any);\r\n\r\nexport default RouterContext;\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { Matched, Params } from './parser';\r\n\r\nexport type Token = {\r\n  type: TokenType;\r\n  value: string;\r\n};\r\n\r\nexport enum TokenType {\r\n  Delimiter = 'delimiter',\r\n  Static = 'static',\r\n  Param = 'param',\r\n  WildCard = 'wildcard',\r\n  LBracket = '(',\r\n  RBracket = ')',\r\n  Pattern = 'pattern',\r\n}\r\n\r\nexport interface Parser<P> {\r\n  regexp: RegExp;\r\n\r\n  keys: string[];\r\n\r\n  score: number[];\r\n\r\n  parse(url: string): Matched<P> | null;\r\n\r\n  compile(params: Params<P>): string;\r\n}\r\n\r\nexport type ParserOption = {\r\n  // 是否大小写敏感\r\n  caseSensitive?: boolean;\r\n  // 是否启用严格模式\r\n  strictMode?: boolean;\r\n  // 精准匹配 兼容 React-RouterV5\r\n  exact?: boolean;\r\n};\r\n\r\ntype ClearLeading<U extends string> = U extends `/${infer R}` ? ClearLeading<R> : U;\r\ntype ClearTailing<U extends string> = U extends `${infer L}/` ? ClearTailing<L> : U;\r\n\r\ntype ParseParam<Param extends string> = Param extends `:${infer R}`\r\n  ? {\r\n      [K in R]: string;\r\n    }\r\n  : {};\r\n\r\ntype MergeParams<OneParam extends Record<string, any>, OtherParam extends Record<string, any>> = {\r\n  readonly [Key in keyof OneParam | keyof OtherParam]?: string;\r\n};\r\n\r\ntype ParseURLString<Str extends string> = Str extends `${infer Param}/${infer Rest}`\r\n  ? MergeParams<ParseParam<Param>, ParseURLString<ClearLeading<Rest>>>\r\n  : ParseParam<Str>;\r\n\r\n// 解析URL中的动态参数，以实现TypeScript提示功能\r\nexport type GetURLParams<U extends string> = ParseURLString<ClearLeading<ClearTailing<U>>>;\r\n","/**\r\n * @description 将url中的//转换为/\r\n */\r\nexport function cleanPath(path: string): string {\r\n  return path.replace(/\\/+/g, '/');\r\n}\r\n\r\nexport function scoreCompare(score1: number[], score2: number[]): number {\r\n  const score1Length = score1.length;\r\n  const score2Length = score2.length;\r\n  const end = Math.min(score1Length, score2Length);\r\n  for (let i = 0; i < end; i++) {\r\n    const delta = score2[i] - score1[i];\r\n    if (delta !== 0) {\r\n      return delta;\r\n    }\r\n  }\r\n  if (score1Length === score2Length) {\r\n    return 0;\r\n  }\r\n  return score1Length > score2Length ? -1 : 1;\r\n}\r\n\r\n// 把正则表达式的特殊符号加两个反斜杠进行转义\r\nexport function escapeStr(str: string) {\r\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\r\n}\r\n","import { Token, TokenType } from './types';\r\nimport { cleanPath } from './utils';\r\n\r\nconst validChar = /[^/:()*?$^+]/;\r\n\r\n// 对Url模板进行词法解析，解析结果为Tokens\r\nexport function lexer(path: string): Token[] {\r\n  const tokens: Token[] = [];\r\n\r\n  if (!path) {\r\n    return tokens;\r\n  }\r\n\r\n  let urlPath = cleanPath(path);\r\n  if (urlPath !== '*' && !urlPath.startsWith('/')) {\r\n    throw new Error(`Url must start with \"/\".`);\r\n  }\r\n\r\n  const getLiteral = () => {\r\n    let name = '';\r\n    while (i < urlPath.length && validChar.test(urlPath[i])) {\r\n      name += urlPath[i];\r\n      skipChar(1);\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const skipChar = (step: number) => {\r\n    i += step;\r\n  };\r\n\r\n  let i = 0;\r\n  while (i < urlPath.length) {\r\n    const curChar = urlPath[i];\r\n    const prevChar = urlPath[i - 1];\r\n\r\n    if (curChar === '/') {\r\n      tokens.push({ type: TokenType.Delimiter, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // dynamic params (/:a)\r\n    if (prevChar === '/' && curChar === ':') {\r\n      skipChar(1);\r\n      tokens.push({ type: TokenType.Param, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // wildCard params (/:*)\r\n    if ((prevChar === '/' || prevChar === undefined) && curChar === '*') {\r\n      tokens.push({ type: TokenType.WildCard, value: urlPath[i] });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    // static params\r\n    if (prevChar === '/' && validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Static, value: getLiteral() });\r\n      continue;\r\n    }\r\n    if (curChar === '(') {\r\n      tokens.push({ type: TokenType.LBracket, value: '(' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (curChar === ')') {\r\n      tokens.push({ type: TokenType.RBracket, value: ')' });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (['*', '?', '$', '^', '+'].includes(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: curChar });\r\n      skipChar(1);\r\n      continue;\r\n    }\r\n    if (validChar.test(curChar)) {\r\n      tokens.push({ type: TokenType.Pattern, value: getLiteral() });\r\n      continue;\r\n    }\r\n    // 跳过非法字符\r\n    skipChar(1);\r\n  }\r\n\r\n  return tokens;\r\n}\r\n","/*\r\n * Copyright (c) 2020 Huawei Technologies Co.,Ltd.\r\n *\r\n * openInula is licensed under Mulan PSL v2.\r\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\r\n * You may obtain a copy of Mulan PSL v2 at:\r\n *\r\n *          http://license.coscl.org.cn/MulanPSL2\r\n *\r\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND,\r\n * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,\r\n * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.\r\n * See the Mulan PSL v2 for more details.\r\n */\r\n\r\nimport { GetURLParams, Parser, ParserOption, TokenType } from './types';\r\nimport { lexer } from './lexer';\r\nimport { escapeStr, scoreCompare } from './utils';\r\n\r\n// 不同类型参数的匹配得分\r\nenum MatchScore {\r\n  // 固定参数\r\n  static = 10,\r\n  // 动态参数\r\n  param = 6,\r\n  // 通配符参数\r\n  wildcard = 3,\r\n  placeholder = -1,\r\n}\r\n\r\nexport type Params<P> = { [K in keyof P]?: P[K] };\r\n\r\n// 兼容 react v5 matched类型\r\nexport type Matched<P = any> = {\r\n  score: number[];\r\n  params: Params<P>;\r\n  path: string;\r\n  url: string;\r\n  isExact: boolean;\r\n};\r\n\r\nconst defaultOption: Required<ParserOption> = {\r\n  // url匹配时是否大小写敏感\r\n  caseSensitive: false,\r\n  // 是否严格匹配url结尾的/\r\n  strictMode: false,\r\n  // 是否完全精确匹配\r\n  exact: false,\r\n};\r\n// 正则表达式中需要转义的字符\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n// 用于匹配两个//中的的值\r\nconst BASE_PARAM_PATTERN = '[^/]+';\r\n\r\nconst DefaultDelimiter = '/#?';\r\n\r\n/**\r\n * URL匹配整体流程\r\n * 1.词法解析，将URL模板解析为Token\r\n * 2.使用Token生成正则表达式\r\n * 3.利用正则表达式解析URL中参数或填充URL模板\r\n */\r\nexport function createPathParser<Str extends string>(pathname: Str, option?: ParserOption): Parser<GetURLParams<Str>>;\r\nexport function createPathParser<P = unknown>(pathname: string, option?: ParserOption): Parser<P>;\r\nexport function createPathParser<P = unknown>(pathname: string, option: ParserOption = defaultOption): Parser<P> {\r\n  const {\r\n    caseSensitive = defaultOption.caseSensitive,\r\n    strictMode = defaultOption.strictMode,\r\n    exact = defaultOption.exact,\r\n  } = option;\r\n\r\n  let pattern = '^';\r\n  const keys: string[] = [];\r\n  const scores: number[] = [];\r\n\r\n  const tokens = lexer(pathname);\r\n  const onlyHasWildCard = tokens.length === 1 && tokens[0].type === TokenType.WildCard;\r\n  const tokenCount = tokens.length;\r\n  const lastToken = tokens[tokenCount - 1];\r\n  let asteriskCount = 0;\r\n\r\n  /**\r\n   * 用于支持URL中的可选参数/:parma?\r\n   * @description 向前扫描到下一个分隔符/，检查其中是否有?\r\n   * @param currentIdx\r\n   */\r\n  const lookToNextDelimiter = (currentIdx: number): boolean => {\r\n    let hasOptionalParam = false;\r\n    while (currentIdx < tokens.length && tokens[currentIdx].type !== TokenType.Delimiter) {\r\n      if (tokens[currentIdx].value === '?' || tokens[currentIdx].value === '*') {\r\n        hasOptionalParam = true;\r\n      }\r\n      currentIdx++;\r\n    }\r\n    return hasOptionalParam;\r\n  };\r\n  for (let tokenIdx = 0; tokenIdx < tokenCount; tokenIdx++) {\r\n    const token = tokens[tokenIdx];\r\n    const nextToken = tokens[tokenIdx + 1];\r\n    switch (token.type) {\r\n      case TokenType.Delimiter: {\r\n        // 该分隔符后有可选参数则该分割符在匹配时是可选的\r\n        const hasOptional = lookToNextDelimiter(tokenIdx + 1);\r\n        // 该分隔符为最后一个且strictMode===false时，该分割符在匹配时是可选的\r\n        const isSlashOptional = nextToken === undefined && !strictMode;\r\n        pattern += `/${hasOptional || isSlashOptional ? '?' : ''}`;\r\n        break;\r\n      }\r\n      case TokenType.Static:\r\n        pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n        if (nextToken && nextToken.type === TokenType.Pattern) {\r\n          pattern += `(.${nextToken.value})`;\r\n          keys.push(String(asteriskCount));\r\n          asteriskCount++;\r\n        }\r\n        scores.push(MatchScore.static);\r\n        break;\r\n      case TokenType.Param: {\r\n        // 动态参数支持形如/:param、/:param*、/:param?、/:param(\\\\d+)的形式\r\n        let paramRegexp = '';\r\n        if (nextToken) {\r\n          switch (nextToken.type) {\r\n            case TokenType.LBracket:\r\n              // 跳过当前Token和左括号\r\n              tokenIdx += 2;\r\n              while (tokens[tokenIdx].type !== TokenType.RBracket) {\r\n                paramRegexp += tokens[tokenIdx].value;\r\n                tokenIdx++;\r\n              }\r\n              paramRegexp = `(${paramRegexp})`;\r\n              break;\r\n            case TokenType.Pattern:\r\n              tokenIdx++;\r\n              paramRegexp += `(${nextToken.value === '*' ? '.*' : BASE_PARAM_PATTERN})${nextToken.value}`;\r\n              break;\r\n          }\r\n        }\r\n        pattern += paramRegexp ? `(?:${paramRegexp})` : `(${BASE_PARAM_PATTERN})`;\r\n        keys.push(token.value);\r\n        scores.push(MatchScore.param);\r\n        break;\r\n      }\r\n      case TokenType.WildCard:\r\n        keys.push(token.value);\r\n        pattern += `((?:${BASE_PARAM_PATTERN})${onlyHasWildCard ? '?' : ''}(?:/(?:${BASE_PARAM_PATTERN}))*)`;\r\n        scores.push(onlyHasWildCard ? MatchScore.wildcard : MatchScore.placeholder);\r\n        break;\r\n    }\r\n  }\r\n  const isWildCard = lastToken.type === TokenType.WildCard;\r\n\r\n  if (!isWildCard && !exact) {\r\n    if (!strictMode) {\r\n      pattern += `(?:[${escapeStr(DefaultDelimiter)}](?=$))?`;\r\n    }\r\n    if (lastToken.type !== TokenType.Delimiter) {\r\n      pattern += `(?=[${escapeStr(DefaultDelimiter)}]|$)`;\r\n    }\r\n  } else {\r\n    pattern += strictMode ? '$' : `[${escapeStr(DefaultDelimiter)}]?$`;\r\n  }\r\n\r\n  const flag = caseSensitive ? '' : 'i';\r\n  const regexp = new RegExp(pattern, flag);\r\n\r\n  /**\r\n   * @description 根据给定Pattern解析path\r\n   */\r\n  function parse(path: string): Matched<P> | null {\r\n    const reMatch = path.match(regexp);\r\n\r\n    if (!reMatch) {\r\n      return null;\r\n    }\r\n    const matchedPath = reMatch[0];\r\n    const params: Params<P> = {};\r\n    const parseScore: number[] = Array.from(scores);\r\n    for (let i = 1; i < reMatch.length; i++) {\r\n      const param = reMatch[i];\r\n      const key = keys[i - 1];\r\n      if (key === '*' && param) {\r\n        const value = param.split('/');\r\n        if (!Array.isArray(params['*'])) {\r\n          params['*'] = value;\r\n        } else {\r\n          params['*'].push(...value);\r\n        }\r\n        // 完成通配符参数解析后将placeholder替换为wildcard参数的分值\r\n        parseScore.splice(\r\n          scores.indexOf(MatchScore.placeholder),\r\n          1,\r\n          ...new Array(value.length).fill(MatchScore.wildcard)\r\n        );\r\n      } else {\r\n        params[key] = param ? param : undefined;\r\n      }\r\n    }\r\n\r\n    const isExact = path === matchedPath;\r\n    const url = path === '/' && matchedPath === '' ? '/' : matchedPath;\r\n    return { isExact: isExact, path: pathname, url: url, score: parseScore, params: params };\r\n  }\r\n\r\n  /**\r\n   * @description 使用给定参数填充pattern，得到目标URL\r\n   */\r\n  function compile(params: Params<P>): string {\r\n    let path = '';\r\n    for (const token of tokens) {\r\n      switch (token.type) {\r\n        case TokenType.Static:\r\n          path += token.value;\r\n          break;\r\n        case TokenType.Param:\r\n          if (!params[token.value]) {\r\n            throw new Error('Param is invalid.');\r\n          }\r\n          path += params[token.value];\r\n          break;\r\n        case TokenType.WildCard: {\r\n          const wildCard = params['*'];\r\n          if (wildCard instanceof Array) {\r\n            path += wildCard.join('/');\r\n          } else {\r\n            path += wildCard;\r\n          }\r\n          break;\r\n        }\r\n        case TokenType.Delimiter:\r\n          path += token.value;\r\n          break;\r\n      }\r\n    }\r\n    return path;\r\n  }\r\n\r\n  return {\r\n    regexp: regexp,\r\n    keys: keys,\r\n    score: scores,\r\n    compile,\r\n    parse,\r\n  };\r\n}\r\n\r\n/**\r\n * @description 依次使用pathname与pattern进行匹配，根据匹配分数取得分数最高结果\r\n */\r\nexport function matchPath<P = any>(\r\n  pathname: string,\r\n  pattern: string | string[],\r\n  option?: ParserOption\r\n): Matched<P> | null {\r\n  const patterns = Array.isArray(pattern) ? [...pattern] : [pattern];\r\n  const matchedResults: Matched<P>[] = [];\r\n  for (const item of patterns) {\r\n    const parser = createPathParser(item, option);\r\n    const matched = parser.parse(pathname);\r\n    if (matched) {\r\n      matchedResults.push(matched);\r\n    }\r\n  }\r\n  return !matchedResults.length ? null : matchedResults.sort((a, b) => scoreCompare(a.score, b.score))[0];\r\n}\r\n\r\nexport function generatePath<P = any>(path: string, params: Params<P>) {\r\n  const parser = createPathParser(path);\r\n  return parser.compile(params);\r\n}\r\n","import { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath, Params } from '../matcher/parser';\r\nimport { History } from '../history/types';\r\nimport { Location } from './index';\r\n\r\nfunction useHistory<S>(): History<S>;\r\nfunction useHistory() {\r\n  return useContext(RouterContext).history;\r\n}\r\n\r\nfunction useLocation<S>(): Location<S>;\r\nfunction useLocation() {\r\n  return useContext(RouterContext).location;\r\n}\r\n\r\nfunction useParams<P>(): Params<P> | {};\r\nfunction useParams() {\r\n  const match = useContext(RouterContext).match;\r\n  return match ? match.params : {};\r\n}\r\n\r\nfunction useRouteMatch<P>(path?: string): Matched<P> | null;\r\nfunction useRouteMatch(path?: string) {\r\n  const pathname = useLocation().pathname;\r\n  const match = useContext(RouterContext).match;\r\n  if (path) {\r\n    return matchPath(pathname, path);\r\n  }\r\n  return match;\r\n}\r\n\r\nexport { useHistory, useLocation, useParams, useRouteMatch };\r\n","import Inula from '@cloudsop/horizon';\r\nimport { History, Location } from './index';\r\nimport { type Matched, matchPath } from '../matcher/parser';\r\nimport { useContext, Children, createElement, InulaNode, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport type { GetURLParams } from '../matcher/types';\r\n\r\nexport type RouteComponentProps<P extends Record<string, any> = {}, S = unknown> = RouteChildrenProps<P, S>;\r\n\r\nexport type RouteChildrenProps<P extends Record<string, any> = {}, S = unknown> = {\r\n  history: History<S>;\r\n  location: Location<S>;\r\n  match: Matched<P> | null;\r\n};\r\n\r\nexport type RouteProps<P extends Record<string, any> = {}, Path extends string = string> = {\r\n  location?: Location;\r\n  component?: ComponentType<RouteComponentProps<P>> | ComponentType<any> | undefined;\r\n  children?: ((props: RouteChildrenProps<P>) => InulaNode) | InulaNode;\r\n  render?: (props: RouteComponentProps<P>) => InulaNode;\r\n  path?: Path | Path[];\r\n  exact?: boolean;\r\n  sensitive?: boolean;\r\n  strict?: boolean;\r\n  computed?: Matched<P>;\r\n};\r\n\r\nfunction Route<Path extends string, P extends Record<string, any> = GetURLParams<Path>>(props: RouteProps<P, Path>) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { computed, location, path, component, render, strict, sensitive, exact } = props;\r\n  let { children } = props;\r\n  let match: Matched<P> | null;\r\n\r\n  const routeLocation = location || context.location;\r\n  if (computed) {\r\n    match = computed;\r\n  } else if (path) {\r\n    match = matchPath<P>(routeLocation.pathname, path, {\r\n      strictMode: strict,\r\n      caseSensitive: sensitive,\r\n      exact: exact,\r\n    });\r\n  } else {\r\n    match = context.match;\r\n  }\r\n  const newProps = { ...context, location: routeLocation, match: match };\r\n\r\n  if (Array.isArray(children) && Children.count(children) === 0) {\r\n    children = null;\r\n  }\r\n\r\n  /**\r\n   * 按顺序获取需要渲染的组件\r\n   * 1.children\r\n   * 2.component\r\n   * 3.render\r\n   * 都没有匹配到返回Null\r\n   */\r\n  const getChildren = (): InulaNode | null => {\r\n    // 如果 match 存在\r\n    if (newProps.match) {\r\n      if (children) {\r\n        if (typeof children === 'function') {\r\n          return children(newProps);\r\n        }\r\n        return children;\r\n      }\r\n\r\n      if (component) {\r\n        return createElement(component, newProps);\r\n      } else if (render) {\r\n        return render(newProps);\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      // match为null\r\n      if (typeof children === 'function') {\r\n        return children(newProps);\r\n      }\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return <RouterContext.Provider value={newProps}>{getChildren()}</RouterContext.Provider>;\r\n}\r\n\r\nexport default Route;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useLayoutEffect, useMemo, useRef, useState, InulaNode } from '@cloudsop/horizon';\r\n\r\nimport { History, Location } from '../history/types';\r\n\r\nimport RouterContext, { RouterContextValue } from './context';\r\n\r\nexport type RouterProps = {\r\n  history: History;\r\n  children?: InulaNode;\r\n};\r\n\r\nfunction Router<P extends RouterProps>(props: P) {\r\n  const { history, children = null } = props;\r\n  const [location, setLocation] = useState(props.history.location);\r\n  const pendingLocation = useRef<Location | null>(null);\r\n  const unListen = useRef<null | (() => void)>(null);\r\n  const isMount = useRef<boolean>(false);\r\n\r\n  // 在Router加载时就监听history地址变化，以保证在始渲染时重定向能正确触发\r\n  if (unListen.current === null)\r\n    unListen.current = history.listen(arg => {\r\n      pendingLocation.current = arg.location;\r\n    });\r\n\r\n  // 模拟componentDidMount和componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    isMount.current = true;\r\n    if (unListen.current) {\r\n      unListen.current();\r\n    }\r\n    // 监听history中的位置变化\r\n    unListen.current = history.listen(arg => {\r\n      if (isMount.current) {\r\n        setLocation(arg.location);\r\n      }\r\n    });\r\n\r\n    if (pendingLocation.current) {\r\n      setLocation(pendingLocation.current);\r\n    }\r\n\r\n    return () => {\r\n      if (unListen.current) {\r\n        isMount.current = false;\r\n        unListen.current();\r\n        unListen.current = null;\r\n        pendingLocation.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const initContextValue: RouterContextValue = useMemo(\r\n    () => ({\r\n      history: history,\r\n      location: location,\r\n      match: { isExact: location.pathname === '/', params: {}, path: '/', score: [], url: '/' },\r\n    }),\r\n    [location],\r\n  );\r\n\r\n  return <RouterContext.Provider value={initContextValue} children={children} />;\r\n}\r\n\r\nexport default Router;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, Children, isValidElement, cloneElement, InulaNode, InulaElement } from '@cloudsop/horizon';\r\n\r\nimport { Location } from './index';\r\nimport RouterContext from './context';\r\nimport { Matched, matchPath } from '../matcher/parser';\r\nimport type { RouteProps } from './Route';\r\nimport type { RedirectProps } from './Redirect';\r\n\r\nexport type SwitchProps = {\r\n  location?: Location;\r\n  children?: InulaNode;\r\n};\r\n\r\ntype MergeType<T1, T2> = { [K in keyof (T1 & T2)]: K extends keyof T1 ? T1[K] : K extends keyof T2 ? T2[K] : never };\r\n\r\nfunction Switch<P extends SwitchProps>(props: P): InulaElement | null {\r\n  const context = useContext(RouterContext);\r\n  const location = props.location || context.location;\r\n\r\n  let element: InulaElement | null = null;\r\n  let match: Matched | null = null;\r\n\r\n  // 使用forEach不会给React.ReactNode增加key属性,防止重新渲染\r\n  Children.forEach(props.children, node => {\r\n    if (match === null && isValidElement(node)) {\r\n      element = node;\r\n\r\n      const elementProps: MergeType<RouteProps, RedirectProps> = node.props;\r\n      const target = elementProps.path || elementProps.from;\r\n\r\n      // 更新匹配状态，一旦匹配到停止遍历\r\n      if (target) {\r\n        match = matchPath(location.pathname, target, {\r\n          strictMode: elementProps.strict,\r\n          caseSensitive: elementProps.sensitive,\r\n          exact: elementProps.exact,\r\n        });\r\n      } else {\r\n        match = context.match;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (match && element) {\r\n    // 使用cloneElement复制已有组件并更新其Props\r\n    return cloneElement(element, { location: location, computed: match });\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Switch;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useLayoutEffect, useRef } from '@cloudsop/horizon';\r\n\r\nexport type LifeCycleProps = {\r\n  onMount?: () => void;\r\n  onUpdate?: (prevProps?: LifeCycleProps) => void;\r\n  onUnmount?: () => void;\r\n  data?: any;\r\n};\r\n\r\nexport function LifeCycle(props: LifeCycleProps) {\r\n  // 使用ref保存上一次的props，防止重新渲染\r\n  const prevProps = useRef<LifeCycleProps | null>(null);\r\n  const isMount = useRef(false);\r\n\r\n  const { onMount, onUpdate, onUnmount } = props;\r\n\r\n  useLayoutEffect(() => {\r\n    // 首次挂载 模拟componentDidMount\r\n    if (!isMount.current) {\r\n      isMount.current = true;\r\n      if (onMount) {\r\n        onMount();\r\n      }\r\n    } else {\r\n      // 不是首次渲染 模拟componentDidUpdate\r\n      if (onUpdate) {\r\n        prevProps.current ? onUpdate(prevProps.current) : onUpdate();\r\n      }\r\n    }\r\n    prevProps.current = props;\r\n  });\r\n\r\n  // 模拟componentWillUnmount\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      if (onUnmount) {\r\n        onUnmount();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Matched, createPathParser } from '../matcher/parser';\r\nimport { addHeadSlash, isLocationEqual, parsePath } from '../history/utils';\r\nimport { Location } from './index';\r\n\r\nexport type RedirectProps = {\r\n  to: string | Partial<Location>;\r\n  push?: boolean;\r\n  path?: string;\r\n  from?: string;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n\r\n  // 由Switch计算得到\r\n  readonly computed?: Matched | null;\r\n};\r\n\r\nfunction Redirect<P extends RedirectProps>(props: P) {\r\n  const { to, push = false, computed } = props;\r\n\r\n  const context = useContext(RouterContext);\r\n  const { history } = context;\r\n\r\n  const calcLocation = (): Partial<Location> => {\r\n    if (computed) {\r\n      if (typeof to === 'string') {\r\n        const parser = createPathParser(to);\r\n        const target = parser.compile(computed.params);\r\n        return parsePath(target);\r\n      } else {\r\n        const pathname = to.pathname ? addHeadSlash(to.pathname) : '/';\r\n        const parser = createPathParser(pathname);\r\n        const target = parser.compile(computed.params);\r\n        return { ...to, pathname: target };\r\n      }\r\n    }\r\n    return typeof to === 'string' ? parsePath(to) : to;\r\n  };\r\n\r\n  const navigate = push ? history.push : history.replace;\r\n  const { state, ...path } = calcLocation();\r\n\r\n  const onMountFunc = () => {\r\n    navigate(path, state);\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    // 如果当前页面与重定向前页面不一致，执行跳转\r\n    const prevPath = prevProps?.data as Location;\r\n    if (!isLocationEqual(prevPath, path)) {\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} data={path} />;\r\n}\r\n\r\nexport default Redirect;\r\n","import Inula, { useRef } from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport { LifeCycle, LifeCycleProps } from './lifeCycleHook';\r\nimport { Location } from './index';\r\nimport { Action } from '../history/types';\r\nimport RouterContext from './context';\r\n\r\ntype PromptProps = {\r\n  message?: string | ((location: Partial<Location>, action: Action) => string | boolean);\r\n  when?: boolean | ((location: Partial<Location>) => boolean);\r\n};\r\n\r\nfunction Prompt<P extends PromptProps>(props: P) {\r\n  const context = useContext(RouterContext);\r\n\r\n  const { message, when = true } = props;\r\n\r\n  if ((typeof when === 'function' && when(context.location) === false) || !when) {\r\n    return null;\r\n  }\r\n\r\n  const navigate = context.history.block;\r\n\r\n  const release = useRef<(() => void) | null>(null);\r\n\r\n  const onMountFunc = () => {\r\n    release.current = message ? navigate(message) : null;\r\n  };\r\n\r\n  const onUpdateFunc = (prevProps?: LifeCycleProps) => {\r\n    if (prevProps && prevProps.data !== message) {\r\n      if (release.current) {\r\n        release.current();\r\n      }\r\n      release.current = message ? navigate(message) : null;\r\n    }\r\n  };\r\n\r\n  const onUnmountFunc = () => {\r\n    if (release.current) {\r\n      release.current();\r\n    }\r\n    release.current = null;\r\n  };\r\n\r\n  return <LifeCycle onMount={onMountFunc} onUpdate={onUpdateFunc} onUnmount={onUnmountFunc} data={message} />;\r\n}\r\n\r\nexport default Prompt;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useContext, ComponentType } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\n\r\nfunction withRouter<C extends ComponentType>(Component: C) {\r\n  return function (props: any) {\r\n    const { wrappedComponentRef, ...rest } = props;\r\n    const context = useContext(RouterContext);\r\n\r\n    return <Component {...rest} {...context} ref={wrappedComponentRef} />;\r\n  };\r\n}\r\n\r\nexport default withRouter;\r\n","import Inula from '@cloudsop/horizon';\r\nimport { useRef } from '@cloudsop/horizon';\r\nimport { History } from '../history/types';\r\nimport { BaseRouterProps } from './BrowserRouter';\r\nimport { createHashHistory, urlHashType } from '../history/hashHistory';\r\nimport Router from './Router';\r\n\r\nexport type HashRouterProps = BaseRouterProps & {\r\n  hashType: urlHashType;\r\n};\r\n\r\nfunction HashRouter<P extends Partial<HashRouterProps>>(props: P) {\r\n  let historyRef = useRef<History>();\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createHashHistory({\r\n      basename: props.basename,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n      hashType: props.hashType,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default HashRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useRef, InulaNode } from '@cloudsop/horizon';\r\nimport Router from './Router';\r\nimport { createBrowserHistory } from '../history/browerHistory';\r\nimport { ConfirmationFunc, History } from '../history/types';\r\n\r\nexport type BaseRouterProps = {\r\n  basename: string;\r\n  getUserConfirmation: ConfirmationFunc;\r\n  children?: InulaNode;\r\n};\r\n\r\nexport type BrowserRouterProps = BaseRouterProps & {\r\n  forceRefresh: boolean;\r\n};\r\n\r\nfunction BrowserRouter<P extends Partial<BrowserRouterProps>>(props: P) {\r\n  // 使用Ref持有History对象，防止重复渲染\r\n  let historyRef = useRef<History>();\r\n\r\n  if (historyRef.current === null || historyRef.current === undefined) {\r\n    historyRef.current = createBrowserHistory({\r\n      basename: props.basename,\r\n      forceRefresh: props.forceRefresh,\r\n      getUserConfirmation: props.getUserConfirmation,\r\n    });\r\n  }\r\n\r\n  return <Router history={historyRef.current}>{props.children}</Router>;\r\n}\r\n\r\nexport default BrowserRouter;","import Inula from '@cloudsop/horizon';\r\nimport { useContext, MouseEvent, ComponentType, Ref } from '@cloudsop/horizon';\r\nimport RouterContext from './context';\r\nimport { Location } from './index';\r\nimport { createPath, parsePath } from '../history/utils';\r\nimport { Path } from '../history/types';\r\n\r\nexport type LinkProps = {\r\n  component?: ComponentType<any>;\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  replace?: boolean;\r\n  tag?: string;\r\n  /**\r\n   * @deprecated\r\n   * React16以后不再需要该属性\r\n   **/\r\n  innerRef?: Ref<HTMLAnchorElement>;\r\n} & { [key: string]: any };\r\n\r\nconst isModifiedEvent = (event: MouseEvent) => {\r\n  return event.metaKey || event.altKey || event.ctrlKey || event.shiftKey;\r\n};\r\n\r\nconst checkTarget = (target?: any) => {\r\n  return !target || target === '_self';\r\n};\r\n\r\n\r\nfunction Link<P extends LinkProps>(props: P) {\r\n  const { to, replace, component, onClick, target, ...other } = props;\r\n\r\n  const tag = props.tag || 'a';\r\n\r\n  const context = useContext(RouterContext);\r\n  const history = context.history;\r\n\r\n  let location = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  let state: any;\r\n  let path: Partial<Path>;\r\n  if (typeof location === 'string') {\r\n    path = parsePath(location);\r\n  } else {\r\n    const { pathname, hash, search } = location;\r\n    path = { pathname, hash, search };\r\n    state = location.state;\r\n  }\r\n  const href = history.createHref(path);\r\n\r\n  const linkClickEvent = (event: MouseEvent<HTMLAnchorElement>) => {\r\n    try {\r\n      if (onClick) {\r\n        onClick(event);\r\n      }\r\n    } catch (e) {\r\n      event.preventDefault();\r\n      throw e;\r\n    }\r\n\r\n    if (!event.defaultPrevented && event.button === 0 && checkTarget(target) && !isModifiedEvent(event)) {\r\n      // 不是相同的路径执行push操作，是相同的路径执行replace\r\n      const isSamePath = createPath(context.location) === createPath(path);\r\n      const navigate = replace || isSamePath ? history.replace : history.push;\r\n      event.preventDefault();\r\n      navigate(path, state);\r\n    }\r\n  };\r\n\r\n  const linkProps = { href: href, onClick: linkClickEvent, ...other };\r\n  return Inula.createElement(tag, linkProps);\r\n}\r\n\r\nexport default Link;","import Inula from '@cloudsop/horizon';\r\nimport { useContext } from '@cloudsop/horizon';\r\nimport type { LinkProps } from './Link';\r\nimport Link from './Link';\r\nimport { Location, matchPath } from './index';\r\nimport { Matched } from '../matcher/parser';\r\nimport Context from './context';\r\nimport { parsePath } from '../history/utils';\r\n\r\ntype NavLinkProps = {\r\n  to: Partial<Location> | string | ((location: Location) => string | Partial<Location>);\r\n  isActive?<P extends { [K in keyof P]?: string }>(match: Matched<P> | null, location: Location): boolean;\r\n  exact?: boolean;\r\n  strict?: boolean;\r\n  sensitive?: boolean;\r\n  className?: string | ((isActive: boolean) => string);\r\n  activeClassName?: string;\r\n  // compat react-router NavLink props type\r\n  [key: string]: any;\r\n} & Omit<LinkProps, 'className'>;\r\n\r\ntype Page = 'page';\r\n\r\nfunction NavLink<P extends NavLinkProps>(props: P) {\r\n  const { to, isActive, exact, strict, sensitive, className, activeClassName, ...rest } = props;\r\n  const context = useContext(Context);\r\n\r\n  const toLocation = typeof to === 'function' ? to(context.location) : to;\r\n\r\n  const { pathname } = typeof toLocation === 'string' ? parsePath(toLocation) : toLocation;\r\n\r\n  const match = pathname\r\n    ? matchPath(context.location.pathname, pathname, {\r\n        exact: exact,\r\n        strictMode: strict,\r\n        caseSensitive: sensitive,\r\n      })\r\n    : null;\r\n\r\n  const isLinkActive = !!(isActive ? isActive(match, context.location) : match);\r\n\r\n  let classNames = typeof className === 'function' ? className(isLinkActive) : className;\r\n  if (isLinkActive) {\r\n    classNames = [activeClassName, classNames].filter(Boolean).join(' ');\r\n  }\r\n\r\n  const page: Page = 'page';\r\n  const otherProps = {\r\n    className: classNames,\r\n    'aria-current': isLinkActive ? page : undefined,\r\n    ...rest,\r\n  };\r\n\r\n  return <Link to={to} {...otherProps} />;\r\n}\r\n\r\nexport default NavLink;\r\n"],"names":["isBrowser","window","document","createElement","getDefaultConfirmation","message","callBack","confirm","isSupportHistory","history","isSupportsPopState","navigator","userAgent","indexOf","Action","EventType","PopDirection","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","createPath","path","search","hash","pathname","startsWith","parsePath","url","parsedPath","hashIdx","substring","searchIdx","createLocation","current","to","state","urlObj","getRandKey","genRandomKey","location","parseRelativePath","isLocationEqual","p1","p2","addHeadSlash","stripHeadSlash","normalizeSlash","tempPath","hasBasename","prefix","toLowerCase","includes","charAt","stripBasename","createMemoryRecord","initVal","fn","visitedRecord","getDelta","from","toIdx","lastIndexOf","fromIdx","addRecord","newRecord","action","curVal","NewVal","push","prevIdx","newVisitedRecord","slice","replace","end","Math","random","toString","fromParts","split","toParts","lastToPart","index","toIndex","urlPart","join","_classCallCheck","instance","Constructor","TypeError","_typeof","o","Symbol","iterator","constructor","toPrimitive","t","r","e","String","Number","toPropertyKey","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","TransitionManager","prompt","value","setPrompt","_this","confirmJumpTo","userConfirmationFunc","result","warning","condition","console","warn","getBaseHistory","type","undefined","transitionManager","popActionListener","listenerCount","supportPopState","listeners","unListeners","browserHistory","pauseTrigger","go","step","triggerListener","setupListener","count","addEventListener","PopState","HashChange","removeEventListener","addListener","listener","isActive","wrapper","args","information","trigger","cancelListener","filter","destroy","_iterator","_createForOfIteratorHelper","_step","s","n","done","unListen","err","f","isBlocked","block","unblock","getUpdateStateFunc","historyProps","nextState","originPath","delta","commonArgs","popArgs","direction","forward","back","pop","createBrowserHistory","options","supportHistory","isSupportPopState","_options$forceRefresh","forceRefresh","_options$getUserConfi","getUserConfirmation","basename","initLocation","getLocation","getHistoryState","recordOperator","l","_getBaseHistory","handlePop","listen","goBack","goForward","createHref","updateState","historyState","_window$location","_ref","forceJump","handlePopState","callback","isJump","revertPopState","isEventPopState","event","handler","locationHandler","baseHandler","href","pushState","replaceState","stripHash","idx","getHashContent","createHashHistory","option","_option$hashType","hashType","_option$getUserConfir","pathDecoder","pathEncoder","startLocation","encodedLocation","hashPath","memRecords","tag","querySelector","base","getAttribute","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","createNamedContext","name","defaultValue","context","createContext","displayName","RouterContext","TokenType","cleanPath","scoreCompare","score1","score2","score1Length","score2Length","min","escapeStr","str","validChar","lexer","tokens","urlPath","Error","getLiteral","test","skipChar","curChar","prevChar","Delimiter","Param","WildCard","Static","LBracket","RBracket","Pattern","MatchScore","defaultOption","caseSensitive","strictMode","exact","REGEX_CHARS_RE","BASE_PARAM_PATTERN","DefaultDelimiter","createPathParser","_option$caseSensitive","_option$strictMode","_option$exact","pattern","keys","scores","onlyHasWildCard","tokenCount","lastToken","asteriskCount","lookToNextDelimiter","currentIdx","hasOptionalParam","tokenIdx","token","nextToken","hasOptional","isSlashOptional","static","paramRegexp","param","wildcard","placeholder","isWildCard","flag","regexp","RegExp","parse","reMatch","match","matchedPath","params","parseScore","Array","isArray","_params$","splice","concat","fill","isExact","score","compile","wildCard","matchPath","patterns","matchedResults","_iterator2","_step2","item","parser","matched","sort","a","b","generatePath","useHistory","useContext","useLocation","useParams","useRouteMatch","Route","computed","component","render","strict","sensitive","children","routeLocation","newProps","Children","getChildren","_jsx","Provider","Router","_props$children","_useState","useState","setLocation","pendingLocation","useRef","isMount","arg","useLayoutEffect","initContextValue","useMemo","Switch","element","forEach","node","isValidElement","elementProps","cloneElement","_objectWithoutPropertiesLoose","excluded","sourceKeys","LifeCycle","prevProps","onMount","onUpdate","onUnmount","Redirect","_props$push","calcLocation","navigate","_calcLocation","_excluded","onMountFunc","onUpdateFunc","prevPath","data","Prompt","_props$when","when","release","onUnmountFunc","withRouter","Component","wrappedComponentRef","rest","ref","HashRouter","historyRef","BrowserRouter","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","checkTarget","Link","onClick","other","linkClickEvent","preventDefault","defaultPrevented","button","isSamePath","linkProps","Inula","NavLink","className","activeClassName","Context","toLocation","isLinkActive","classNames","Boolean","page","otherProps"],"mappings":"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"}